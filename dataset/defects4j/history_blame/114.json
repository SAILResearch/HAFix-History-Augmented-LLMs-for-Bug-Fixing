{
  "id": "114",
  "blame_commit": {
    "commit": {
      "commit_id": "b88d360b3f81de86a0dc4bfa903473a35ba7d795",
      "commit_message": "In order to fix ArgumentCaptor so that it captures only when entire invocation matches. Loads of code changed for this.\nIn order to facilitate better assertions added assertions library FEST (yeah!)\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401563",
      "commit_author": "Szczepan Faber",
      "commit_date": "2009-07-19 20:28:08",
      "commit_parent": "32d1afa546efa0e1fbb622c81e8cadcaf9457e70"
    },
    "function": {
      "function_name": "captureArgumentsFrom",
      "function_code_before": "",
      "function_code_after": "public void captureArgumentsFrom(Invocation i) {\n    int k = 0;\n    for (Matcher m : matchers) {\n        if (m instanceof CapturesArguments) {\n            ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n        }\n        k++;\n    }\n}",
      "function_before_start_line": "",
      "function_before_end_line": "",
      "function_after_start_line": 112,
      "function_after_end_line": 120,
      "function_before_token_count": 0,
      "function_after_token_count": 51,
      "functions_name_modified_file": [
        "matches",
        "captureArgumentsFrom",
        "getInvocation",
        "getMethod",
        "hasSimilarMethod",
        "toString",
        "hasSameMethod",
        "safelyArgumentsMatch",
        "getLocation",
        "InvocationMatcher",
        "getMatchers",
        "argumentsMatch"
      ],
      "functions_name_all_files": [
        "toString",
        "isValidReturnType",
        "_dont_implement_Matcher___instead_extend_BaseMatcher_",
        "shouldNotBeSimilarIfMocksAreDifferent",
        "isVoid",
        "argumentsMatch",
        "isMock",
        "equalArguments",
        "getArguments",
        "Invocation",
        "LocalizedMatcher",
        "NumberOfInvocationsInOrderChecker",
        "shouldMarkInvocationAsVerified",
        "MockitoStubber",
        "setMethodForStubbing",
        "shouldMatchTypesWhenActualMatcherHasCorrectType",
        "shouldAllowAssertionsOnLastArgument",
        "getInvocation",
        "isMockitoMock",
        "shouldToStringWithMatchers",
        "markVerified",
        "check",
        "shouldNotDescribeWithTypeInfoWhenActualMatcherDoesNotHaveCorrectType",
        "getMockHandler",
        "shouldNotMatchTypesWhenActualMatcherDoesNotHaveCorrectType",
        "argumentsToMatchers",
        "shouldAllowCapturingForStubbing",
        "setInvocationForPotentialStubbing",
        "MockHandler",
        "intercept",
        "addConsecutiveAnswer",
        "addAnswerForVoidMethod",
        "getInterceptor",
        "shouldBuildEqualsMatchersWhenNullPassed",
        "MockUtil",
        "shouldDelegateToCapturingMatcher",
        "shouldMarkInvocationsAsVerifiedInOrder",
        "InvocationMatcher",
        "shouldPrintCaptorMatcher",
        "isValidException",
        "addAnswer",
        "shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg",
        "shouldNotEqualIfNumberOfArgumentsDiffer",
        "shouldCaptureArguments",
        "hasSimilarMethod",
        "resetMock",
        "isToString",
        "getLocation",
        "put",
        "returnsPrimitive",
        "shouldBeACitizenOfHashes",
        "hasSameMethod",
        "expandVarArgs",
        "getAllValues",
        "shouldNotBeSimilarToVerifiedInvocation",
        "equals",
        "getObject",
        "getArgumentsCount",
        "captureFrom",
        "getMethodName",
        "MethodInterceptorFilter",
        "setAnswersForStubbing",
        "callRealMethod",
        "shouldCaptureWhenFullArgListMatches",
        "getMockName",
        "verifyNoMoreInteractions",
        "Person",
        "getLastValue",
        "shouldCaptureArgumentsFromInvocation",
        "shouldKnowLastCapturedValue",
        "setup",
        "withExtraTypeInfo",
        "NumberOfInvocationsChecker",
        "hashCodeForMock",
        "answerTo",
        "getRegisteredInvocations",
        "captureArgumentsFrom",
        "shouldAllowAssertionsOnCapturedNull",
        "safelyArgumentsMatch",
        "AtMost",
        "voidMethodStubbable",
        "printMethodReturnType",
        "shouldDescribeWithTypeInfoWhenActualMatcherHasCorrectType",
        "shouldSaySomethingSmartWhenMisused",
        "Emailer",
        "hashCode",
        "isVerified",
        "getMethod",
        "getMock",
        "hasAnswersForStubbing",
        "shouldRemoveVerificationModeEvenWhenInvalidMatchers",
        "getAge",
        "getMatchers",
        "email",
        "matches",
        "isVerifiedInOrder",
        "qualifiedMethodName",
        "markVerifiedInOrder",
        "findAnswerFor",
        "shouldAllowAssertionsOnCapturedArgument",
        "InvalidUseOfMatchersException",
        "getSequenceNumber",
        "createMock",
        "shouldScreamWhenNothingYetCaptured",
        "shouldAllowAssertionsOnAllCapturedArguments",
        "shouldCaptureInt",
        "typeMatches",
        "verify",
        "shouldBeSimilarIfIsOverloadedButUsedWithDifferentArg",
        "describeTo",
        "handle",
        "shouldKnowIfIsSimilarTo",
        "getRawArguments"
      ],
      "functions_name_co_evolved_modified_file": [
        "captureArgumentsFrom"
      ],
      "functions_name_co_evolved_all_files": [
        "captureFrom",
        "shouldMarkInvocationsAsVerifiedInOrder",
        "MethodInterceptorFilter",
        "shouldCaptureWhenFullArgListMatches",
        "shouldRemoveVerificationModeEvenWhenInvalidMatchers",
        "shouldMarkInvocationAsVerified",
        "shouldCaptureArguments",
        "matches",
        "getLastValue",
        "resetMock",
        "markVerifiedInOrder",
        "getDelegate",
        "findAnswerFor",
        "put",
        "shouldCaptureArgumentsFromInvocation",
        "markVerified",
        "check",
        "shouldKnowLastCapturedValue",
        "getMockHandler",
        "createMock",
        "InvalidUseOfMatchersException",
        "shouldScreamWhenNothingYetCaptured",
        "captureArgumentsFrom",
        "MockHandler",
        "intercept",
        "verify",
        "getInterceptor",
        "handle",
        "shouldDelegateToCapturingMatcher",
        "getObject",
        "bindMatchers"
      ]
    },
    "file": {
      "file_name": "InvocationMatcher.java",
      "file_nloc": 92,
      "file_complexity": 28,
      "file_token_count": 624,
      "file_before": "",
      "file_after": "",
      "file_patch": "@@ -11,11 +11,12 @@ import java.util.List;\n import org.hamcrest.Matcher;\n import org.mockito.exceptions.PrintableInvocation;\n import org.mockito.internal.debugging.Location;\n+import org.mockito.internal.matchers.CapturesArguments;\n import org.mockito.internal.reporting.PrintSettings;\n import org.mockito.internal.reporting.PrintingFriendlyInvocation;\n \n @SuppressWarnings(\"unchecked\")\n-public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyInvocation {\n+public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyInvocation, CapturesArgumensFromInvocation {\n \n     private final Invocation invocation;\n     private final List<Matcher> matchers;\n@@ -107,4 +108,14 @@ public class InvocationMatcher implements PrintableInvocation, PrintingFriendlyI\n     public String toString(PrintSettings printSettings) {\n         return invocation.toString(matchers, printSettings);\n     }\n+\n+    public void captureArgumentsFrom(Invocation i) {\n+        int k = 0;\n+        for (Matcher m : matchers) {\n+            if (m instanceof CapturesArguments) {\n+                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);\n+            }\n+            k++;\n+        }\n+    }\n }\n\\ No newline at end of file\n",
      "files_name_in_blame_commit": [
        "Invocation.java",
        "MockUtil.java",
        "InvocationMatcher.java",
        "AtLeastXNumberOfInvocationsInOrderChecker.java",
        "CapturesArgumensFromInvocation.java",
        "CapturingMatcherTest.java",
        "InvalidUseOfMatchersException.java",
        "MockHandlerTest.java",
        "CapturingArgumentsTest.java",
        "MockHandler.java",
        "CapturesArguments.java",
        "ObjectBox.java",
        "InvocationMarkerTest.java",
        "LocalizedMatcherTest.java",
        "NumberOfInvocationsChecker.java",
        "MockitoStubber.java",
        "MethodInterceptorFilter.java",
        "InvocationMarker.java",
        "NumberOfInvocationsInOrderChecker.java",
        "AtLeastXNumberOfInvocationsChecker.java",
        "CapturingMatcher.java",
        "AtMost.java",
        "LocalizedMatcher.java",
        "InvocationMatcherTest.java"
      ]
    }
  },
  "commits_modify_file_before_fix": {
    "size": 61
  }
}