{
  "id": "103",
  "blame_commit": {
    "commit": {
      "commit_id": "5a63bb398ca7fc3951b1c2340512e120ad72a4e2",
      "commit_message": "removed unnecessary parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811833 13f79535-47bb-0310-9956-ffa450edef68",
      "commit_author": "Luc Maisonobe",
      "commit_date": "2009-09-06 16:27:50",
      "commit_parent": "f8254ebbd3ce543854e93539eb0a3375e8e406b6"
    },
    "function": {
      "function_name": "equals",
      "function_code_before": "public static boolean equals(double x, double y) {\n    return ((Double.isNaN(x) && Double.isNaN(y)) || x == y);\n}",
      "function_code_after": "public static boolean equals(double x, double y) {\n    return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n}",
      "function_before_start_line": 404,
      "function_before_end_line": 406,
      "function_after_start_line": 404,
      "function_after_end_line": 406,
      "function_before_token_count": 33,
      "function_after_token_count": 31,
      "functions_name_modified_file": [
        "indicator",
        "distanceInf",
        "distance",
        "binomialCoefficientLog",
        "factorialLog",
        "mulAndCheck",
        "factorial",
        "compareTo",
        "round",
        "addAndCheck",
        "cosh",
        "lcm",
        "normalizeAngle",
        "sign",
        "checkBinomial",
        "nextAfter",
        "binomialCoefficient",
        "gcd",
        "normalizeArray",
        "distance1",
        "log",
        "sinh",
        "pow",
        "scalb",
        "equals",
        "binomialCoefficientDouble",
        "factorialDouble",
        "subAndCheck",
        "roundUnscaled",
        "MathUtils",
        "hash"
      ],
      "functions_name_all_files": [
        "getDimension",
        "RootsOfUnity",
        "getSubMatrix",
        "copyIn",
        "getVarianceImpl",
        "setMaxImpl",
        "getMeanImpl",
        "getReal",
        "sqrt1z",
        "apply",
        "checkArray",
        "AbstractRealMatrix",
        "scalb",
        "AdamsMoultonIntegrator",
        "getN",
        "addStepHandler",
        "binomialCoefficientDouble",
        "getWindowSize",
        "distanceInf",
        "LoessInterpolator",
        "getNorm",
        "checkPositive",
        "TTestImpl",
        "shuffle",
        "nextSecureLong",
        "getColumnMatrix",
        "get",
        "binomialCoefficient",
        "getRow",
        "atan",
        "checkEmpty",
        "getScale",
        "EmbeddedRungeKuttaIntegrator",
        "discardMostRecentElements",
        "getMin",
        "log",
        "sinh",
        "getSumsq",
        "transform",
        "inversetransform2",
        "BigMatrixImpl",
        "Kurtosis",
        "value",
        "getCount",
        "cos",
        "setGeoMeanImpl",
        "binomialCoefficientLog",
        "ChiSquareTestImpl",
        "getConvergence",
        "Skewness",
        "tricube",
        "substituteMostRecentElement",
        "scaleArray",
        "setFunctionValueAccuracy",
        "getCumPct",
        "checkRowIndex",
        "setInitialCapacity",
        "setRowMatrix",
        "checkStrictlyIncreasing",
        "normalizeArray",
        "UnivariateRealSolverImpl",
        "chiSquareDataSetsComparison",
        "sin",
        "checkMultiplicationCompatible",
        "checkSampleData",
        "shouldContract",
        "getCoefficients",
        "getFrobeniusNorm",
        "roundUnscaled",
        "walkInOptimizedOrder",
        "setInterpolationControl",
        "compare",
        "setSkewnessImpl",
        "hashCode",
        "clone",
        "verifyInterpolationArray",
        "getDataRef",
        "setSeed",
        "GraggBulirschStoerIntegrator",
        "homoscedasticTTest",
        "getRan",
        "scalarMultiply",
        "getInternalLength",
        "Complex",
        "isForward",
        "nextAfter",
        "handleStep",
        "setContractionCriteria",
        "gcd",
        "luDecompose",
        "Corrector",
        "inversetransform",
        "getGeoMeanImpl",
        "getPermutation",
        "MathUtils",
        "reset",
        "copy",
        "clear",
        "discardExtremeElements",
        "getNatural",
        "preMultiply",
        "isSquare",
        "addElementRolling",
        "t",
        "getInternalValues",
        "nextHexString",
        "getCumFreq",
        "multiply",
        "indicator",
        "nextPoisson",
        "chiSquareTestDataSetsComparison",
        "getSumFreq",
        "isPowerOf2",
        "resetFunctionValueAccuracy",
        "MultivariateSummaryStatistics",
        "nextLong",
        "normalizeAngle",
        "StatisticalSummaryValues",
        "setStabilityCheck",
        "getMean",
        "getImaginary",
        "expand",
        "setExpansionMode",
        "pairedT",
        "computeOmega",
        "getResult",
        "add",
        "nextPermutation",
        "getEventHandler",
        "nextInt",
        "getRowMatrix",
        "extrapolate",
        "scalarAdd",
        "nextSample",
        "chiSquareTest",
        "getGeometricMeanImpl",
        "DescriptiveStatistics",
        "getSkewness",
        "requiresDenseOutput",
        "setSumImpl",
        "verifyDataSet",
        "tTest",
        "AggregateSummaryStatistics",
        "setMinImpl",
        "nextUniform",
        "factorialDouble",
        "setNumElements",
        "reinitializeBegin",
        "smooth",
        "getArgument",
        "factorial",
        "checkContractExpand",
        "getOmegaImaginary",
        "AggregatingSummaryStatistics",
        "getColumnVector",
        "getStandardDeviation",
        "getRowVector",
        "setResult",
        "aggregate",
        "MultiDimensionalComplexMatrix",
        "valuesIterator",
        "setSumLogImpl",
        "getSumsqImpl",
        "addElement",
        "set",
        "setSubMatrix",
        "getSecRan",
        "getMaxImpl",
        "copyOut",
        "getExpansionMode",
        "getData",
        "AnovaStats",
        "getPolynomialFunction",
        "degree",
        "isInfinite",
        "FastFourierTransformer",
        "end",
        "Frequency",
        "getPercentile",
        "sample",
        "getArray",
        "computeCoefficients",
        "sign",
        "isRootOK",
        "setRow",
        "setImpl",
        "incrementAll",
        "chiSquare",
        "setWindowSize",
        "start",
        "SummaryStatistics",
        "Sum",
        "getRoundingMode",
        "getInterpolatingValues",
        "getSumImpl",
        "RungeKuttaIntegrator",
        "negate",
        "setMinReduction",
        "next",
        "integrate",
        "setSumsqImpl",
        "contract",
        "solveAll",
        "mdfft",
        "homoscedasticT",
        "walkInRowOrder",
        "getRowDimension",
        "setSecureAlgorithm",
        "getSortedValues",
        "MersenneTwister",
        "nextGaussian",
        "setGeometricMeanImpl",
        "tryStep",
        "divide",
        "setExpansionFactor",
        "setStepsizeControl",
        "rescale",
        "setKurtosisImpl",
        "visit",
        "clearResult",
        "abs",
        "getDeterminant",
        "getPct",
        "checkDimension",
        "getMinReduction",
        "getNumElements",
        "checkSignificanceLevel",
        "getKurtosisImpl",
        "getDataAsDoubleArray",
        "getMaxGrowth",
        "nextSecureHexString",
        "setVarianceImpl",
        "getSumLogImpl",
        "getSummary",
        "distance",
        "increment",
        "getSumOfLogs",
        "tan",
        "removeMostRecentValue",
        "setMeanImpl",
        "checkNonNegative",
        "interpolate",
        "getDimensionSizes",
        "LaguerreSolver",
        "tanh",
        "verifyInterval",
        "expandTo",
        "StepNormalizer",
        "checkSubtractionCompatible",
        "getSumLog",
        "getSafety",
        "pairedTTest",
        "setColumnVector",
        "transform2",
        "checkColumnIndex",
        "transpose",
        "getSum",
        "pow",
        "subtract",
        "anovaFValue",
        "getField",
        "buildArray",
        "solve",
        "checkSubMatrixIndex",
        "getMaxCheckInterval",
        "setMaxGrowth",
        "mulAndCheck",
        "readResolve",
        "fft",
        "stepAccepted",
        "addAndCheck",
        "anovaTest",
        "verifySequence",
        "getInterpolatingPoints",
        "getEventTime",
        "anovaPValue",
        "asin",
        "getSecondMoment",
        "ResizableDoubleArray",
        "reSeed",
        "createComplex",
        "setColumn",
        "getCovariance",
        "getMax",
        "setRoundingMode",
        "RandomDataImpl",
        "exp",
        "getColumnAsDoubleArray",
        "hash",
        "acos",
        "toString",
        "setColumnMatrix",
        "getExpansionFactor",
        "Mean",
        "extractField",
        "createContributingStatistics",
        "compareTo",
        "getMinImpl",
        "lcm",
        "setDistribution",
        "setOrderControl",
        "checkBinomial",
        "getFunctionValue",
        "replaceMostRecentValue",
        "distance1",
        "addValue",
        "AdamsBashforthIntegrator",
        "inverse",
        "initializeArrays",
        "updateBandwidthInterval",
        "setPercentileImpl",
        "setElement",
        "verifyBracketing",
        "factorialLog",
        "getRowAsDoubleArray",
        "walkInColumnOrder",
        "setScale",
        "isSingular",
        "OneWayAnovaImpl",
        "discardFrontElements",
        "checkResultComputed",
        "isBracketing",
        "getContractionCriteria",
        "getFunctionValueAccuracy",
        "getMaxIterationCount",
        "equals",
        "getTrace",
        "getEntryAsDouble",
        "getColumn",
        "getPercentileImpl",
        "getKurtosis",
        "getColumnDimension",
        "reSeedSecure",
        "setSafety",
        "getElements",
        "append",
        "cosh",
        "isNaN",
        "sqrt",
        "getSkewnessImpl",
        "nextExponential",
        "getVariance",
        "isSequence",
        "evaluateStep",
        "copySubMatrix",
        "stop",
        "df",
        "anovaStats",
        "setRowVector",
        "subAndCheck",
        "nthRoot",
        "getResults",
        "getSumSq",
        "getLUMatrix",
        "BrentSolver",
        "nextSecureInt",
        "getElement",
        "conjugate",
        "addEventHandler",
        "PolynomialFunctionLagrangeForm",
        "round",
        "getOmegaReal",
        "AbstractFieldMatrix",
        "checkAdditionCompatible",
        "EventState",
        "getValues",
        "evaluate",
        "getEntry",
        "operate",
        "getGeometricMean",
        "checkRectangular",
        "checkAllFiniteReal"
      ],
      "functions_name_co_evolved_modified_file": [
        "gcd",
        "equals",
        "binomialCoefficient"
      ],
      "functions_name_co_evolved_all_files": [
        "compare",
        "nextPoisson",
        "computeOmega",
        "chiSquareTestDataSetsComparison",
        "getOmegaImaginary",
        "chiSquareTest",
        "stepAccepted",
        "isSquare",
        "computeCoefficients",
        "homoscedasticTTest",
        "anovaTest",
        "getInternalLength",
        "isBracketing",
        "getStandardDeviation",
        "handleStep",
        "chiSquare",
        "binomialCoefficient",
        "gcd",
        "abs",
        "chiSquareDataSetsComparison",
        "getDeterminant",
        "pairedTTest",
        "getInternalValues",
        "getValues",
        "evaluateStep",
        "tTest",
        "getNumElements",
        "AggregateSummaryStatistics",
        "evaluate",
        "next",
        "equals",
        "integrate",
        "solve",
        "reinitializeBegin",
        "smooth"
      ]
    },
    "file": {
      "file_name": "MathUtils.java",
      "file_nloc": 749,
      "file_complexity": 230,
      "file_token_count": 5065,
      "file_before": "",
      "file_after": "",
      "file_patch": "@@ -227,7 +227,7 @@ public final class MathUtils {\n             // unnecessary.\n             for (int j = 1, i = n - k + 1; j <= k; i++, j++) {\n                 long d = gcd(i, j);\n-                result = mulAndCheck((result / (j / d)), (i / d));\n+                result = mulAndCheck(result / (j / d), i / d);\n             }\n         }\n         return result;\n@@ -402,7 +402,7 @@ public final class MathUtils {\n      * @return true if the values are equal or both are NaN\n      */\n     public static boolean equals(double x, double y) {\n-        return ((Double.isNaN(x) && Double.isNaN(y)) || x == y);\n+        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;\n     }\n \n     /**\n@@ -614,7 +614,7 @@ public final class MathUtils {\n                         \"overflow: gcd({0}, {1}) is 2^31\",\n                         p, q);\n             }\n-            return (Math.abs(u) + Math.abs(v));\n+            return Math.abs(u) + Math.abs(v);\n         }\n         // keep u and v negative, as negative integers range down to\n         // -2^31, while positive numbers can only be as large as 2^31-1\n",
      "files_name_in_blame_commit": [
        "MersenneTwister.java",
        "LaguerreSolver.java",
        "PolynomialFunctionLagrangeForm.java",
        "Mean.java",
        "EventState.java",
        "Skewness.java",
        "ResizableDoubleArray.java",
        "TTestImpl.java",
        "EmbeddedRungeKuttaIntegrator.java",
        "SummaryStatistics.java",
        "Kurtosis.java",
        "AbstractRealMatrix.java",
        "DescriptiveStatistics.java",
        "AbstractStorelessUnivariateStatistic.java",
        "AbstractFieldMatrix.java",
        "StepNormalizer.java",
        "BigMatrixImpl.java",
        "BrentSolver.java",
        "StatisticalSummaryValues.java",
        "ChiSquareTestImpl.java",
        "Sum.java",
        "OneWayAnovaImpl.java",
        "MathUtils.java",
        "AggregateSummaryStatistics.java",
        "RandomDataImpl.java",
        "RungeKuttaIntegrator.java",
        "FastFourierTransformer.java",
        "MultivariateSummaryStatistics.java",
        "Complex.java",
        "Frequency.java",
        "LoessInterpolator.java",
        "AdamsBashforthIntegrator.java",
        "AdamsMoultonIntegrator.java",
        "UnivariateRealSolverImpl.java",
        "GraggBulirschStoerIntegrator.java"
      ]
    }
  },
  "commits_modify_file_before_fix": {
    "size": 101
  }
}