{
  "id": "61",
  "blame_commit": {
    "commit": {
      "commit_id": "c67cffb2df7d0a6fdd910a099fea783e32345caf",
      "commit_message": "Fix related to jackson-core#209 (via pr jackson-core#263) improvement; multiple-match (or not) now matters.",
      "commit_author": "Tatu Saloranta",
      "commit_date": "2016-03-26 21:20:03",
      "commit_parent": "08c4453e69c7e67af8e64c2037f8d53e276db27b"
    },
    "function": {
      "function_name": "readValues",
      "function_code_before": "public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n    throws IOException, JsonProcessingException\n{\n    if (_dataFormatReaders != null) {\n        return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n    }\n    return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src)));\n}",
      "function_code_after": "public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n    throws IOException, JsonProcessingException\n{\n    if (_dataFormatReaders != null) {\n        return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n    }\n    return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src), true));\n}",
      "function_before_start_line": 1434,
      "function_before_end_line": 1441,
      "function_after_start_line": 1435,
      "function_after_end_line": 1442,
      "function_before_token_count": 58,
      "function_after_token_count": 60,
      "functions_name_modified_file": [
        "withValueToUpdate",
        "withView",
        "withAttribute",
        "at",
        "_detectBindAndReadValues",
        "_detectBindAndClose",
        "_inputStream",
        "createObjectNode",
        "withoutRootName",
        "_with",
        "ObjectReader",
        "_new",
        "getAttributes",
        "_bindAsTree",
        "_verifySchemaType",
        "_findRootDeserializer",
        "_reportUnkownFormat",
        "getConfig",
        "readValues",
        "treeAsTokens",
        "treeToValue",
        "writeValue",
        "writeTree",
        "createArrayNode",
        "getFactory",
        "_bindAndReadValues",
        "_initForMultiRead",
        "withFormatDetection",
        "_initForReading",
        "without",
        "getTypeFactory",
        "getInjectableValues",
        "_bindAndClose",
        "_unwrapAndDeserialize",
        "_considerFilter",
        "forType",
        "withoutFeatures",
        "withRootName",
        "withFeatures",
        "_bindAndCloseAsTree",
        "_prefetchRootDeserializer",
        "_reportUndetectableSource",
        "with",
        "withHandler",
        "readTree",
        "withoutAttribute",
        "withAttributes",
        "_bind",
        "withType",
        "isEnabled",
        "version",
        "readValue",
        "_detectBindAndCloseAsTree",
        "createDeserializationContext",
        "_newIterator",
        "_findTreeDeserializer"
      ],
      "functions_name_all_files": [
        "withValueToUpdate",
        "withView",
        "withAttribute",
        "testPointerLoading",
        "at",
        "_detectBindAndReadValues",
        "testNoPointerLoading",
        "_detectBindAndClose",
        "_inputStream",
        "createObjectNode",
        "withoutRootName",
        "_with",
        "ObjectReader",
        "_new",
        "getAttributes",
        "_bindAsTree",
        "_verifySchemaType",
        "_findRootDeserializer",
        "_reportUnkownFormat",
        "getConfig",
        "readValues",
        "treeAsTokens",
        "treeToValue",
        "writeValue",
        "testParserFeatures",
        "writeTree",
        "createArrayNode",
        "getFactory",
        "testPointerLoadingAsJsonNode",
        "_bindAndReadValues",
        "_initForMultiRead",
        "withFormatDetection",
        "_initForReading",
        "without",
        "getTypeFactory",
        "getInjectableValues",
        "_bindAndClose",
        "_unwrapAndDeserialize",
        "_considerFilter",
        "forType",
        "testPointerLoadingMappingIteratorOne",
        "withoutFeatures",
        "withRootName",
        "withFeatures",
        "_bindAndCloseAsTree",
        "_prefetchRootDeserializer",
        "_reportUndetectableSource",
        "with",
        "testPointerLoadingMappingIteratorMany",
        "withHandler",
        "readTree",
        "withoutAttribute",
        "withAttributes",
        "_bind",
        "withType",
        "isEnabled",
        "version",
        "readValue",
        "_detectBindAndCloseAsTree",
        "createDeserializationContext",
        "_newIterator",
        "_findTreeDeserializer"
      ],
      "functions_name_co_evolved_modified_file": [
        "readTree",
        "_considerFilter",
        "readValue",
        "readValues"
      ],
      "functions_name_co_evolved_all_files": [
        "testPointerLoadingMappingIteratorMany",
        "readTree",
        "_considerFilter",
        "readValues",
        "readValue"
      ]
    },
    "file": {
      "file_name": "ObjectReader.java",
      "file_nloc": 893,
      "file_complexity": 203,
      "file_token_count": 5718,
      "file_before": "",
      "file_after": "",
      "file_patch": "@@ -1163,7 +1163,7 @@ public class ObjectReader\n             return (T) _detectBindAndClose(_dataFormatReaders.findFormat(src), false);\n         }\n         \n-        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src)));\n+        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src), false));\n     }\n \n     /**\n@@ -1180,7 +1180,7 @@ public class ObjectReader\n             _reportUndetectableSource(src);\n         }\n \n-        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src)));\n+        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src), false));\n     }\n     \n     /**\n@@ -1197,7 +1197,7 @@ public class ObjectReader\n             _reportUndetectableSource(src);\n         }\n         \n-        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src)));\n+        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src), false));\n     }\n \n     /**\n@@ -1214,7 +1214,7 @@ public class ObjectReader\n             return (T) _detectBindAndClose(src, 0, src.length);\n         }\n         \n-        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src)));\n+        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src), false));\n     }\n \n     /**\n@@ -1231,7 +1231,8 @@ public class ObjectReader\n             return (T) _detectBindAndClose(src, offset, length);\n         }\n \n-        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src, offset, length)));\n+        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src, offset, length),\n+                false));\n     }\n     \n     @SuppressWarnings(\"unchecked\")\n@@ -1242,7 +1243,7 @@ public class ObjectReader\n             return (T) _detectBindAndClose(_dataFormatReaders.findFormat(_inputStream(src)), true);\n         }\n \n-        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src)));\n+        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src), false));\n     }\n \n     /**\n@@ -1259,7 +1260,7 @@ public class ObjectReader\n             return (T) _detectBindAndClose(_dataFormatReaders.findFormat(_inputStream(src)), true);\n         }\n \n-        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src)));\n+        return (T) _bindAndClose(_considerFilter(_parserFactory.createParser(src), false));\n     }\n \n     /**\n@@ -1277,7 +1278,7 @@ public class ObjectReader\n             _reportUndetectableSource(src);\n         }\n         \n-        return (T) _bindAndClose(_considerFilter(treeAsTokens(src)));\n+        return (T) _bindAndClose(_considerFilter(treeAsTokens(src), false));\n     }\n     \n     /**\n@@ -1296,7 +1297,7 @@ public class ObjectReader\n             return _detectBindAndCloseAsTree(in);\n         }\n \n-        return _bindAndCloseAsTree(_considerFilter(_parserFactory.createParser(in)));\n+        return _bindAndCloseAsTree(_considerFilter(_parserFactory.createParser(in), false));\n     }\n     \n     /**\n@@ -1315,7 +1316,7 @@ public class ObjectReader\n             _reportUndetectableSource(r);\n         }\n         \n-        return _bindAndCloseAsTree(_considerFilter(_parserFactory.createParser(r)));\n+        return _bindAndCloseAsTree(_considerFilter(_parserFactory.createParser(r), false));\n     }\n \n     /**\n@@ -1334,7 +1335,7 @@ public class ObjectReader\n             _reportUndetectableSource(json);\n         }\n \n-        return _bindAndCloseAsTree(_considerFilter(_parserFactory.createParser(json)));\n+        return _bindAndCloseAsTree(_considerFilter(_parserFactory.createParser(json), false));\n     }\n \n     /*\n@@ -1389,7 +1390,7 @@ public class ObjectReader\n             return _detectBindAndReadValues(_dataFormatReaders.findFormat(src), false);\n         }\n         \n-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src)));\n+        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src), true));\n     }\n     \n     /**\n@@ -1402,7 +1403,7 @@ public class ObjectReader\n         if (_dataFormatReaders != null) {\n             _reportUndetectableSource(src);\n         }\n-        JsonParser p = _considerFilter(_parserFactory.createParser(src));\n+        JsonParser p = _considerFilter(_parserFactory.createParser(src), true);\n         _initForMultiRead(p);\n         p.nextToken();\n         DeserializationContext ctxt = createDeserializationContext(p);\n@@ -1421,7 +1422,7 @@ public class ObjectReader\n         if (_dataFormatReaders != null) {\n             _reportUndetectableSource(json);\n         }\n-        JsonParser p = _considerFilter(_parserFactory.createParser(json));\n+        JsonParser p = _considerFilter(_parserFactory.createParser(json), true);\n         _initForMultiRead(p);\n         p.nextToken();\n         DeserializationContext ctxt = createDeserializationContext(p);\n@@ -1437,7 +1438,7 @@ public class ObjectReader\n         if (_dataFormatReaders != null) {\n             return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n         }\n-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src)));\n+        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src), true));\n     }\n \n     /**\n@@ -1458,7 +1459,7 @@ public class ObjectReader\n             return _detectBindAndReadValues(\n                     _dataFormatReaders.findFormat(_inputStream(src)), false);\n         }\n-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src)));\n+        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src), true));\n     }\n \n     /**\n@@ -1473,7 +1474,7 @@ public class ObjectReader\n             return _detectBindAndReadValues(\n                     _dataFormatReaders.findFormat(_inputStream(src)), true);\n         }\n-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src)));\n+        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src), true));\n     }\n \n     /*\n@@ -1546,9 +1547,11 @@ public class ObjectReader\n     /**\n      * Consider filter when creating JsonParser.  \n      */\n-    protected JsonParser _considerFilter(final JsonParser p) {\n-        return _filter == null || FilteringParserDelegate.class.isInstance(p) \n-                ? p : new FilteringParserDelegate(p, _filter, false, false);\n+    protected JsonParser _considerFilter(final JsonParser p, boolean multiValue) {\n+        // 26-Mar-2016, tatu: Need to allow multiple-matches at least if we have\n+        //    have a multiple-value read (that is, \"readValues()\").\n+        return ((_filter == null) || FilteringParserDelegate.class.isInstance(p))\n+                ? p : new FilteringParserDelegate(p, _filter, false, multiValue);\n     }\n     \n     protected Object _bindAndClose(JsonParser p) throws IOException\n",
      "files_name_in_blame_commit": [
        "ObjectReaderTest.java",
        "ObjectReader.java"
      ]
    }
  },
  "commits_modify_file_before_fix": {
    "size": 81
  }
}