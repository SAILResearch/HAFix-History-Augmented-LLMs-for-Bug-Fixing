{
  "id": "22",
  "blame_commit": {
    "commit": {
      "commit_id": "6b49cfd9022fe111bdad745c78ea877fbc2f7ba3",
      "commit_message": "Initial commit.\n\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@2 b0f006be-c8cd-11de-a2e8-8d36a3108c74",
      "commit_author": "nicholas.j.santos@gmail.com",
      "commit_date": "2009-11-03 23:51:57",
      "commit_parent": "7e0d71b3d68ad4788a094d8618e2b0aa474cf3db"
    },
    "function": {
      "function_name": "declareArguments",
      "function_code_before": "",
      "function_code_after": "private void declareArguments(Node functionNode) {\n  Node astParameters = functionNode.getFirstChild().getNext();\n  Node body = astParameters.getNext();\n  FunctionType functionType = (FunctionType) functionNode.getJSType();\n  if (functionType != null) {\n    Node jsDocParameters = functionType.getParametersNode();\n    if (jsDocParameters != null) {\n      Node jsDocParameter = jsDocParameters.getFirstChild();\n      for (Node astParameter : astParameters.children()) {\n        if (jsDocParameter != null) {\n          defineSlot(astParameter, functionNode,\n              jsDocParameter.getJSType(), true);\n          jsDocParameter = jsDocParameter.getNext();\n        } else {\n          defineSlot(astParameter, functionNode, null, true);\n        }\n      }\n    }\n  }\n} // end declareArguments",
      "function_before_start_line": "",
      "function_before_end_line": "",
      "function_after_start_line": 1246,
      "function_after_end_line": 1265,
      "function_before_token_count": 0,
      "function_after_token_count": 133,
      "functions_name_modified_file": [
        "defineName",
        "CollectProperties",
        "declareNativeFunctionType",
        "getFunctionType",
        "checkForTypedef",
        "AbstractScopeBuilder",
        "getEnumType",
        "declareNativeValueType",
        "GlobalScopeBuilder",
        "getObjectSlot",
        "shouldTraverse",
        "declareArguments",
        "getPrototypePropertyOwner",
        "handleFunctionInputs",
        "define",
        "defineSlot",
        "checkForOldStyleTypedef",
        "visit",
        "TypedScopeCreator",
        "getDeclaredGetPropType",
        "build",
        "createScope",
        "maybeDeclareQualifiedName",
        "getDeclaredTypeInAnnotation",
        "declareNativeType",
        "LocalScopeBuilder",
        "createInitialScope",
        "maybeCollectMember"
      ],
      "functions_name_all_files": [
        "hasGeneratedAnyIds",
        "canBeCalled",
        "testTopLevelClass5",
        "testGoodCrossModuleRequire1",
        "getCurrentContext",
        "testRemovalMultipleAssignment1",
        "fromCode",
        "testAutoboxedDeprecatedProperty",
        "getOrCreateConstructor",
        "testModule",
        "main",
        "processContinueStatement",
        "processBlock",
        "addFunctionDeclaration",
        "testMakeLocalNamesUniqueWithoutContext",
        "traverseInnerNode",
        "XPathEvaluator",
        "getCharIgnoreLineEnd",
        "defineNameIfNotExists",
        "testPrivateAccessForProperties2",
        "testReadPropertyReferencedByGeneratedCode",
        "insertNewKey",
        "ArrowType",
        "setNoSideEffects",
        "testStopRemovalAtNonQualifiedName",
        "testCostBasedInliningComplex3",
        "testConstructorNode",
        "getIgnoring",
        "getImplicitActionsFromProp",
        "testComma4",
        "addLeftExpr",
        "codeBug",
        "testPrototypeProperties",
        "addAllSiblings",
        "traverseFunction",
        "AnonymousFunctionNamingCallback",
        "FunctionInformation",
        "reserveCharacters",
        "Compiler",
        "addToDefIfLocal",
        "reportWarningAsError",
        "setProcessObjectPropertyString",
        "testNoRewriteDeclUsedAsCallArgument",
        "fastAllPathsReturnCheck",
        "NewRhinoErrorReporter",
        "testInheritanceDetection6",
        "testPrototypeMethodDefinition",
        "OptimizeArgumentsArray",
        "getSortedPropTypes",
        "testSimpleNoDefault",
        "testFor",
        "testNoRewriteVarArgs",
        "testMissingModuleDependencySkipNonStrict",
        "newInstanceForTesting",
        "assertMatch",
        "testCanInlineReferenceToFunction34",
        "isNestedAssign",
        "ObjToIntMap",
        "testRemoveVarDeclartion3",
        "getPositionOnEndLine",
        "initialize",
        "testInlineIntoRhsOfAssign",
        "toStringTreeImpl",
        "reportRuntimeError4",
        "readCDATA",
        "testInlineFunctions15",
        "testNoProtectedAccessForProperties3",
        "getActingCallback",
        "testRewriteDefinitionBeforeUse",
        "replaceAccessor",
        "XMLDOMDocument",
        "processForInLoop",
        "testApply2",
        "testDoNotChangeLocalScopeReferencedInstanceOf",
        "testAbbreviatedShiftAssignment2",
        "testRemoveDuplicateVarDeclarations",
        "testRemoveOneOptionalOneRequired",
        "visitAssign",
        "formatError",
        "applyDelegateRelationship",
        "testMultiLevelCollapse",
        "appendString",
        "expectIndexMatch",
        "addNonUnionType",
        "CSSValue",
        "getMarkers",
        "testHook8",
        "caseNullType",
        "newlineJoin",
        "renameVars",
        "matchToken",
        "testFunctions",
        "getNameNewName",
        "testInlineFunctions16",
        "toBoolean",
        "testInheritanceDetection5",
        "testNoProtectedAccessForProperties4",
        "testMultiFunctionMapping",
        "testGetFunctionName",
        "testFunctionsWithJsDoc3",
        "SQLError",
        "testNotInfiniteLoop",
        "testFailWithOneNew",
        "testInline11",
        "testImplicitCallFromProperty",
        "testRenameRedeclaredGlobals",
        "processGlobalFunctionDeclaration",
        "setUp",
        "testFunctions2",
        "testFunctionsAreExported",
        "testGlobalThis1",
        "findInjectionPoint",
        "setFunctionThrows",
        "testMergesWithOneDefinition",
        "normalizeBlocks",
        "testNoInlineOfNonGlobalFunction1",
        "computeFallThrough",
        "pushAnnotations",
        "HTMLLinkElement",
        "CompilerTestCase",
        "testMixin7",
        "testAnnotationInExterns3",
        "invertContextualRenaming",
        "insertAliasDeclaration",
        "testCostBasedInliningComplex1",
        "getUndirectedGraphEdges",
        "update",
        "NameReferenceGraph",
        "CSSImportRule",
        "GearsResourceStore",
        "findConstantParameters",
        "testAddDependency",
        "createModuleStar",
        "OldRhinoErrorReporter",
        "testCanInlineReferenceToFunctionInExpression7",
        "sortInputsByDeps",
        "testFunctionPrototype",
        "tryFoldGetProp",
        "addWrite",
        "testSimpleAssign",
        "getBeginningLineNumber",
        "testEnumOfObjects4",
        "LightweightMessageFormatter",
        "GearsDesktop",
        "Comparator<DiGraphNode<Node,Branch>>",
        "inlineFunction",
        "getGraphvizEdges",
        "createRefForTesting",
        "applyToOptions",
        "appendFunctionValue",
        "isCompoundAssignment",
        "neighborIterator",
        "setFileLevelJsDocBuilder",
        "canRename",
        "getFunctionInstanceTypes",
        "setTaintsGlobalState",
        "PropertyAssignAction",
        "testCollectedFunctionStub",
        "testCanInlineReferenceToFunction25",
        "testBreakCrossFunction",
        "newString",
        "markPrototypePropertyCandidate",
        "testReturnInFinally2",
        "testReplaceGetter2",
        "testNoPrivateAccessForProperties5",
        "isAliasableType",
        "RuntimeObject",
        "VerifyingCallback",
        "HTMLFrameSetElement",
        "testMutateInitializeUninitializedVars1",
        "testReplaceReturnConst2",
        "GearsPositionOptions",
        "endLine",
        "encodeURIComponent",
        "getInfoForNameNode",
        "Config",
        "testMaybeAddTempsForCallArguments25",
        "testOverlappingInlines",
        "ReplaceStrings",
        "CompilerOptions",
        "isGeneratedScript",
        "getSingletonGetterClassName",
        "testConstantDefinition1",
        "testStaticFunctionReferencingThis1",
        "split",
        "testSplitMupltiFuntions",
        "disable_testSplitAssign",
        "visitAnnotatedAssignGetprop",
        "Reduction",
        "XPathExpression",
        "testInlineConstants",
        "testExceptionThrowingAssignments",
        "NameAnalyzer",
        "recordThrowDescription",
        "markObjLitPropertyCandidate",
        "testComplexInlineVars6",
        "testProvideAfterDeclarationError",
        "testDoNotRenameExportedName",
        "check",
        "testExtractingSingleClassPrototype",
        "testRecursiveFunction2",
        "flush",
        "DOMImplementationCSS",
        "reportChange",
        "RemoveConstantExpressions",
        "EnumType",
        "handleTry",
        "testFoldBlock",
        "getGreatestSubtypeWithProperty",
        "testConfusingNames",
        "testObjectLiteralNotRenamed",
        "testInlineConditionallyDefinedConstant3",
        "testMethod1",
        "testAnonymous5",
        "isUseDynamicScope",
        "getVars",
        "undefWriteError",
        "AstControlFlowGraph",
        "testExtends",
        "ignore",
        "newTracer",
        "getExistingIntProp",
        "maybeSetBaseType",
        "CombinedLiveRangeChecker",
        "SetNoSideEffectCallProperty",
        "BranchedFlowState",
        "isCandidateFunction",
        "getReplacementReturnStatement",
        "traverseCatch",
        "rebuildInputsFromModules",
        "testMultipleInterfaces",
        "ReferenceError",
        "setColorizeErrorOutput",
        "testGlobalThis",
        "testExternName1",
        "parseRecordType",
        "maybeGetSingleReturnRValue",
        "getOptionalNodeComparator",
        "isPrototypePropertyDeclaration",
        "MaxIterationsExceededException",
        "testIsAnonymousFunction2",
        "escape",
        "PrintStreamErrorManager",
        "testReturn2",
        "getCustomPasses",
        "testNoOptimizationForGoogExportSymbol",
        "getContextualRenameInverter",
        "isLoopStructure",
        "runInSerial",
        "getLicense",
        "testMovePrototypeMethod",
        "isConnected",
        "ensureTyped",
        "matchesStringContext",
        "testNoInlineAliases3",
        "GoogleCodeRemovalTest",
        "testInlineEmptyFunction4",
        "checkDelete",
        "setSource",
        "getImplementedInterfaces",
        "testInline19b",
        "HTMLStyleElement",
        "addSimplifiedChildren",
        "semicolonSplit",
        "getInEdges",
        "getProcessor",
        "addDeclaredName",
        "testOverriding2",
        "createParametersWithVarArgs",
        "testStaticFunctionReferencingThis4",
        "connect",
        "testEmptyMethodInlineInAssign1",
        "caseStringType",
        "testEnumOfObjects3",
        "getDeclarations",
        "make",
        "newBooleanOutcomePair",
        "OptimizeArgumentsArrayTest",
        "inlineEmptyMethod",
        "testConstructorThatModifiesGlobal1",
        "testNestedCatch",
        "openSourceMapStream",
        "testRenamePropertiesFunctionCall1",
        "testUndefinedModuleDep1",
        "getPropertyDeprecationInfo",
        "getCfg",
        "splitVarDeclarations",
        "testFunctionWithQuotedPropertyThatDoesNotGetRead",
        "getDelegateSuperclassName",
        "checkNameVisibility",
        "doStatementNormalizations",
        "allPathsSatisfyPredicate",
        "testComma2",
        "CrossModuleMethodMotionTest",
        "setRenamingPolicy",
        "computeFixedPoint",
        "setEnumParameterType",
        "FunctionCallBuilder",
        "LineMappingInformation",
        "removeDeadExprStatementSafely",
        "nextToken",
        "checkProperty",
        "testMethodInStaticFunction",
        "addRegexp",
        "testRefChain8",
        "testRemoveVarDeclartion2",
        "testAlert",
        "addOneTimePass",
        "getCombinedName",
        "TypeValidator",
        "ensureProperty",
        "testExposeExpression6",
        "testTopLevelClass7",
        "testLocalScope1",
        "testCanInlineReferenceToFunction12b",
        "appendCall",
        "testNestedProperties",
        "testRewriteChained",
        "peekFlaggedToken",
        "FlatFlowScopeCache",
        "isCall",
        "assertNoWarning",
        "FunctionInfo",
        "testPassWithNoNewNodes",
        "testIsSimpleFunction4",
        "addInvalidatingType",
        "testGlobalAliasNotPushedDeeper",
        "testExternName2",
        "hasNamespace",
        "checkForOldStyleTypedef",
        "testLocalAlias5",
        "isImplicitCast",
        "tryFoldLiteralConstructor",
        "testNamespaceAnnotationInExterns3",
        "testObjLitRedefinedInLocalScope",
        "createCallOrNew",
        "isIdeMode",
        "testUncheckedConditionInFor",
        "testLoopInductionVar",
        "getParamAndVarConst",
        "ActiveXObject",
        "parseInt",
        "recordMutator",
        "testOverlappingDottedAdditionalProvide",
        "forwardDeclareType",
        "FunctionTypeBuilder",
        "isExported",
        "testAssignmentOverride",
        "isNaN",
        "TightenTypesTest",
        "Function",
        "JSTypeRegistry",
        "declareParam",
        "testInlineReferenceInExpression3",
        "testInlineWithinCalls1",
        "addAccessorPropName",
        "contains",
        "testGetSourceName",
        "getPropertyType",
        "setInline",
        "testObjLitRedefinedInGlobalScope",
        "RewritePrototypeMethodTestInput",
        "setChainCalls",
        "canEliminate",
        "testBadOverrideOfPrivateProperty",
        "testDoubleInlining1",
        "testMixin5",
        "declareNativeType",
        "testNamespaceAnnotationInExterns",
        "isAncestor",
        "keepAssignableInterfaces",
        "getSignatureStore",
        "word1",
        "testFoldWithMarkers2",
        "hasParseError",
        "CollectProperties",
        "UserDataHandler",
        "testInstanceofOfPrivateConstructor",
        "addAlternate",
        "setPropName",
        "testDoNotExitTry",
        "parseResultType",
        "getValueNode",
        "testBasic",
        "testFoldUselessFor",
        "testSetterInForStruct6",
        "testRestrictToCast",
        "replaceReferencesToThis",
        "testNoRemoveAssign6",
        "maybeAddAutoboxes",
        "testQualifedNameExpectedError",
        "nextPreciserScopeKnowingConditionOutcome",
        "testStableRenameWithExterns1",
        "getLastChar",
        "NameGenerator",
        "testWarningForMethod1",
        "testRemoveInControlStructure1",
        "testIsAnonymousFunction1",
        "testEarlyReference",
        "println",
        "createNode",
        "testMultipleDeclarationError2",
        "testConvert",
        "setWarningsGuard",
        "getOrCreateStringInfo",
        "testPrettyPrinter",
        "testInlineFunctions24",
        "testConditionallyDefinedFunction1",
        "testCanInlineReferenceToFunction21",
        "ExtractionInfo",
        "testStubMethodMovement1",
        "checkPropertyAccess",
        "removeAll",
        "getKeys",
        "getReservedCharacters",
        "CopySideEffectSubexpressions",
        "testBug1449316",
        "testProperties",
        "DOMException",
        "assertError",
        "CompilerEnvirons",
        "isFunctionObjectApply",
        "testClassMovement1",
        "getCatchBlock",
        "testInlineReferenceInExpression12",
        "getTopVarName",
        "LiteralProperty",
        "testAssignmentInReturn",
        "AssignmentDefinition",
        "createInstanceScope",
        "testSetterInForStruct1",
        "testInlineEmptyFunction1",
        "caseTypeOf",
        "testUseShadowGlobals1",
        "keepSimplifiedShortCircuitExpression",
        "processPrototypeParent",
        "intern",
        "Visitor<List<ObjectType>>",
        "testCanExposeExpression2",
        "testExtractingPrototypeWithQName",
        "testCanInlineReferenceToFunctionInExpression19",
        "LocalVarMotion",
        "testConstantPreIncremented1",
        "initColumnNumber",
        "documentAuthor",
        "testShadowVariables15",
        "getReference",
        "getScriptStackTrace",
        "ProcessVars",
        "tryFoldBlock",
        "Comparator<JSType>",
        "testNoPrivateAccessForProperties4",
        "getMapPath",
        "testRefChain9",
        "testNoInlineIfParametersModified5",
        "createTypeIntersection",
        "getThisType",
        "testComplexInline2",
        "transformTree",
        "testCollapse",
        "testGlobalFunctionNameInBooleanExpressionDepth1",
        "isSupportedCallType",
        "initSourceName",
        "testAliasTrueFalseNull",
        "FunctionPrototypeType",
        "isCallWhoseReturnValueShouldBeStripped",
        "hasSideEffect",
        "testExportNonStaticSymbol",
        "testAssignmentToUnknownPrototype",
        "handleSetFromLocal",
        "testDependentModules",
        "skipAllCompilerPasses",
        "getDeepestCommonModuleRef",
        "testComplexPropAssignGivesNoWarning",
        "getAllEdges",
        "testNeededTemps",
        "testStaticFunction5",
        "testNoSimplifyFunctionArgs2",
        "testStaticProperty",
        "testExportComplexSymbolReservesName",
        "testDoNotInlineIncrement",
        "RenameProperties",
        "NameAnonymousFunctions",
        "computeCfg",
        "testDo",
        "addOp",
        "testInlineImmutableMultipleTimes",
        "recordDeprecated",
        "getListener",
        "testConstructorAnnotationInExterns4",
        "FunctionInjector",
        "VariableNameGenerator",
        "testSetCssNameMappingNonStringValueReturnsError",
        "HTMLHtmlElement",
        "testRefToDescendantOfUndefinedProperty3",
        "testInheritanceDetection10",
        "testGlobalObjectNameInBooleanExpressionDepth1_4",
        "testReturn",
        "testNoRewriteNotImplementedMethod",
        "KeywordAliasSpecification",
        "NoObjectType",
        "register",
        "testMinimizeCondition",
        "canCollapseUnannotatedChildNames",
        "getValue",
        "getFunctionAnnotation",
        "testExcerptRegion",
        "testTopLevelClass6",
        "testNewNodesWithMoreThanOneFile",
        "addAction",
        "nameAnchor",
        "tearDown",
        "testMisusedEnumTag",
        "testIsSimpleFunction6",
        "maybeRemoveCall",
        "createWhile",
        "processArrayLiteral",
        "isFunctionType",
        "define",
        "isFunctionPrototype",
        "testInheritanceDetection8",
        "ConcreteUnionType",
        "CheckGlobalThisTest",
        "handleStmtList",
        "testSimpleStatements",
        "aliasProperties",
        "compile",
        "doExtraction",
        "makeLocalNamesUnique",
        "typeError",
        "getName",
        "testCall1",
        "testViolatedModuleDependencyNonStrictPromoted",
        "processFunctionNode",
        "getParamCount",
        "isVar",
        "extractPrototypeMemberDeclarations",
        "testCall2",
        "getExportPropertyFunction",
        "handleUnresolvedType",
        "createNumber",
        "updateTypeOfParametersOnClosure",
        "removeDeclaration",
        "createScope",
        "testHaltAtSideEffects3",
        "assertInvalidContinue",
        "testStableRenameWithPointlesslyAnonymousFunctions",
        "ensureIndex",
        "testExcerptInexistantLine",
        "eliminateFunctionParamAt",
        "isArgumentsName",
        "warnAboutNamespaceRedefinition",
        "hasParameter",
        "isReferenceToRemovedVar",
        "formatPropNameDecl",
        "visitLabel",
        "canTestForEqualityWith",
        "maybeEliminateExpressionByName",
        "testAssignMovement",
        "testCostBasedInlining1",
        "testStable",
        "testCorrectLoopBreaksAndContinues",
        "getRestrictedByTypeOfResult",
        "testVarLifting",
        "testMaybeAddTempsForCallArguments20",
        "isDeclaration",
        "testIfTryFinally",
        "testClassMovement7",
        "testConstantDefinition2",
        "testComparison",
        "setShouldPreserveTry",
        "isTryFinallyNode",
        "testTypeAnnotationsInterface",
        "popContainingFunction",
        "hasFinally",
        "canReplaceWithSetProp",
        "testConstantFunction1",
        "testBasicTestFunctionsAreExported",
        "assertPrintNode",
        "BuildGlobalNamespace",
        "isValidPrivateConstructorAccess",
        "isNameAssignedTo",
        "testStableRenameWithAnonymousFunctions",
        "documentVersion",
        "isRegexpType",
        "assertCrossEdge",
        "createIncDec",
        "getAlternatives",
        "testAdd1",
        "start",
        "testNormalMethod",
        "testGlobalNameReferencedInLocalScopeBeforeDefined2",
        "testVarMovement4",
        "isGeneratingDebugChanged",
        "registerPropertyOnType",
        "parseWithJSDoc",
        "isEnumElementType",
        "testApply",
        "testConstructorFields",
        "testCrossModuleInlining2",
        "getPropertySlots",
        "getDirectedSuccNodes",
        "testAndOperator1",
        "testUntypedExterns",
        "addGuards",
        "hasOneChild",
        "isExtern",
        "testMaybeAddTempsForCallArgumentsInLoops",
        "addDependency",
        "DocumentStyle",
        "testDifferentInstance",
        "testComplexInlineVars3",
        "shouldReplaceWithAlias",
        "visit",
        "testConstants1",
        "testObjLitWithUnusedNumericKey",
        "testRenamePropertiesFunctionCallStable",
        "inferThisType",
        "recordNoAlias",
        "testPrototypePropertySetInLocalScope3",
        "testNoSymbolMapStripsCallAndDoesntIssueWarnings",
        "testConditions",
        "computeCFG",
        "testStaticMethod3",
        "testConstantInline",
        "getDescriptionForThrownType",
        "testSimpleFunction",
        "testNoInlineMaskedFunction",
        "CollapseProperties",
        "testIsSimpleFunction3",
        "testArgumentsWithSideEffectsNeverInlined1",
        "throwInternalError",
        "tryMinimizeCondition",
        "expectStringOrNumber",
        "testGetFunctionName3",
        "visitThrow",
        "mayThrowException",
        "getUniqueNameIdSupplier",
        "testNoRemoveUselessNameStatements",
        "getParamAndVarNames",
        "addRefInternal",
        "testRefChain7",
        "testMaybeAddTempsForCallArguments12",
        "testSetterInForStruct3",
        "testObjLitAssignmentDepth1",
        "testObjLitWithUsedNumericKey",
        "documentReference",
        "testHaltReadWhenValueHasSideEffects",
        "addPassFactoryBefore",
        "replaceWithEmpty",
        "testGlobalFunctionNameInBooleanExpressionDepth2",
        "classOrNull",
        "getAndResetJSDocInfo",
        "VariableReferenceCheck",
        "testRhsAssign9",
        "XMLHttpRequest",
        "applyCollapses",
        "createObjectType",
        "color",
        "createVariables",
        "testConstantPostIncremented2",
        "XMLSerializer",
        "FunctionNames",
        "CSSValueList",
        "testInlineNeverPartialSubtitution2",
        "condition",
        "testRefToMethod1",
        "testPrototypePropertySetInLocalScope4",
        "appendStringTree",
        "getSourceRegion",
        "recordPreserveTry",
        "HTMLCollection",
        "testRenameNested",
        "isSubtype",
        "testComplexInline1",
        "testAssignmentInArgs",
        "testContinue",
        "readPI",
        "ReachingUses",
        "checkSourceMap",
        "getIn",
        "getAncestor",
        "processSwitchCase",
        "getImplicitActionsFromPropNonUnion",
        "getDirectedGraphEdges",
        "LineNumberCheck",
        "skipLine",
        "testNoSideEffectAnnotation2",
        "testSameNamesDifferentDefinitions",
        "ClientInformation",
        "applyBasicCompilationOptions",
        "CallVisitor",
        "testTwoArgsWithStringLiterals",
        "GearsFactory",
        "testVarMovement7",
        "testRewriteSingleDefinition1",
        "testIsSimpleFunction5",
        "getScopeCreator",
        "testSpuriousBreak",
        "connectIfCrossed",
        "FoldConstantsTest",
        "testNoExceptionsWithBadConstructors1",
        "getObject",
        "testAbbreviatedArithmeticAssignment2",
        "testMoveExpression9",
        "testConditionalDeadCode",
        "isReadFrom",
        "compute",
        "insideGetUniqueIdCall",
        "testNoSideEffectAnnotation7",
        "getNewName",
        "testRemoveTryCatch",
        "createInputs",
        "testInlineCall",
        "testProtectedAccessForProperties3",
        "testNoRemoveInherits4",
        "testBadObjectLiteralCast1",
        "getFnParameters",
        "assertLiteralButNotImmutable",
        "testNoRemoveFunctionDeclaration2",
        "HTMLDirectoryElement",
        "constructError",
        "testInlineInDifferentPaths",
        "getFunctionCallParameterMap",
        "testSwitchEmpty",
        "testSideEffectClassification2",
        "getCodeRemovingPasses",
        "testDoubleInlining2",
        "SymbolTable",
        "testCanInlineReferenceToFunction15",
        "createInterfaceType",
        "aliasNode",
        "setStartingPosition",
        "ConcreteScope",
        "testStableRenameSimpleGlobalNameExterned",
        "testMergeBlock1",
        "DOMError",
        "invalidate",
        "isNativeObjectType",
        "testCost",
        "testRefChain1",
        "parseUnionTypeWithAlternate",
        "setValue",
        "createNewFileLevelAstParallelizer",
        "testDeepNestedFinally",
        "testAnonymousFunctionYCombinator",
        "testDoNotCollapsePropertyOnExternType",
        "testNestedAssign2",
        "testChainedAssignments5",
        "testOneArgWithCompositeClassNamesWithUnknownParts",
        "transformTokenType",
        "isRecursiveFunction",
        "testSafeReferenceOfThis",
        "getImplicitReturn",
        "testBug1974371",
        "testThrow",
        "helperInlineReferenceToFunction",
        "setDefineToNumberLiteral",
        "execute",
        "assertPrint",
        "isNoSideEffectsCall",
        "JsAst",
        "testAliasCreatedForObjectDepth1_1",
        "testFunctionMovement3",
        "recordAssignment",
        "testRefChain17",
        "testNoPrivateAccessForProperties2",
        "testCostBasedInlining2",
        "isVarBlock",
        "expectAnyObject",
        "closeSwitch",
        "getIntermediateState",
        "testRequireOfAdditionalProvide",
        "Behavior",
        "testCanInlineReferenceToFunctionInExpression23",
        "RemoveUnusedPrototypePropertiesTest",
        "testGlobalThis6",
        "getRuntimeRecord",
        "testMinimizeWhileConstantCondition",
        "getConstructorType",
        "HTMLObjectElement",
        "testMovedVariable",
        "peek",
        "appendDot",
        "addConcreteType",
        "getJsDocBuilderForNode",
        "decomposeSubExpressions",
        "ObjectPropertyStringPreprocess",
        "RestrictByTrueInstanceOfResultVisitor",
        "AliasCandidate",
        "testAliasCreatedForFunctionDepth1_3",
        "recordPassStop",
        "clearEdgeAnnotations",
        "requiresActivation",
        "testCanInlineReferenceToFunction4",
        "testPropAccessorPushedDeeper1",
        "testInlineIntoFunction",
        "testEmptyModules",
        "testRenameGlobals",
        "testOptionNotToTraverseFunctions",
        "testWarningOnDeprecatedConstVariable",
        "testGetElemInIf",
        "testRemoveTwoOptionalMultiplePossibleDefinition",
        "testRefToDefinedProperties3",
        "combineChecks",
        "traverseChildren",
        "testRefToDefinedProperties1",
        "getUseSites",
        "convertPosition",
        "testMoveMethodsUsedInTwoModules2",
        "DiagnosticGroup",
        "testObjLitDefinedInLocalScopeIsLeftAlone",
        "testRefChain21",
        "getTempValueName",
        "ViewCSS",
        "testBreak",
        "testPrototypeInitializer",
        "expect",
        "qualifiedNameBeginsWithStripType",
        "createRecordTypeBuilder",
        "testSkipRenamingExterns",
        "CheckSideEffects",
        "addLoopedPass",
        "testInlineFunctions13",
        "readStream",
        "normalizeNodeTypes",
        "isAnonymousFunction",
        "testRemoveUnusedVars",
        "applySingletonGetter",
        "getLeastSupertype",
        "testCallSlot",
        "isThis",
        "testNoRemoveAssign5",
        "formatPreamble",
        "annotateCodingConvention",
        "firePropertyChangeImpl",
        "testWarningForPrototypeProperty",
        "makeVarDeclNode",
        "fromOrdinal",
        "removeChangeHandler",
        "testCanInlineReferenceToFunction16",
        "testCanInlineReferenceToFunctionInExpression23a",
        "testReferenceInAnonymousObject1",
        "reset",
        "ProcessLabels",
        "testWeirdnessOnLeftSideOfPrototype",
        "getMessage1",
        "replacePlaceHolders",
        "redeclareVarsInsideBranch",
        "getImplicitActionsFromArgument",
        "getObjectSlot",
        "testCollapsing",
        "hasNext",
        "testInherits8",
        "testPrefixedVariableName",
        "testExternCalls",
        "testRValueReference2",
        "testChainedVarAssignments2",
        "decodeURI",
        "LinkedFlowScope",
        "isInliningForbidden",
        "checkLabel",
        "getTypeDeprecationInfo",
        "findTokens",
        "addOptionalParams",
        "toArray",
        "testInlineFunctions22",
        "testAliasMethodsDontGetOptimize2",
        "ProcessClosurePrimitives",
        "increaseSourceCapacity",
        "isFunctionPrototypeType",
        "isMethodCallThatTriggersRemoval",
        "BASEDIGIT",
        "getContext",
        "HTMLModElement",
        "JSDocInfoBuilder",
        "UIEvent",
        "testSimpleFinally",
        "mayHaveSideEffects",
        "testPrototypePropertySetInLocalScope6",
        "testHookOperator1",
        "testSets",
        "testCanInlineReferenceToFunction41",
        "testReassignAfterRef",
        "caseUnknownType",
        "setIsSyntheticBlock",
        "reduce",
        "normalize",
        "isJSDocString",
        "testInlineConstructor1",
        "hasAnyTypeRelatedTags",
        "testCanInlineReferenceToFunctionInExpression5a",
        "testGlobalObjectNameInBooleanExpressionDepth2",
        "addSymbolUse",
        "getSuperclassTypes",
        "testInfiniteLoop",
        "rewriteDefinitionIfEligible",
        "testInlineReferenceInExpression13",
        "parseFunctionType",
        "testNoSideEffectAnnotation8",
        "Reference",
        "getCost",
        "testInference5",
        "createScript",
        "getUnresolvedReference",
        "putIntProp",
        "testGetStringValue",
        "testCanInlineReferenceToFunction20",
        "testReturnThrowingException",
        "startNewLine",
        "testUnmatchedEndMarker2",
        "getUniqueName",
        "testInlineAcrossModules",
        "testReplaceReturnConst1",
        "Denormalize",
        "getColor",
        "DiagnosticType",
        "SyntheticAst",
        "addToken",
        "testStaticLoggerMethodDefinition",
        "removeChildAfter",
        "testFunctionMovement5",
        "Definition",
        "testSetPropertyOfThis",
        "LiveVariablesAnalysis",
        "setAnnotation",
        "isBooleanValueType",
        "traverseGetElem",
        "testAssignmentToPropertyOfArrayElement",
        "testRenamingConstantProperties",
        "testManyFunctions",
        "getLineNumber",
        "testCanInlineReferenceToFunction32",
        "writeObject",
        "testShadowVariables16",
        "testInlineIntoLoops",
        "getDependencyScope",
        "testOkAssignmentOfDeprecatedProperty",
        "testRemovalOfRequires",
        "save",
        "processKeywordLiteral",
        "addRequiredParams",
        "parseModuleWrappers",
        "testMissingRequireWithAdditionalProvide",
        "caseEquality",
        "handleWhile",
        "testInsideAndBranch",
        "CrossModuleCodeMotionTest",
        "testExcerptRegionFromInexistantSource",
        "addModuleInformation",
        "testExternedPropertyNameDefinedByObjectLiteral",
        "ClosurePassAndRenameVars",
        "testInlineFunctions1",
        "recordReference",
        "BuggyVariableChanger",
        "createFunction",
        "CheckPathsBetweenNodes",
        "getTopMostDefiningType",
        "createUndefinableType",
        "getLineno",
        "createTaggedName",
        "testRenamePrototypes",
        "handleWith",
        "createConstructorTypeWithVarArgs",
        "testBreakingTryBlock",
        "testComplexNestedAssigns1",
        "shouldEmitDeprecationWarning",
        "createAliasSpecifications",
        "recordStaticNameDefinition",
        "checkOptimizationLevel",
        "testLoggerDefinedInPrototypeAndUsedInConstructor",
        "testWarningForSuperClassWithDeprecatedSubclassMethod",
        "testExposeExpression4",
        "testTwoInterfacesWithSomeInheritance",
        "testRemoveRecursiveFunction3",
        "countPropertyOccurrence",
        "recordProperty",
        "testReplaceGetter1",
        "findNonconditionalParent",
        "testDoNotCrossAssignmentPlus",
        "getTypesUnderShallowInequality",
        "traverseAdd",
        "Parser",
        "testNestedVarAssign",
        "testBadModuleDep1",
        "hasExistingFunctionDefinition",
        "OnDisk",
        "isTemplateType",
        "testExposeExpression12",
        "NodeTypeNormalizer",
        "testPrototypePropertiesAsObjLitKeys",
        "createFunctionScope",
        "testEnumKey",
        "testRemoveAssignment",
        "columnNumber",
        "extractLineno",
        "propertyName",
        "ignoreEdge",
        "testWhatCausedIeToFail",
        "testCfg",
        "testInsideOrBranchInsideIfConditional",
        "testInstanceOf1",
        "testTwoPaths",
        "testEmpty",
        "toFormatter",
        "isPrototypePropertyAssign",
        "testNoInlineMutatedVariable",
        "testDoNotRemoveOverride",
        "recordDeprecationReason",
        "testNoRemoveInherits2",
        "getContextForNoInOperator",
        "ProcessDefinesTest",
        "ensureCapacity",
        "testStableRenameSimpleExternsChanges",
        "detectImplicitPrototypeCycle",
        "testUnintendedUseOfInheritsInLocalScope2",
        "testParentChild",
        "testComplexInlineVars4",
        "String",
        "testRemoveFromLabel1",
        "assertNoEdge",
        "testReturnNotMissing",
        "testConstantPostIncremented1",
        "testComplexInlineNoResultWithParamCall3",
        "testInlineReferenceInExpression9",
        "removeFromUseIfLocal",
        "setFileOverviewJSDocInfo",
        "PrototypeSetNode",
        "testFoldReturns",
        "handleThrow",
        "testGetElemWithDashes",
        "CreateSyntheticBlocksTest",
        "testFunctionMismatch",
        "getEnumParameterType",
        "clearResolved",
        "testTopLevelClass4",
        "testIsSimpleFunction7",
        "testDefineFunction",
        "setPropertyJSDocInfo",
        "testDuplicatedVar",
        "UnionType",
        "computeEscaped",
        "testDeleteOperator1",
        "testGetPropOnUndefinedProperty",
        "testCostBasedInlining8",
        "testCanInlineReferenceToFunctionInExpression19a",
        "getDefinitionsReferencedAt",
        "testLocalAliasOfAncestor",
        "testRemoveOneOptionalExpressionAssign",
        "newUndefinedNode",
        "getFunctionValue",
        "testUnresolvedType",
        "AncestorIterable",
        "AllType",
        "flow",
        "testReferencedBleedingFunction",
        "testComplexInlineNoResultNoParamCall1",
        "getBlockExpression",
        "testRefToMethod2",
        "testOverlappingOriginalAndGeneratedNames",
        "testUncheckedWhileInDo",
        "readObject",
        "testPrototypeFieldDefinition",
        "visitGetProp",
        "getReadableJSTypeName",
        "testEnumProperty",
        "getFirstXMLToken",
        "initFunction",
        "addStrictWarning",
        "testForLoops",
        "testMissingVariable",
        "PureFunctionIdentifierTest",
        "connectIfNotFound",
        "testStringFunction",
        "updateObjLitOrFunctionDeclarationAtAssignNode",
        "testMemoization",
        "testCanInlineReferenceToFunction24",
        "testDoCrossNewVariables",
        "generateExterns",
        "addNonEmptyExpression",
        "isVoidOrUnknown",
        "getDestination",
        "ObjArray",
        "addToDebugLog",
        "LinkedFlowSlot",
        "testIncAndDec",
        "defineName",
        "testInlineConstructor3",
        "getParentNode",
        "inject",
        "testTopLevelClass2",
        "testReplaceEmptyFunction1",
        "testReferencedVarDefined2",
        "testVarAndOptionalParams",
        "testWrongNumberOfArgs",
        "testLoggerDefinedInObjectLiteral",
        "BoxObject",
        "isPrototypeProperty",
        "append",
        "testScopeDiscovery",
        "VariableMap",
        "getCompiler",
        "testAnonymousFunctionCallInlining6",
        "testTwoNamespaces",
        "HTMLTableElement",
        "testNoPrivateAccessForProperties1",
        "testExportSymbol",
        "extractClassNameIfProvide",
        "testInlineVariablesConstantsJsDocStyle",
        "doInlinesForScope",
        "testInCorrectIfReturns",
        "isNeverReassigned",
        "writeOutput",
        "assignNames",
        "BooleanOutcomePair",
        "testInferredVar",
        "isDefine",
        "testMutate8",
        "processInfixExpression",
        "testRemoveRecursiveFunction5",
        "isNoShadow",
        "testUnintendedUseOfInheritsInLocalScope3",
        "testExposeExpression9",
        "testWarningForProperty2",
        "testTypeAnnotations",
        "testExcerptInexistantRegion",
        "removeTryCatchFinally",
        "setNotAssignable",
        "testCanExposeExpression1",
        "markReference",
        "testCanInlineReferenceToFunction40",
        "testInnerFunctionsWithNamedArgumentInInnerFunction",
        "Node",
        "verify",
        "testAssignAdd",
        "TypeInfo",
        "isNameReferenced",
        "testAliasableGlobals",
        "BasicBlock",
        "testReassignAfterNonGlobalRef",
        "GearsCompleteObject",
        "testReassignWithExpr",
        "testInlineExpressions5",
        "newBleedingFunction",
        "HTMLBaseElement",
        "addChildToFront",
        "testGlobalVarSetToObjLitConditionally3",
        "AbstractCompilerRunner",
        "addFunction",
        "testOtherGlobal",
        "testInnerFunction1",
        "testExposeExpression11",
        "computeMustDef",
        "RemoveUnusedPrototypeProperties",
        "testBug1401831",
        "getParameterSlot",
        "processNewExpression",
        "testConstantPreDecremented2",
        "testSelfInline",
        "exitScope",
        "getFunctionId",
        "isTypeCheckingEnabled",
        "testDoNotRemoveNonQualifiedName",
        "testDoNotChangeReferencedInstanceOf",
        "testAnnotationInExterns1",
        "defineAndAlias",
        "hasOwnProperty",
        "testStableRenameWithPrefix1AndUnstableLocalNames",
        "getAllModules",
        "isValidEnumKey",
        "testFoldUselessWhile",
        "checkConstructorDeprecation",
        "testConstantInitializedInAnonymousNamespace2",
        "createExterns",
        "testNoWarningForGoodModuleDep1",
        "testRemoveVarDeclartion8",
        "collapseAnonymousFunctions",
        "testSplitInplaceCall",
        "maybeAddReference",
        "caseIn",
        "createSwitch",
        "setEncodedSourceBounds",
        "testNoRewritePrototypeObjectLiterals1",
        "testInvalidAnnotation1",
        "testSimpleInline",
        "testInvalidAnnotation5",
        "testNoInlineIfParametersModified3",
        "resolve",
        "isEmptyBlock",
        "getPrototypeTypes",
        "testShadowVariables10",
        "isConditional",
        "testMutateNoReturnWithResultAssignment",
        "addRead",
        "mismatch",
        "testUsedAsConditions",
        "testSideEffectClassification6",
        "addSignature",
        "getCount",
        "getGraph",
        "testNoRemovalFunction2",
        "PotentialCheck",
        "Window",
        "caseNumberType",
        "handleReturn",
        "testNameLookup",
        "testMixedQuotedAndUnquotedObjLitKeysStable",
        "isIdName",
        "testRenameMap",
        "testNoWarningsForThisConstructor",
        "createForTypes",
        "processStringLiteral",
        "toBytes",
        "getWeight",
        "ValueType",
        "testAddPropertyToObjectInLocalScopeDepth2",
        "inlinePropertyReturn",
        "testPropertyDeclarationOnRecordType",
        "makeUrlForGeneratedScript",
        "compare",
        "GreedyGraphColoring",
        "testNoRewriteNamespaceFunctions",
        "GearsWorkerPool",
        "getDebugReport",
        "SignatureStore",
        "testAliasCreatedForFunctionDepth2",
        "testArrays",
        "testStaticMethod2",
        "getParameters",
        "testLocalAlias2",
        "testInline15",
        "testMultiplyDeclaredVars1",
        "testOverlappingAdditionalProvideAtEnd",
        "getArg",
        "testCollectedCtorProperty",
        "CheckAccidentalSemicolon",
        "intersectWith",
        "report",
        "registerGroup",
        "assertLiteralAndImmutable",
        "testInsideIfBranch",
        "ConvertToDottedProperties",
        "testAnonymousFunctionCallInlining1",
        "testEmptyDeclaration",
        "testNoRemoveThrow1",
        "visitCallSite",
        "testNoArgumentRemovalNonEqualNodes",
        "testMultiUseInSameCfgNode",
        "addChildToBack",
        "testNamespacedClass3",
        "readQuotedString",
        "testStableTrickyExternedMethods",
        "testMixedModeInlining4",
        "testNoInlineNonFunction",
        "tryFoldAssign",
        "testInline3",
        "Range",
        "visitFunctionNode",
        "resolveViaProperties",
        "ElementCSSInlineStyle",
        "processParenthesizedExpression",
        "testComplex4",
        "notFunctionError",
        "testNoInlineEscapedToInnerFunction",
        "testCanInlineReferenceToFunction8",
        "testRemoveRecursiveFunction7",
        "remove",
        "testMultiplyDeclaredVars3",
        "testNonStringArgument",
        "tryFoldAdd",
        "testConstructor2",
        "getNeighborNodes",
        "CollapseVariableDeclarations",
        "collapseAssignEqualTo",
        "testStripCallsToStrippedNames",
        "canInlineReferenceToFunction",
        "testNoInlineOfNonGlobalFunction2",
        "testRemoveLabelChild2",
        "addNode",
        "JSType",
        "putProp",
        "NoType",
        "getInfo",
        "estimateSavings",
        "testCanInlineReferenceToFunction9",
        "testPrototypePropertySetInLocalScope5",
        "testIgnoreDuplicateWarningsForSingleClasses",
        "setParseJSDocDocumentation",
        "testOverrideDefinitionInSource",
        "testRValueHoisting",
        "testMissingReturn",
        "testCostBasedInliningComplex2",
        "testWhile",
        "testCanInlineReferenceToFunctionInExpression3",
        "testRewritePrototypeMethods2",
        "CanvasPattern",
        "testRemoveVarChild",
        "testDifferentBlock",
        "encodeURI",
        "getDescription",
        "testInstanceOf5",
        "testMoveExpression4",
        "testInheritanceDetection3",
        "testProtectedAccessForProperties1",
        "testThrow1",
        "testMultiplyDeclaredVars2",
        "testMultiDefinitionsInSameCfgNode",
        "testCanInlineReferenceToFunction37",
        "testGlobalObjectNameInBooleanExpressionDepth1_6",
        "getErrorMessage",
        "CollapsePropertiesTest",
        "testRefToDescendantOfUndefinedProperty2",
        "testParameter4",
        "testStaticFunctionInMethod1",
        "testInstanceOf4",
        "isStripName",
        "testGetCurrentNode",
        "testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope",
        "testDoNotCrossConstructor",
        "format",
        "testGlobalScope",
        "getObjectLiteralCast",
        "testComplexInlineVars10",
        "testUnionAndExternTypes",
        "testRhsAssign3",
        "endFunction",
        "getParameterCount",
        "TouchEvent",
        "testWarningForSubclassMethod",
        "testRenameWithExterns1",
        "assertNotEscaped",
        "createChildFlowScope",
        "testNoShadowAnnotation",
        "tryMinimizeExits",
        "testGlobal",
        "getOwnerFunction",
        "testAssignInIf",
        "setImpl",
        "testContinueNotCrossFunction",
        "testShadowedVariableInnerFunction",
        "testStableRenameWithExterns2",
        "allFlowSlots",
        "testNoInlineAliases5",
        "noProb",
        "testNoRemoveCall2",
        "newNode",
        "testThrow2",
        "testFor4",
        "isExprAssign",
        "checkInvariant",
        "isPropertyTypeInferred",
        "getAllDefines",
        "testFunctionAlias",
        "testCanInlineReferenceToFunctionInExpression12",
        "testNoInlineAliases6",
        "intersection",
        "testUnmatchedStartMarker",
        "addListener",
        "testLoop3",
        "testRemoveConstantArgument",
        "isVersionECMA1",
        "testConstructorOptArgsNotRemoved",
        "testNamespaceResetInLocalScope1",
        "testFailure",
        "getNameNode",
        "isNoTypeCheck",
        "NumberType",
        "testTwoVar",
        "PropertyGraph",
        "NormalizeAndDenormalizePass",
        "testFunctionNonMovement2",
        "testNoInlineIfParametersModified4",
        "testCanDeleteArgumentsAtAnyPosition",
        "aliasStrings",
        "mulExpr",
        "getStringFromBuffer",
        "getOptimizations",
        "CrossModuleCodeMotion",
        "testExportSimpleSymbolReservesName",
        "enableMarkNoSideEffects",
        "assertNotLiteral",
        "setErrorManager",
        "testGlobalObjectNameInBooleanExpressionDepth1_5",
        "getChildBefore",
        "testSimpleAdditionalProvideAtEnd",
        "testNoRewriteDeclUsedAsAssignmentRhs",
        "testUselessCode",
        "runCustomPasses",
        "isInThrowExpression",
        "isAssign",
        "updateFunctionDeclarationAtFunctionNode",
        "isInstanceType",
        "endBlock",
        "expr",
        "testRemoveRecursiveFunction8",
        "testApplyIsIgnore",
        "testSharedFunctionName2",
        "returnedExpression",
        "setThreadContext",
        "testNestedAssign5",
        "testBug1956277",
        "testFunctionsWithJsDoc5",
        "testObjectPropertyResetInLocalScope",
        "fullName",
        "GearsTimer",
        "assertNoError",
        "testNoInlineWithoutConstDeclaration",
        "createBreak",
        "forOldRhino",
        "getParamOrVarIndex",
        "createFunctionTypeWithVarArgs",
        "testRemoveDuplicateStatements",
        "LinkedDirectedGraphNode",
        "testDecrement",
        "testAddPropertyToUncollapsibleObjectInLocalScopeDepth2",
        "testNoSideEffectsSimple",
        "testPropertyOnUnknownSuperClass",
        "getCurrentNode",
        "checkAssignment",
        "processObjectLiteral",
        "nodeRemoved",
        "getInjector",
        "testCallFunctionThatModifiesThis",
        "getAuthors",
        "testAliasCreatedForClassDepth2_3",
        "getNoSideEffectsHookNode",
        "reusePrototypeNames",
        "ReferenceCollectingCallback",
        "addActions",
        "compareTo",
        "ContextualRenamer",
        "testExpressions3",
        "opToStr",
        "AliasExternals",
        "getTypes",
        "addEOL",
        "parseAllJsDocInfo",
        "testInlineConstantAliasWithNonConstant",
        "getZippedCodeSizeRecord",
        "getDefineReplacements",
        "testNoInlineOfDangerousProperty",
        "testShadowVariables11",
        "CompactCodePrinter",
        "isRecordType",
        "addExpr",
        "testConstructorThatModifiesThis4",
        "HTMLCanvasElement",
        "CreateSyntheticBlocks",
        "markFunctionStart",
        "setSourceName",
        "testPropertyOfObjectOfUnknownType",
        "KeyboardEvent",
        "ProcessDefinesWithInjectedNamespace",
        "parseSyntheticCode",
        "testValidBuiltInTypeRedefinition",
        "isAllType",
        "testStaticFunctionInMethod2",
        "testWarnShadowLocal2",
        "roundOff",
        "HTMLMapElement",
        "ImageData",
        "getAnnotationNames",
        "testReport",
        "maybeReplaceChildWithNumber",
        "processNumberLiteral",
        "getCallableDefinitions",
        "CheckGlobalNames",
        "testRemoveLabeledStatment2",
        "SuspiciousPropertiesCheck",
        "isClassDefiningCall",
        "stopTracer",
        "testAnonymousFunction2",
        "optimize",
        "processConditionalExpression",
        "addAllChildren",
        "getHelperSource",
        "visitAliasableNode",
        "getInstructionObserverThreshold",
        "testObjectLit",
        "Iterator",
        "testCanInlineReferenceToFunction35",
        "testRhsReference2",
        "testIndependentModules",
        "markExposedToCallOrApply",
        "TestHelper",
        "testIsLiteralOrConstValue",
        "assertVariableMapsEqual",
        "testWarningForSuperclassMethod",
        "StyleSheetList",
        "testSimpleWhile",
        "testInterface",
        "testBug1445366",
        "getFunctionNode",
        "assertMapping",
        "TypeCheckFunctionCheckTest",
        "getUses",
        "testSubPropertyAccessByVariableName",
        "extractSingleLineBlock",
        "removeSignature",
        "parse",
        "addSimplifiedExpression",
        "testAndOperators4",
        "testThreePaths",
        "isEmpty",
        "createAliasFunctionNode",
        "elements",
        "testObjectLitExtern",
        "isRValue",
        "getBasicBlock",
        "findCall",
        "handleTypeCycle",
        "coalesceVariableNames",
        "testNoWarningInGlobalScopeForCall",
        "testTwoSeparateFieldsTwoTypes",
        "CheckMissingReturnTest",
        "setSourceFile",
        "isXmlAvailable",
        "testRemoveMultiplySetAbstract",
        "testFunctionMovement7",
        "getNonEmptyChildCount",
        "typeofClassDefiningName",
        "JSSourceFile",
        "testUnions",
        "getUndirectedGraphNode",
        "assertUnreachable",
        "testDeclareInNonGlobalScope",
        "inferInheritance",
        "find",
        "testMultiplePrototypeInitializer",
        "testMaybeAddTempsForCallArguments10",
        "testSetterInForStruct4",
        "testInlineVariablesConstantsWithInlineAllStringsOn",
        "isValidDefineValue",
        "testInlineBlockMutableArgs3",
        "isStatementBlock",
        "inferParameterTypes",
        "setIsCallFunction",
        "testWarningForMethod2",
        "verifyAllReferencesInlined",
        "testFunctionToString",
        "testInlineExpressions1",
        "testAssignInNonGlobalScope",
        "assertResultString",
        "testNoMoveDeepFunctionDeclarations",
        "classDefiningCallsHaveSideEffects",
        "advanceLookAhead",
        "testWithNoInputs",
        "testSimple",
        "canMoveAggressively",
        "TokenStream",
        "testClassMovement6",
        "makeHashKeyFromPair",
        "testFoldWithMarkers1",
        "currentAncestors",
        "testAvoidingConflictsBetweenQuotedAndUnquotedPropertyNames",
        "setLineLengthThreshold",
        "testNoWarningForDeprecatedClassInstance",
        "getTypedefType",
        "testTry2",
        "testRenameMapUsingOldMap",
        "caseAndOrNotShortCircuiting",
        "testTwoRuns",
        "getLineIndex",
        "outputSourceMap",
        "NativeCallFunctionCall",
        "testShadowVariables9",
        "inlineDirectly",
        "testAssignmentWithComplexLhs4",
        "testStaticAndInstanceProperties",
        "testClassDefiningCallWithStripType4",
        "trySimplifyNewDate",
        "testInnerFunction2",
        "testRenamePropertiesWithLeadingUnderscores",
        "assertLineBreak",
        "AnalyzePrototypeProperties",
        "insideAssignmentToIdConstant",
        "addWarningsGuard",
        "transformAsString",
        "testExternFunction",
        "State",
        "getValueParent",
        "handleGetProp",
        "createName",
        "testNoRemoveThrow2",
        "testCostBasedInlining11",
        "getReferencesAt",
        "isCalled",
        "testObjectLiteralCast",
        "resolveViaRegistry",
        "isContinueStructure",
        "testMarkCalls",
        "testRefChain18",
        "testCallBeforeDefinition",
        "testMissingVarArgs",
        "createLabel",
        "testRemovalOfProvidedObjLit",
        "testModulesWithoutDependencies",
        "isStringValueType",
        "testObjectModified",
        "addMarker",
        "testInlineInFunction2",
        "maybeAddReferenceUsingMode",
        "testApply1",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope2",
        "NodeIterators",
        "testFoldBitShiftsStringCompare",
        "hasHaltingErrors",
        "AbstractNodeTypePruningCallback",
        "testCrossModuleInlining3",
        "testPassWithoutWarningsAndMultipleFiles",
        "testEmptyMethodInline",
        "testFor2",
        "GearsHttpRequestUpload",
        "assertSomeError",
        "testFunctionArityWithOptionalArgs",
        "testPropertyOnParamOfUnknownType",
        "isOptionalParameter",
        "StripCode",
        "initLineNumber",
        "testGoogProvideInWrongFileShouldCreateWarning",
        "getColumnIndex",
        "traverseAnd",
        "FunctionRecord",
        "getTwin",
        "testVarMovement6",
        "testNoSideEffectAnnotation12",
        "isOptionalArg",
        "Navigator",
        "isNoObjectType",
        "matchChar",
        "assertType",
        "testGlobalCallWithStrippedType",
        "testOneArgWithSimpleStringLiterals",
        "testPropertyAddedToFunction",
        "getAllDownEdges",
        "checkEnumInitializer",
        "testGlobalFunctionsInGraph",
        "getGlobalName",
        "testIfElse",
        "initFromContext",
        "indexOf",
        "testInsideHookConditional",
        "isAliasDefinition",
        "testBreakingBlock",
        "testQuotedPrototypeProperty",
        "testNoRewriteExternalMethods1",
        "replaceThis",
        "testRemoveLabeledStatment3",
        "DefinitionSite",
        "testNoSideEffectAnnotation16",
        "stripCode",
        "handleCase",
        "moveFunctionDeclarations",
        "testUnaryOperators3",
        "AliasSpecification",
        "visitScriptNode",
        "MyScopeCreator",
        "testInlineReferenceInExpression6",
        "testViolatedModuleDependencySkipNonStrict",
        "testCanInlineReferenceToFunction22",
        "recompute",
        "testNextedWhile",
        "canInlineReferenceAsStatementBlock",
        "flattenReferencesToCollapsibleDescendantNames",
        "testAnonymous8",
        "documentThrows",
        "isDirectCallNodeReplacementPossible",
        "TypeMismatch",
        "onSeledMutation",
        "testMixedModeInlining3",
        "testRenameLocals",
        "replaceMutator",
        "testComplexInlineVars9",
        "UseSite",
        "implicitPrototypeChainIsUnknown",
        "testNoHaltReadWhenValueIsImmutable",
        "GearsManagedResourceStore",
        "setCssRenamingMap",
        "processSetCssNameMapping",
        "testVarLiveRangeCross",
        "testNoInlineObjectLits",
        "NoRewriteMultipleDefinitionTestInput",
        "getByName",
        "getOptions",
        "addMapping",
        "matches",
        "recordPassStart",
        "testInlineConditionallyDefinedConstant1",
        "disables",
        "optimizeCallSite",
        "CodeSizeEstimatePrinter",
        "getIntForType",
        "formatNodeName",
        "testShortCircuit2",
        "getThrownTypes",
        "hasReturnType",
        "testExistingAliasDefinitionFails",
        "eatTokensUntilEOL",
        "getNeighborEdges",
        "getNamesToAlias",
        "Text",
        "tryRemoveDeadAssignments",
        "testReplaceSetter1",
        "listSeparator",
        "testReferencedVarsExternallyDefined",
        "testInline4",
        "testDoNotEnterSubscope",
        "findSwitchFromCase",
        "testNamespacedClass5",
        "testDep",
        "removePropertyChangeListener",
        "isInvalidatingType",
        "handleSwitch",
        "testIgnoresNativeObject",
        "connectToImplicitReturn",
        "getVarIndex",
        "testFunctionsWithJsDoc6",
        "inlineDeclaredConstant",
        "setLanguageVersion",
        "createParameters",
        "union",
        "testFunctionScope",
        "scanRoot",
        "InlineVariablesTest",
        "buildResultExpression",
        "AbstractScopeBuilder",
        "setSourceNode",
        "assertLineLength",
        "GatherNoSideEffectFunctions",
        "traverseAssign",
        "testInlineReferenceInExpression14",
        "testFunctionDeclarationsInModule",
        "setDouble",
        "HTMLFieldSetElement",
        "testUnaryOperators4",
        "BlackHoleErrorManager",
        "isFunctionObjectCall",
        "testFor3",
        "testIgnoreGetUniqueIdArguments",
        "testCostBasedInlining10",
        "ObjectLiteralPropertyDefinition",
        "processDefines",
        "GenerateExports",
        "isVarArgs",
        "getDirectedGraphNode",
        "getExportedVariableNames",
        "XPathResult",
        "addVariableToFunction",
        "testInlineFunctions12",
        "combine",
        "isNoType",
        "testMutateNoValueReturnWithResultAssignment",
        "testConstructorAlias",
        "testSwitchDefaultInMiddle",
        "testInlineAssignmentToConstant",
        "getInput",
        "testRemoveAnonymousFunctionName",
        "getDeclaredTypeInAnnotation",
        "getRootScope",
        "testRemoveTryCatchFinally",
        "visitReturn",
        "word0",
        "testNoRewriteIfNotInGlobalScope2",
        "VariableAssignAction",
        "testSheqDiscovery",
        "isDescriptionRecorded",
        "testExposeExpression13",
        "setBaseType",
        "testAliasCreatedForEnumDepth2_1",
        "testNamedFunction2",
        "isIndependentOf",
        "testNamespaceAnnotationInExterns2",
        "coalesceDuplicateFiles",
        "testNoRewriteNonCallReference",
        "SyntaxError",
        "setUnnormalized",
        "testFunctions1",
        "getProperty",
        "testInlineIntoLoop",
        "addString",
        "testAliasCreatedForClassDepth2_1",
        "HTMLFormElement",
        "isCallWithinLoop",
        "getExportedNames",
        "testRhsAssign1",
        "isStatement",
        "getThisAndAllDependencies",
        "testInsideOrBranch",
        "createPropertyGet",
        "testAliasCreatedForEnumDepth1_4",
        "testStatement",
        "testForEquality",
        "JsNameRefNode",
        "testNoCollapseForEachInExterns",
        "testMultipleDefinition",
        "testNoSideEffectAnnotation11",
        "identifyTypeDefAssign",
        "NamedPass",
        "printStackTrace",
        "testErrorHandling",
        "testNoSideEffectAnnotation14",
        "testPass",
        "testNestedLoops",
        "setDeprecated",
        "NameAnalyzerTest",
        "testAssignmentWithComplexLhs2",
        "recordDescription",
        "testReferenceInAnonymousObject4",
        "testConstRemovingRename2",
        "testHookIf",
        "recordSubclassPrototypePropUse",
        "testEnumRAI3",
        "testInvalidatingInterface",
        "expectSuperType",
        "handleSetFromGlobal",
        "testAddPropertyToFunctionInLocalScopeDepth1",
        "getConstructor",
        "removeUnusedProperties",
        "testRemoveWithLabels",
        "lastUint32Result",
        "testFoldBitShifts",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope5",
        "NodeFilter",
        "SourceFile",
        "getDocInfoForDeclaration",
        "testBadReadOfDeprecatedProperty",
        "newInstanceOrNull",
        "testAvoidingConflictsBetQuotedAndUnquotedPropertyNamesStable",
        "setAnnotateTypes",
        "testInnerFunctionsWithNamedArgumentInOutterFunction",
        "testGlobalAliasOfAncestor",
        "addIncrementalSourceAst",
        "definitionTypeContainsFunctionType",
        "testNoInlineBackwards",
        "printNode",
        "getReferencedType",
        "typeError2",
        "testBadModuleDep2",
        "MustBeReachingVariableDef",
        "reportGenericTypeSyntaxWarning",
        "testRemovePrototypeDefinitionsInGlobalScope2",
        "mayEffectMutableState",
        "testComplexInlineNoResultWithParamCall1",
        "getMutatorFor",
        "testFoldBitwiseOpStringCompare",
        "testNoWarningForPrototypeCopying",
        "testOverlappingAdditionalProvide",
        "checkDescendantNames",
        "MessageEvent",
        "canInlineReferenceDirectly",
        "exit",
        "testReadPropertyOfThis",
        "testFunctionAnnotation",
        "testGlobalVarSetToObjLitConditionally1",
        "testImplicitPropCall",
        "testLocalAlias6",
        "testStableRenameGlobals",
        "testRenameSimple",
        "testUnaryOpsStringCompare",
        "checkDeclaredPropertyInheritance",
        "addMethod",
        "testSplitNamedFuntionWithArgs",
        "testExportedMethodsByNamingConvention",
        "testOk",
        "enableNormalize",
        "EntityReference",
        "testCallToRedefinedFunction",
        "testRemoveRecursiveFunction1",
        "getAllDependencies",
        "testBasicMapping",
        "testCanInlineReferenceToFunctionInExpression9",
        "getArrayNotationNameFor",
        "isAddedAsNumber",
        "testComplexInline5",
        "HTMLLegendElement",
        "recordPrototypePropUse",
        "getCurrentCharIndex",
        "testNoWarningInDeprecatedClass",
        "testInline8",
        "HTMLUListElement",
        "getErrorCount",
        "testInCorrectLoopBreaksAndContinues",
        "createTryCatchFinally",
        "testPropAccessorPushedDeeper3",
        "testCanInlineReferenceToFunctionInExpression22a",
        "getSideEffectNodes",
        "MethodCompilerPass",
        "getPropertyNames",
        "strEscape",
        "testDontAlias",
        "done",
        "mutate",
        "testDoCrossVar",
        "aliasKeywords",
        "testNoAliasAnnotationForMultiVarDeclaration",
        "isLocalNameReference",
        "classifyCallSite",
        "setIntermediateState",
        "getClassOfMethod",
        "getParseJSDocDocumentation",
        "maybeCollectMember",
        "testMethodCall",
        "testVarMovement2",
        "testMaybeAddTempsForCallArguments11",
        "testAliasedFunction",
        "testComplexInlineVars5",
        "testFunctionReturnOptimization",
        "testComplexSample",
        "FunctionTypeInformationGatherer",
        "Parameter",
        "testNoWarningForDuckProperty",
        "isNodeTypeReferenced",
        "testRemoveTryChild",
        "statement",
        "testRefChain3",
        "setConstant",
        "testCorrectRecursion",
        "extractExpression",
        "testFunctionMovement4",
        "XPathNSResolver",
        "processObjectProperty",
        "testRenameWithPrefix1",
        "getSourceFile",
        "lazyInitDocumentation",
        "testLocalWriteToAncestor",
        "getImplementationVersion",
        "mustHaveXML",
        "JsDocTokenStream",
        "VoidType",
        "testBuiltInTypeDifferentNumParams2",
        "testAnnotationInExterns2",
        "testInherits5",
        "getDeepestCommonDependencyInclusive",
        "testMixin1",
        "isObjectLitKey",
        "expectCanCast",
        "FunctionToBlockMutator",
        "replaceGlobalUse",
        "estimateCodeSize",
        "isGlobalNameReference",
        "reportWarning",
        "testInlineReferenceInExpression4",
        "testInference1",
        "getReturnDescription",
        "HTMLOptionsCollection",
        "collapseReplacements",
        "checkTreeEquals",
        "addAliasNodes",
        "testInterfaceWithSupertypeImplementor",
        "addName",
        "getPreciserScopeKnowingConditionOutcome",
        "testDoubleDeclaration",
        "VariableTestCheck",
        "RenameVars",
        "getOrCreateFunctionState",
        "RecordType",
        "testNamespacedClass1",
        "getFunctionCallAssignments",
        "afterExitScope",
        "addImplementedInterface",
        "testMaybeAddTempsForCallArguments7",
        "testAssignmentToCallResultPrototype",
        "restrictByNotNullOrUndefined",
        "testUnaryOps",
        "testMaybeAddTempsForCallArguments5",
        "CSSStyleDeclaration",
        "recordImplicitCast",
        "testRefChain11",
        "HTMLImageElement",
        "isFunctionTypeDeclaration",
        "testRemovePrototypeGet2",
        "testRhsAssign7",
        "testNested",
        "createExternFunctionCall",
        "testStableRenaming",
        "TypeInferencePass",
        "clear",
        "isDeclared",
        "addFirst",
        "FunctionArgumentDefinition",
        "testFindModifiedParameters4",
        "makeTypeCheck",
        "warnings",
        "isPrivate",
        "testRedeclare",
        "testInvalidAnnotation2",
        "testStaticAndInstanceMethodWithSameName",
        "getFlowStateAtX",
        "relExpr",
        "addConstantMarkerToName",
        "testFunctionWithName",
        "onSealedMutation",
        "isFavorable",
        "testMultiDefinitionsBeforeUse",
        "getTypesUnderEquality",
        "testInOperatorNotInsideFor",
        "hasCachedValues",
        "testInlineFunctions10",
        "DocumentEvent",
        "toInstance",
        "getAllInputsFromModules",
        "testInline16",
        "handleContinue",
        "appendCharMapTo",
        "tryRemoveRepeatedStatements",
        "testGoodOverrideOfProtectedProperty",
        "testInlineExpressions11",
        "visitAssignmentOrUnaryOperatorLhs",
        "redeclare",
        "addVarArgs",
        "referenceParentNames",
        "testCanInlineReferenceToFunction28",
        "checkCompilesTo",
        "testDeepNestedBreakwithFinally",
        "getSite",
        "processFunctionCall",
        "declareTemplateTypeName",
        "HTMLTableRowElement",
        "getJSDocInfo",
        "testInline18",
        "fromBytes",
        "getModuleGraph",
        "NodeTraversal",
        "testRequireErrorCases",
        "recordNoSideEffects",
        "testNoRewriteIfNotInGlobalScope1",
        "testNoInlineArraysOrRegexps",
        "testOneSideEffectCallDoesNotRuinOthers",
        "testInlineFunctions3",
        "testAnonymous6",
        "appendOp",
        "testLiveRangeChangeWithinCfgNode2",
        "PassFactoryDelegate",
        "testExternType",
        "setSafeFnNode",
        "testStringsInModules",
        "CSSStyleSheet",
        "testLoggerDefinedStatically",
        "UnionTypeBuilder",
        "RefInfo",
        "computeUseDef",
        "canAssignTo",
        "testNoRemoveCall5",
        "WebSocket",
        "caseAllType",
        "processDoLoop",
        "testDoWhileOrder",
        "testSanityCheck",
        "getEndLineno",
        "hasInstanceType",
        "testNoClassMovement2",
        "testUnaryOperators2",
        "getProvides",
        "verifySubtypeOf",
        "expandTypesToSkip",
        "getDef",
        "testPeerAndSubpropertyOfUncollapsibleProperty",
        "testForLoopIntegration",
        "testMissingModuleDependencyDefault",
        "newNumber",
        "setAllowMemberExprAsFunctionName",
        "testGlobalThis2",
        "testShadowVariables5",
        "testIndependentStrictModuleDependencyCheck",
        "GoogleCodeRemoval",
        "lineSource",
        "HTMLHeadingElement",
        "createDirectedGraphNode",
        "FlowState",
        "testRecursiveFunction1",
        "testDivision",
        "CSSUnknownRule",
        "collapseVariableDeclarations",
        "getLanguageVersion",
        "inline",
        "testMaybeAddTempsForCallArguments24",
        "containsName",
        "testNoWarningInGlobalScope",
        "matchesObjectContext",
        "testNoInlineIfDefinitionMayNotReach",
        "newStringNode",
        "testFunctionMovement8",
        "isConstantName",
        "getBooleanOutcomePair",
        "getFunctionPrototype",
        "setSize",
        "collapseAssign",
        "markPropertyAccessCandidate",
        "forJSTypeSystem",
        "testClassMovement2",
        "setKnownConstants",
        "MaybeReachingVariableUse",
        "testRemoveForChild",
        "testPrintInOperatorInForLoop",
        "makeReference",
        "testObjLitDeclaration",
        "testClassMovement3",
        "fold",
        "testRefChain5",
        "testRemoveAdd1",
        "testHarmless",
        "newIterator",
        "testFunctionNonMovement1",
        "ObjectLiteralCast",
        "HTMLSelectElement",
        "maybeHandlePrototypePrefix",
        "testStringAdd",
        "testExternSubTypesForObject",
        "testRefChain2",
        "ChainCalls",
        "testSkipConflictingMethods",
        "testPropertyNameThatIsBothObjLitKeyAndPrototypeProperty",
        "memberExprTail",
        "setEndLineno",
        "testExported",
        "isOrdinaryFunction",
        "notePreferredLineBreak",
        "removeBlockInliningReferences",
        "stringToNumber",
        "testInlineConstructorCallsIntoLoop",
        "testNeverRemoveImplicitlyUsedProperties",
        "testStableRenameWithNameOverlap",
        "testImplicitPropCallWithArgs",
        "getBaseLineno",
        "NameInfo",
        "Comment",
        "LocalScopeBuilder",
        "testContinueToSwitchWithDefault",
        "testSubtraction",
        "CodingConventionAnnotator",
        "RemoveUnusedNames",
        "testNoInlineConstructors",
        "getNameInfoForName",
        "errors",
        "testInlineInFunction5",
        "declareVarsForObjLitValues",
        "documentParam",
        "addStubsForUndeclaredProperties",
        "getProp",
        "functionThrows",
        "testEscaped",
        "testRemoveVarGet2",
        "testAliasCreatedForEnumDepth2_2",
        "testRemovePrototypeDefinitionsInGlobalScope1",
        "testInlineAliases1",
        "getToken",
        "Document",
        "GearsOpenFileOptions",
        "testIf1",
        "rewriteCallSites",
        "keepSubTree",
        "recordVersion",
        "setHidden",
        "traverseGetProp",
        "readResolve",
        "testProtectedAccessForProperties2",
        "FlowSensitiveInlineVariables",
        "initLineSource",
        "expectObject",
        "ExportTestFunctionsTest",
        "RestrictByOneTypeOfResultVisitor",
        "CanvasGradient",
        "testAliasCreatedForObjectDepth1_3",
        "tryFoldStringJoin",
        "testCallUndefinedFunctionGivesNoWaring",
        "isIdentityFunction",
        "testRewriteSameModule1",
        "testCanInlineReferenceToFunction42",
        "readRegExp",
        "testRefChain6",
        "NoSideEffectCallEnumerator",
        "testEnumOfObjects2",
        "testCanInlineReferenceToFunctionInExpression10",
        "NameReferenceGraphConstruction",
        "testCanInlineReferenceToFunctionInExpression1",
        "testNamespacedVariables",
        "testNoSideEffectAnnotation13",
        "BooleanType",
        "testComplexInline7",
        "hasType",
        "HTMLTableCaptionElement",
        "getPositionOnStartLine",
        "testSimpleDefinitionFinder2",
        "tryRemoveAssignment",
        "PerformanceTracker",
        "testObjLitWithNonIdentifierKeys",
        "inferConcreteType",
        "processThrowStatement",
        "testChainedVarAssignments3",
        "testCostBasedInliningComplex7",
        "generatePrototypeDeclarations",
        "testUselessCodeInFor",
        "testNoRemoveAssign3",
        "tryMinimizeNot",
        "getFirstChild",
        "testNoFunction",
        "testCanInlineReferenceToFunctionInExpression22",
        "getSourceExcerpt",
        "getNextXMLToken",
        "getTypeWithProperty",
        "removeThreadLocal",
        "createAst",
        "traverseOr",
        "setLineBreak",
        "formatWarning",
        "testNoInlineOfNonGlobalFunction3",
        "matchesNumberContext",
        "testShadowVariables14",
        "testEmptyMethodInlineWithSideEffects",
        "testCostBasedInliningComplex6",
        "StringNode",
        "getKey",
        "minimize",
        "getPropertiesCount",
        "testUnknown",
        "testInline9",
        "recordTemplateTypeName",
        "testObjectPropertyInitializedLate",
        "findDeclaredNames",
        "testRefChain10",
        "testFindModifiedParameters2",
        "testWhile1",
        "visitPreOrder",
        "testRemovalRequiresRedeclaration",
        "testUnionTypeInvalidation",
        "getAlternates",
        "testWhile2",
        "MappedCodePrinter",
        "unescape",
        "testParameter",
        "readEntity",
        "testRemoveRenameFunctionStubs1",
        "testCanInlineReferenceToFunction44",
        "testWarningForBind",
        "setDefineToBooleanLiteral",
        "getErrorPrintStream",
        "caseFunctionType",
        "testNoWarningInDeprecatedClass2",
        "createIf",
        "CDATASection",
        "testReplaceEmptyFunction2",
        "generatePostProcessThrowCode",
        "removeInlinedFunctions",
        "testNoRemoveCall4",
        "setNoCheck",
        "addAfter",
        "testAddPropertyToChildOfUncollapsibleFunctionInLocalScope",
        "testWithPrefix",
        "testPartialExitPaths",
        "testRefToDescendantOfUndefinedPropertyGivesCorrectWarning",
        "testMixedModeInlining1",
        "getLValue",
        "InlineVariablesConstantsTest",
        "enables",
        "setIsClassOrEnum",
        "getEncodedSource",
        "testRemoveFromLabel2",
        "getCode",
        "testNamespaceAnnotationInExterns5",
        "getSource",
        "RestrictByTrueTypeOfResultVisitor",
        "getSourceName",
        "testMoveExpression1",
        "ExtractionInstance",
        "AstParallelizer",
        "testNoWarningInDeprecatedFunction",
        "flowsFromBottom",
        "testNestedAssign3",
        "testNoSideEffectAnnotation9",
        "testParsePrintParse",
        "getItem",
        "typeError0",
        "testFoldRegExpConstructor",
        "getFunctionCount",
        "setTaintsUnknown",
        "newSubGraph",
        "checkDeclaration",
        "testComplexAssigns",
        "testConstructorProperty",
        "testUseAndDefInSameInstruction",
        "getTokenno",
        "DocumentFragment",
        "checkCompilesToSame",
        "testNamedFunction",
        "testFlattening",
        "FindExportableNodes",
        "testConstructorThatModifiesThis2",
        "testSideEffectClassification5",
        "addNativeProperties",
        "testRemovePrototypeGet1",
        "testBadObjectLiteralCast2",
        "canNameValueChange",
        "getPrototypePropertyName",
        "verifyScopes",
        "testGlobalThis3",
        "isReferenced",
        "pushContainingFunction",
        "testComplexInlineInExpresssions1",
        "testMissingGoogProvideWithNamespace",
        "findExpressionRoot",
        "getVersion",
        "getFirstParameter",
        "testCompiledIsKnownDefine",
        "traverseEdge",
        "testSimpleIf",
        "testNamespacedDefine3",
        "isPopulatedWithFileOverview",
        "testCallPrototypeFunctionWithArgs",
        "testAnonymousFunctions",
        "hasChildren",
        "isSameClass",
        "testRemoveNamespaceGet1",
        "testBug2072343",
        "getCurrentBufferLength",
        "testNoInlineOfNonGlobalFunction4",
        "testAndParenthesesCount",
        "EnumElementType",
        "DOMImplementation",
        "testComplexInlineVars7",
        "testInline1",
        "testMinimizeCondition_example1",
        "reserveName",
        "DefaultPassConfig",
        "sanityCheckVars",
        "testConstants2",
        "clone",
        "canBeSideEffected",
        "clearNodeAnnotations",
        "propagateSideEffects",
        "getAstRoot",
        "consume",
        "DOMImplementationSource",
        "testRemoveOneOptionalMultipleCalls",
        "testInlineNeverMutateConstants",
        "getVar",
        "testCanInlineReferenceToFunction19",
        "recordReturnType",
        "FunctionParamBuilder",
        "testDoNotEnterCatch",
        "getNameIndex",
        "testThisJSDoc5",
        "getDebuggerContextData",
        "reportCodeChange",
        "testMoveMethodsInRightOrder",
        "testOverriding1",
        "parseTypeNameAnnotation",
        "testTwoIndependentVar",
        "JSModule",
        "testIsNameReferenceCount",
        "testWarnShadowLocal1",
        "isPrototypeMethodDefinition",
        "isExpressionNode",
        "isValidIdentifierName",
        "testMixin4",
        "tryMinimizeIfBlockExits",
        "startPass",
        "testRequiresAreCaughtBeforeProcessed",
        "processHook",
        "computeDependence",
        "testRefChain13",
        "isSubexpressionMovable",
        "testPrototype",
        "testComma5",
        "keepSimplifiedHookExpression",
        "getLocalVarIndex",
        "testCallWithConstArgs",
        "setPrettyPrint",
        "isVarInlineForbidden",
        "HTMLButtonElement",
        "testExposeExpression10",
        "processIllegalToken",
        "helperCanExposeExpression",
        "assertDefinesClasses",
        "getControlCharacter",
        "isPropertyTree",
        "isNumber",
        "CollapseAnonymousFunctions",
        "helperMoveExpression",
        "testRemoveOneOptionalVarAssignment",
        "push",
        "AliasStringsTest",
        "semicolonJoin",
        "testIllegalArgumentIfHookKeepNeitherBranch",
        "testStaticFunctionReferencingThis3",
        "testExposeExpression14",
        "hasBaseType",
        "completeScope",
        "Function<Pair<JSType,JSType>,Pair<JSType,JSType>>",
        "getInstanceTypeWithProperty",
        "testRenameProperties",
        "testMoveExpression10",
        "testHarmlessProcedural",
        "isExpressionTreeUnsafe",
        "testAndOperator3",
        "ExportTestFunctions",
        "testConstantRedefined2",
        "hasParsedFileOverviewDocInfo",
        "recordImplementedInterface",
        "testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit",
        "declareNameInScope",
        "getDirectedGraphNodes",
        "testExportNonexistantProperty",
        "expectCanOverride",
        "getNextSiblingOfType",
        "URIError",
        "testSupertypeWithSameField",
        "testRefToUndefinedProperty2",
        "InlineGetters",
        "testInlineMutableArgsReferencedOnce",
        "testNoInlineLoopCarriedDefinition",
        "testStableRenameWithPrefix2",
        "CSSFontFaceRule",
        "tryFoldShift",
        "visitCallNode",
        "GearsCoords",
        "testInlineEmptyFunction2",
        "getNode",
        "getNode1Id",
        "testCanInlineReferenceToFunction10",
        "testNoInlineAliases4",
        "testAnonymousFunctionOmega",
        "isInterface",
        "testAssignmentToProperty",
        "blacklistVarReferencesInTree",
        "testAssignmentToPropertyOfCallReturnValue",
        "CheckRequiresForConstructors",
        "testFoldStringLength",
        "testReturnInFinally",
        "injectNamespace",
        "handleFunctionInputs",
        "testDoNotChangeReferencedLocalScopedInstanceOf",
        "getWarnings",
        "testAssignmentToPrototype2",
        "testConstructorThatModifiesThis3",
        "replaceChild",
        "testInterfaceOfSuperclass",
        "PassConfig",
        "documentReturn",
        "outputNameMaps",
        "createDecompiler",
        "HTMLDListElement",
        "getNodeDegree",
        "createEnumType",
        "createReturn",
        "testNoSideEffectAnnotation3",
        "toSourceArray",
        "stripPrototype",
        "lastIndexOf",
        "propToString",
        "testGlobalFunctionReferenceOfThis",
        "AnonymousFunction",
        "testDoNotInlineIntoLhsOfAssign",
        "EvalError",
        "testDoLoopIECompatiblity",
        "testUnnormalizeNodeTypes",
        "testStableRenameSimpleLocalNameExterned",
        "testDependencies",
        "TestErrorReporter",
        "maybeLineBreak",
        "testComplexInline3",
        "testConstantRedefinedInLocalScope2",
        "estimateCallCost",
        "testStarStrictModuleDependencyCheck",
        "needsAliases",
        "getMainOptimizationLoop",
        "testReferencedVarDefined1",
        "testTwoArsWithVariableFirstArg",
        "testViolatedModuleDependencyDefault",
        "testEnumAlias",
        "markTwins",
        "testEnumRAI1",
        "testNoInlineOfExternMethods1",
        "testNoInlineMutableArgs1",
        "testInlineFunctions19",
        "traverseNode",
        "testNewNodesMeta",
        "getEndLine",
        "isStringWorthInlining",
        "readXmlComment",
        "testMissing",
        "testDoNotExitLoop",
        "isAliasName",
        "VerboseMessageFormatter",
        "getRoot",
        "testSetterInForStruct8",
        "argsMayHaveSideEffects",
        "setDefineToStringLiteral",
        "getNameReferenceGraph",
        "RemoveConstantExpressionsParallel",
        "createNameInformation",
        "createSwitchCaseConditionExpression",
        "testSetPropertyOfGlobalThis",
        "MoveFunctionDeclarations",
        "SymbolExport",
        "testManyFiles",
        "Preloaded",
        "Context",
        "testCanInlineReferenceToFunction7",
        "testStringsThatAreGlobalVarValues",
        "testShortCircuit1",
        "isAliased",
        "testFunctionCalls",
        "testGlobalWriteToAncestor",
        "testComplexNestedAssigns4",
        "ScriptEngine",
        "testMultilineMapping",
        "getExistingInt",
        "parseFieldType",
        "warning",
        "isAssignmentOp",
        "setIsNoSideEffectsCall",
        "maybeAddTempsForCallArguments",
        "testParameter2",
        "isDigit",
        "testLoggerMethodCallByVariableType",
        "nameAnonymousFunctions",
        "SQLResultSetRowList",
        "testRemoveVarAssignment",
        "PropertyExport",
        "toString",
        "testNoInlineStringMultipleTimesIfNotWorthwhile",
        "testContainsFunctionDeclaration",
        "testAnonymousFunctionCallInlining4",
        "testMixedModeInliningCosting3",
        "testAliasCreatedForObjectDepth1_2",
        "reportRuntimeError1",
        "GearsLocalServer",
        "acquire",
        "testRemoveLabelChild1",
        "noInline",
        "testAliasCreatedForClassDepth1_1",
        "visitParameterList",
        "Array",
        "testCorrectCode",
        "testFoldReturnResult",
        "testMultipleDeclarationError3",
        "getLine",
        "IndexedType",
        "matchesInt32Context",
        "isNodeAttached",
        "addParam",
        "testPreserveAnnotatedTryBlock",
        "isAlpha",
        "getLabelNameForFunction",
        "testInlineNeverOverrideNewValues",
        "testNullUndefined",
        "getAncestors",
        "parseHelperCode",
        "addMutatorFunction",
        "testWarningInNormalClass",
        "setWord0",
        "testLineBreak",
        "testGlobalFunctionsInGraph3",
        "forgiveUnknownNames",
        "recordOverride",
        "addRef",
        "testAssignToExtern",
        "testSelfModuleDep",
        "testNoRewriteCodingConvention",
        "testShortCircuit6",
        "setPrototypeBasedOn",
        "ProcessDefines",
        "moveExpression",
        "testNoRewriteNoReferences",
        "getDelegateRelationship",
        "assertRedeclare",
        "testRecursiveInternal1",
        "testAssignmentWithComplexLhs3",
        "testDefineWithBadValue",
        "getFn",
        "testExportSymbolAndProperties",
        "testVarMovement5",
        "position2charno",
        "testAndOr",
        "RangeException",
        "testAnnotationInExterns",
        "getEncodedSourceEnd",
        "setErrors",
        "testConstantRedefinedInLocalScopeOutOfOrder",
        "assertWarning",
        "checkKeepSimplifiedHookExpr",
        "testStaticFunction7",
        "testSetTimeout",
        "isLValue",
        "testSetterInForStruct2",
        "HTMLParamElement",
        "testCostBasedInlining5",
        "testRemoveVarDeclartion1",
        "handleExpr",
        "iterator",
        "getFunctionParameterSet",
        "parseTypeExpressionList",
        "setDescription",
        "testSideEffectClassification7",
        "firstPreciserScopeKnowingConditionOutcome",
        "sourceName",
        "getReferenceCollection",
        "dereferencePointer",
        "removeRef",
        "denormalize",
        "testInheritanceDetection1",
        "testMultiPaths",
        "maybeRecordExport",
        "testInlineExpression8",
        "testComplexNoInline1",
        "shouldExtract",
        "getMatchingTypes",
        "trimEnd",
        "testNestedAssign15",
        "CSSPageRule",
        "testInvalidAnnotation4",
        "findModifiedParameters",
        "currentParent",
        "testAliasThrowKeywordLiteral",
        "isValidDefineType",
        "tokenToString",
        "getJSType",
        "isAll",
        "tryFoldComparison",
        "isLocal",
        "testNoRemoveCall3",
        "newReportFunctionExitNode",
        "testConsumption3",
        "testReferenceInAnonymousObject5",
        "testDefinitionAfterUse",
        "testWarningForSuperclassMethod2",
        "testFoldTypeof",
        "testExportMultiple2",
        "addPropertyChangeListener",
        "FunctionVar",
        "testCostBasedInliningComplex9",
        "testObjLitDeclarationWithDuplicateKeys",
        "getDescriptionForParameter",
        "testCanInlineReferenceToFunctionInExpression4",
        "testDefineNumber",
        "eof",
        "testErr",
        "isSuperClassReference",
        "NumberNode",
        "addToSetIfLocal",
        "testPropertyOfChildFuncOfUncollapsibleObjectDepth1",
        "isNominalType",
        "removeActivationName",
        "replaceWith",
        "testRenamePrefixOfUncollapsibleProperty",
        "testAssignBeforeDeclaration1",
        "beginBlock",
        "addType",
        "testSideEffectClassification3",
        "eliminateKeysWithStripNamesFromObjLit",
        "testUnnormalized",
        "testNewFunctionNode",
        "testFindModifiedParameters1",
        "replace",
        "testMoveMethodsInRightOrder2",
        "createBlock",
        "getCurrentLineIndex",
        "endPass",
        "getModule",
        "collectAliasCandidates",
        "testUnhandledTopNode",
        "Declaration",
        "FlagUsageException",
        "getUniqueResultName",
        "CompilationLevel",
        "testStaticFunction6",
        "testPropertiesDefinedWithGetElem",
        "declarationIterator",
        "checkPropertyDeprecation",
        "getNameReferenceCount",
        "testTypeAnnotationsMember",
        "createConcreteFunction",
        "getGreatestSubtype",
        "isConstant",
        "CheckSideEffectsTest",
        "isResolved",
        "getTypesUnderShallowEquality",
        "isNamespace",
        "createConcreteInstance",
        "setImplicitPrototype",
        "TextMetrics",
        "removeDuplicateDeclarations",
        "testCanInlineReferenceToFunction33",
        "testCanInlineReferenceToFunction11",
        "getConcreteFunction",
        "JavaScriptException",
        "testBadOverrideOfProtectedProperty",
        "testReassignAfterCall",
        "testMisspelledOverride",
        "InstrumentReturns",
        "addTypeToSkip",
        "VarCheckTest",
        "testUntypedImplicitCallFromProperty",
        "getNodes",
        "CheckProvidesCallback",
        "isInstance",
        "testShadowVariables7",
        "testBug8730257",
        "testMissingProvides",
        "testObjLitAssignmentDepth4",
        "shiftExpr",
        "CheckProvides",
        "testComplexInline6",
        "shouldRename",
        "testReferredToByWindow",
        "parseParamTypeExpressionAnnotation",
        "testObjLitAssignedInTernaryExpression1",
        "getRelatedTypesOnNonUnion",
        "testRValueReference6",
        "testNamespaceResetInLocalScope2",
        "defineSlot",
        "testWarningForProperty1",
        "testGoogProvideMissingConstructorIsOkForNow",
        "testRenamePropertiesWithLeadingUnderscoresStable",
        "testCascadingInlines",
        "isSet",
        "CrossModuleMethodMotion",
        "testHook3",
        "testReturnInTry",
        "HTMLSpanElement",
        "ParallelCompilerPass",
        "maybeMarkCandidate",
        "testNestedAssign6",
        "testRemoveRenameFunctionStubs2",
        "controlRange",
        "testThisJSDoc1",
        "testInlineReferenceInExpression1",
        "getPrimitiveType",
        "declareType",
        "isLiteralValue",
        "canRenamePrototypeProperty",
        "testSkipNativeFunctionMethod",
        "testVarinIf",
        "testCanInlineReferenceToFunctionInExpression18",
        "fillSourceBuffer",
        "traverseName",
        "renameProperties",
        "testHook7",
        "createDebugger",
        "GearsProgressEvent",
        "expectNotVoid",
        "testOptArgsLast",
        "testParameterSlots",
        "testExposeExpression3",
        "replaceNode",
        "allowsUndeclaredVariables",
        "InlineFunctionsTest",
        "testClassDefiningCallWithStripType1",
        "getNodeTypeReferenceCount",
        "testCostBasedInliningComplex8",
        "testNestedDoWithBreak",
        "testInterferingInlines",
        "checkFirstModule",
        "defineProperty",
        "isNative",
        "testCorrectCatch",
        "newParameterFromNode",
        "setRemove",
        "isStringObjectType",
        "testInlineExpressions4",
        "updateSimpleDeclaration",
        "getParseJSDoc",
        "testIgnoredOps",
        "testGetFunctionName5",
        "testNoSideEffectAnnotation1",
        "getPropertyMap",
        "testIfElseVarDeclarations",
        "testNoWarningForSimpleVarModuleDep2",
        "createParameterizedType",
        "testSimpleReassign1",
        "testCallFunctionWithArgs",
        "Predicate<Node>",
        "defineInferredProperty",
        "testFold1",
        "getSimplifiedName",
        "testGlobalFunctionsInGraph5",
        "typeError1",
        "testDeadAssignment",
        "decomposeExpressions",
        "Inline",
        "recordSuperClassPrototypePropUse",
        "testDeprecatedFunctionVariable",
        "caseNoType",
        "allowsVariableRedeclaration",
        "ScriptEngineMajorVersion",
        "Image",
        "testStringJoinAdd_b1992789",
        "prep",
        "DisambiguateProperties",
        "getMessages",
        "testThisJSDoc4",
        "testInvalidProvide",
        "CreateScope",
        "NoRewriteIfNotInGlobalScopeTestInput",
        "setInstructionObserverThreshold",
        "getEnclosingFunction",
        "getNumUseInUseCfgNode",
        "testAssignmentWithComplexLhs",
        "finalizeNameAssignment",
        "processProperty",
        "lastIndexResult",
        "testFoldLogicalOpStringCompare",
        "markPureFunctionCalls",
        "testCallUndefinedMethodOnObjLitDepth2",
        "testRewriteSameModule2",
        "testVarNotImmediatelyBelowScriptOrBlock3",
        "Ref",
        "addSwitchCase",
        "testAssignmentToGetElem",
        "set",
        "testShortCircuit4",
        "getSourceMap",
        "createFunctionTypeWithNewReturnType",
        "getReverseAbstractInterpreter",
        "getFunctionMap",
        "testAppNameSetter",
        "testInnerFunctionsAfterArguments",
        "makeTypeInference",
        "createUnionType",
        "testNamespaceAnnotationInExterns4",
        "testFailWithLocalVariableInMoreThanOneFile",
        "FunctionArgumentInjector",
        "testFailWithWarningsAndMultipleFiles",
        "getModuleCount",
        "testReferenceInAnonymousObject0",
        "exportTestFunction",
        "getNativeType",
        "createFromTypeNodes",
        "testAnonymousFunctionCallInlining8",
        "testNoInlineGetProp3",
        "getLabelInfo",
        "shouldPreserveTry",
        "setRewriteNewDateGoogNow",
        "NullType",
        "testConstructor1",
        "prompt",
        "isInterfaceRecorded",
        "testTopLevelClass3",
        "removeConstantMarkerFromName",
        "lookupNewName",
        "next",
        "testMultipleVar2",
        "hasConditionalAncestor",
        "testIf3",
        "testFunctionPropertySetToObjLitConditionally",
        "testConstantPreDecremented1",
        "testComplex2",
        "testRecognizeGetCssName",
        "testDoNotEnterFinally",
        "visitName",
        "testBasicMismatch",
        "testGlobalFunctionsInGraph6",
        "primaryExpr",
        "getOriginalNameToNewNameMap",
        "getRelated",
        "initForExternRoot",
        "getRewrittenMethodName",
        "Property",
        "getGraphvizNodes",
        "appendVarArgsString",
        "getJoinedFlowScope",
        "testNoWarn",
        "inlineNonConstants",
        "getRegexpString",
        "testClassDefiningCallWithStripType6",
        "testObjLitAssignedToMultipleNames2",
        "okToRenameVar",
        "testMinimizeExpr",
        "MarkNoSideEffectCallsTest",
        "testInlineFunctions21",
        "setVisibility",
        "testBreakOptimization",
        "getControlFlowGraph",
        "testStraightLine",
        "normalizeJsDocAnnotations",
        "SimpleSlot",
        "compileInternal",
        "testIgnorePrivatelyAnnotatedConstructor",
        "GraphAnnotationState",
        "ProcessingInstruction",
        "GearsProgressObject",
        "hasDescriptionForParameter",
        "traverse",
        "isDateType",
        "isBreakTarget",
        "ClosureReverseAbstractInterpreter",
        "isBlockBoundary",
        "testComplex3",
        "testAnalyzePrototypeProperties",
        "getGeneratedExterns",
        "testRhsAssign5",
        "testInferredProperty",
        "ReportCodeHasChangedListener",
        "isHidden",
        "testClassDefiningCallWithStripType3",
        "getSideEffectsAndNode",
        "testShadowVariables13",
        "setReferencedType",
        "testIncorrectAttemptToAccessQuotedProperty",
        "ProvidedNode",
        "cost",
        "CombinedCompilerPass",
        "helperCanInlineReferenceToFunction",
        "testMergeDefinitions",
        "getDeepestCommonDependency",
        "DataFlowAnalysis",
        "testShortCircuitingOr",
        "getTypeAnnotation",
        "testRemoveVarDeclartion6",
        "Error",
        "testSimpleVar",
        "setVarArgs",
        "testDoNotCrossFunctionCalls",
        "removeVarDeclaration",
        "isAllowMemberExprAsFunctionName",
        "DotFormatter",
        "testNotAFunction",
        "extractCharno",
        "PassConfigDelegate",
        "getDirectedPredNodes",
        "ControlFlowGraph",
        "testOverlappingInlineFunctions",
        "isUnionType",
        "testRemoveInstanceOfWithReferencedMethod",
        "setWarnings",
        "recordInterface",
        "argumentList",
        "testAssignmentToExternPrototype",
        "disconnectInDirection",
        "testRedeclaration1",
        "StringInfo",
        "testFunctionsWithJsDoc1",
        "parseTypeExpression",
        "makeError",
        "isKeyword",
        "testFooPrototypeBar",
        "testInline6",
        "addCaseBody",
        "getRegexpFlags",
        "isActivationNeeded",
        "testAnonymousFunctionInlining1",
        "testNewNodesMetaTraditionalFunctionForm",
        "testDefineWithDependentValue",
        "MakeDeclaredNamesUnique",
        "testPropertyWithEmptyStringKey",
        "testIsSimpleFunction1",
        "testVarMovement3",
        "GearsBlobBuilder",
        "NamedFunction",
        "enterScopeIfActive",
        "Visitor<JSType>",
        "retrieveAndResetParsedJSDocInfo",
        "testError",
        "PrototypeMemberDeclaration",
        "testConstructor3",
        "getMap",
        "XPathException",
        "setTypedefType",
        "testVar",
        "jsString",
        "assertAllLoopablePasses",
        "testInlineGlobal",
        "reportTypeSyntaxWarning",
        "testAliasCreatedForFunctionDepth1_1",
        "hasParameterType",
        "populateDefaults",
        "getBooleanProp",
        "setOutputTypes",
        "testNoInlineIntoNamedFunction",
        "applySafeCompilationOptions",
        "cloneAndReclassify",
        "isFunctionAnonymous",
        "hasOwnDeclaredProperty",
        "discoverBackEdges",
        "assertMutableState",
        "testDoubleDeclaration2",
        "testInlineConstantAliasWithAnnotation",
        "testRefToPropertyOfAliasedName",
        "checkNamespaces",
        "testNoShadowAnnotationInExterns1",
        "reusePreviouslyUsedVariableMap",
        "testGetPrototypeProperty",
        "testThis",
        "testEmptyMethodInlineInAssign2",
        "shouldColorizeErrorOutput",
        "variables",
        "testSplitAnonFuntion",
        "testExtractingTwoClassPrototype",
        "isGlobalScope",
        "getElements",
        "testTypePrefix",
        "generateStackTrace",
        "testEscapedLiveness",
        "registerTypeImplementingInterface",
        "createOptionalNullableType",
        "testEnumRAI4",
        "xor",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope4",
        "getBlockReturnExpression",
        "testHaltAtVarRef",
        "isJSLineTerminator",
        "tryFoldRegularExpressionConstructor",
        "testPrototypePropertySetInLocalScope2",
        "isTypeToSkip",
        "isDeprecated",
        "testNoRewriteMultipleDefinition3",
        "createEntryLattice",
        "makeForwardSlashBracketSafe",
        "extractMultilineTextualBlock",
        "getCharacterIndex",
        "getContextForNonEmptyExpression",
        "resolveInlineConflictsForFunction",
        "testModulesWithDependencies",
        "getResults",
        "testNoPrivateAccessForProperties7",
        "isImmutableAndWellDefinedVariable",
        "markAllParametersEscaped",
        "isExpressBlock",
        "markReferencedVar",
        "testSimpleAdditionalProvide",
        "testObjLitAssignedToMultipleNames1",
        "testDuplicateVar",
        "testInlineFunctions25",
        "testTypedExterns",
        "CallSite",
        "isValidOptimizationLevel",
        "insideFunction",
        "testPassWithLocalFunctions",
        "getLastSibling",
        "testRefChain20",
        "testNoShadowAnnotationInExterns2",
        "testTwoModules",
        "nameEndsWithFieldNameToStrip",
        "explicitReturnExpected",
        "isStaticNameReference",
        "PhaseOptimizer",
        "testCanInlineReferenceToFunctionInExpression10a",
        "referencesThis",
        "testExternedPropertyName",
        "inFunction",
        "testScopeRootNode",
        "isCheckedUnknownType",
        "TypeValidatorTest",
        "testRemoveOneOptionalNamedFunction",
        "testCanInlineReferenceToFunction17",
        "TypeInference",
        "tryEliminateOptionalArgs",
        "JS_dtobasestr",
        "testComma",
        "testIf5",
        "reportMissingProperties",
        "testInference4",
        "testPropMutatorPushedDeeper",
        "mapToString",
        "testMethod3",
        "testGetElem1",
        "TypedCodeGenerator",
        "testMultiUse",
        "traverseCall",
        "reportError",
        "extractDeclaration",
        "testRenameWithPrefix3",
        "disableThreads",
        "getRequires",
        "getLastCompiler",
        "isValidLanguageVersion",
        "EventTarget",
        "testAliasCreatedForClassDepth1_3",
        "isSimpleName",
        "testFoldAssignments",
        "testNamespaceResetInGlobalScope1",
        "Var",
        "testBug2062487",
        "testSideEffectClassification4",
        "testInlineConstantAlias",
        "Option",
        "testReferenceInAnonymousObject3",
        "undefCallError",
        "JSError",
        "testAdd2",
        "processExpressionStatement",
        "Number",
        "getFuncChild",
        "testRhsAssign4",
        "checkDefinitionsInExterns",
        "HTMLOptGroupElement",
        "getCharno",
        "removeUnusedSymbols",
        "testCatch",
        "generateSourceMap",
        "setFunctionName",
        "replaceProvide",
        "testAnonymousFunctionCallInlining3",
        "testExitTry",
        "getPropertyName",
        "createOptionalType",
        "testConstructorThatModifiesGlobal2",
        "testMaybeAddTempsForCallArguments21",
        "testLiteralMappings",
        "setTypedPercent",
        "peekChar",
        "getWarningsGuard",
        "Counter",
        "testShortCircuitingAnd2",
        "testEmptyVar",
        "LabelInfo",
        "TemplateType",
        "load",
        "getExportedPath",
        "getReferencesInternal",
        "isString",
        "setSanityCheck",
        "testNestedAssign",
        "createUnary",
        "notifyCompiler",
        "getStringValue",
        "toStringTreeHelper",
        "testParameter3",
        "setConstructor",
        "InstrumentFunctions",
        "tryFoldLeftChildAdd",
        "testConstructorAnnotationInExterns1",
        "attributeAccess",
        "BranchedForwardDataFlowAnalysis",
        "AmbiguatePropertiesTest",
        "CSSProperties",
        "setType",
        "CheckMissingGetCssName",
        "testStripVarsInitializedFromStrippedNames",
        "processCatchClause",
        "testRhsReference3",
        "getChildAtIndex",
        "testGlobalObjectNameInBooleanExpressionDepth3",
        "findRootOrCreateNode",
        "hasOverridenNativeProperty",
        "testDoNotExitConditional",
        "caseEnumElementType",
        "testCanInlineReferenceToFunctionInExpression21",
        "fromMap",
        "testProvidedDeclaredFunctionError",
        "getOut",
        "computeVariableNamesInterferenceGraph",
        "testObjLitWithQuotedKeyThatDoesNotGetRead",
        "assertNodeOrder",
        "NoRewriteDeclarationUsedAsRValue",
        "inlineConstReturn",
        "isExport",
        "getHtmlReport",
        "testNoInlineAliases",
        "testFunctionArgRemoval",
        "isSealed",
        "printSourceNumber",
        "testNoInlineRegExpLits",
        "testFoldLogicalOp",
        "canMoveModerately",
        "addDeps",
        "disabled",
        "FunctionlessLocalScope",
        "xmlInitializer",
        "JS_dtoa",
        "testAssignmentInExpressions",
        "testAssumption",
        "testReadPropertySetByGeneratedCode",
        "assertTypeAnnotations",
        "testNotReachingDefinitions",
        "testLongStableAliasHashCollision",
        "AliasStrings",
        "testPropertyDeclarationOnInstanceType",
        "handleStmt",
        "caseAndOrMaybeShortCircuiting",
        "areValidRegexpFlags",
        "testInlineExpressions2",
        "replaceReturns",
        "testRecursiveExternal2",
        "testTwiceDefinedGlobalNameDepth2",
        "assertSideEffect",
        "testNoRemovalFunction1",
        "testGlobalFunctionsInGraph2",
        "flowThrough",
        "maybeProcessDeclaration",
        "testAddPropertyToObjectInLocalScopeDepth1",
        "caseBooleanType",
        "FunctionCall",
        "getChar",
        "testWarningForDeprecatedClass",
        "InstrumentFunctionsTest",
        "DelegateRelationship",
        "isEmptyType",
        "canRenameObjLitProperty",
        "expectActualObject",
        "has",
        "testDoNotCrossAssignment",
        "isVarArgsParameter",
        "isSpecialProperty",
        "testCanInlineReferenceToFunction27",
        "getDependentModule",
        "ContextualRenameInverter",
        "getAllImplementedInterfaces",
        "getBlockVar",
        "createOptionalParameters",
        "testMultipleDefinitionsWithDependence",
        "isStrictMode",
        "peekToken",
        "getParamType",
        "GearsFile",
        "setGeneratingSource",
        "expectSwitchMatchesCase",
        "maybeCutLine",
        "endCaseBody",
        "testExterns",
        "testInlineFunctions6",
        "ExceptionCode",
        "RhinoException",
        "setImplicitCast",
        "compileAndCheck",
        "appendBlockEnd",
        "testFoldConditionalVarDeclaration",
        "testGetFunctionName2",
        "testAnalyzeUnusedPrototypeProperties2",
        "testMakeLocalNamesUniqueWithContext2",
        "isSyntheticBlock",
        "testRenameWithExterns2",
        "traverseShortCircuitingBinOp",
        "containsFunctionDeclaration",
        "ModuleTestInput",
        "rewriteCallExpression",
        "addWarning",
        "testGlobalAliasPushedDeeper",
        "testExtractingPrototypeWithNestedMembers",
        "testInlineReferenceInExpression7",
        "assertUpEdge",
        "getMessage",
        "testArrayAssignments",
        "DocumentRange",
        "renameLabels",
        "testBreakCrossFunctionInFor",
        "testCanInlineReferenceToFunction31",
        "MimeType",
        "testPrototypePropertiesAsObjLitKeysStable",
        "testRemoveRecursiveFunction9",
        "isSwitchCase",
        "testNotMissing",
        "consumeToken",
        "testMultipleProvides",
        "testStubsInExterns2",
        "testComplexInlineInExpresssions5",
        "setParseJSDoc",
        "isWellDefined",
        "FunctionType",
        "RemoveTryCatch",
        "visitBreakOrContinue",
        "testCollapseForEachWithoutExterns",
        "testCanInlineReferenceToFunction29",
        "testInterweaved",
        "testCanInlineReferenceToFunctionInExpression2",
        "getSymbol",
        "testConstantRedefinedInLocalScope1",
        "caseInstanceOf",
        "testExportToNonStringDoesntExplode",
        "testArgumentRefOnNamedParameter",
        "setExport",
        "NamedFunctionDefinition",
        "ControlFlowAnalysis",
        "testRewriteSingleDefinition2",
        "getContextNode",
        "ensurePropertyDefined",
        "checkMarkedCalls",
        "firePropertyChange",
        "testNotCond",
        "scheduleRenaming",
        "NoRewritePrototypeObjectLiteralsTestInput",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope1",
        "getCrossModuleIdGenerator",
        "and",
        "testExtern",
        "setGenerateDebugInfo",
        "InlineFunctions",
        "SanityCheckTest",
        "testComplexInlineVars2",
        "shouldVisit",
        "getMaxArguments",
        "testStubsInExterns3",
        "testIncorrectSimple",
        "createContinue",
        "testClosureParameterTypesWithoutJSDoc",
        "testInheritanceDetection4",
        "testShadowVariables12",
        "appendTo",
        "testFunctionDeclaration",
        "CodeGenerator",
        "testTwoTypesTwoVar",
        "testComplexInlineVars11",
        "testFunctionDeclarations",
        "testRemoveVarDeclartion4",
        "isCallable",
        "setPrototype",
        "findFunction",
        "getThreadLocal",
        "getStringReport",
        "getNameForObjLitKey",
        "InlineGettersTest",
        "ObjectPropertyStringPostprocess",
        "details",
        "testShouldWarnWhenInstantiatingGlobalClassesFromGlobalScope",
        "testFunctionSafariCompatiblity",
        "Database",
        "current",
        "testComplexInlineNoResultNoParamCall2",
        "testRefChain23",
        "testTry3",
        "testFunctionArgumentsInExterns",
        "testCatch2",
        "testDoNotOptimizeConstructorWhenArgumentsAreNotEqual",
        "GlobalScopeBuilder",
        "isLhs",
        "createEmptyPass",
        "CoalesceVariableNames",
        "testInvalidFunctionDecl1",
        "DocumentType",
        "getDeprecationReason",
        "testMultiConditions",
        "StripCodeTest",
        "isOverride",
        "runInCompilerThread",
        "testNullablePrivateProperty",
        "assuming",
        "testObjectLiteralInLocalScope",
        "outputStringUsage",
        "parseUnionType",
        "getIntProp",
        "checkCall",
        "compileModules",
        "testInlineExpressions13",
        "CheckAccessControlsTest",
        "getParent",
        "testProtectedAccessForProperties5",
        "testExportSymbolAndConstantProperties",
        "traverseWithScope",
        "isSingleton",
        "getFunctionName",
        "escapeString",
        "testGlobalObjectNameInBooleanExpressionDepth1_1",
        "computeFunctionNames",
        "testNonWellformedAlias1",
        "testConditional",
        "getLastChild",
        "testBug2099540",
        "getInputs",
        "parseTypeExpressionAnnotation",
        "testReferenceInAnonymousObject2",
        "testConstructorAnnotationInExterns2",
        "testCanInlineReferenceToFunction5",
        "testExprExploitation",
        "MediaList",
        "toFunction",
        "scanNewNodes",
        "testZeroArguments",
        "ComplexKey",
        "getSynthesizedExternsRoot",
        "getNoSideEffectsAndNode",
        "testAliasCreatedForEnumDepth1_1",
        "GearsBlob",
        "isGet",
        "testLoops",
        "newVarNode",
        "isObject",
        "traverseObjectLiteral",
        "removeProp",
        "Location",
        "testLegalVarReferenceBetweenModules",
        "testPublicPropertyAssignment",
        "precedence",
        "containsCall",
        "maybeAliasNamesOnAssign",
        "getRemainingJSDocLine",
        "convertLastReturnToStatement",
        "testFindModifiedParameters5",
        "initCause",
        "StrictModeCheck",
        "testHooks",
        "testTwoRequiredSixthVarArgReferenced",
        "testFoldUselessDo",
        "hasNonLocalSideEffect",
        "RemovableAssignment",
        "setOverride",
        "addGuard",
        "generatePrototypeDeclaration",
        "setThisType",
        "NamedNodeMap",
        "testAmbiguousElseClauses",
        "testContainsUnicodeEscape",
        "aliasAndInlineArguments",
        "testKnownWhileLoop",
        "addAssignmentDeclaration",
        "skipEOLs",
        "testMoveExpression6",
        "SimpleDefinitionEnumerator",
        "getDefinition",
        "testDeclaration",
        "initScript",
        "SyntacticScopeCreator",
        "MinimizeExitPoints",
        "testNoInlineLValue",
        "handlePropertyExport",
        "isReference",
        "testMutateInitializeUninitializedVars2",
        "handleCatch",
        "addGlobalUseOfSymbol",
        "getUndirectedGraphNodes",
        "testGlobalObjectNameInBooleanExpressionDepth1_3",
        "NoRewriteNestedFunctionTestInput",
        "testRemoveInstanceOfOnly",
        "RangeError",
        "transform",
        "getInputName",
        "markName",
        "isNoSideEffects",
        "testPrototypePropertiesStable",
        "precheck",
        "replaceStringWithAliasName",
        "setNoAlias",
        "inlineValue",
        "testInline14",
        "generateExtractedDeclarations",
        "CheckUnreachableCode",
        "getDependencies",
        "testConstantProperties",
        "testSwitch3",
        "overrideDefines",
        "testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope",
        "isContinueTarget",
        "testMutateWithParameters1",
        "getOwnPropertyJSDocInfo",
        "caseVoidType",
        "getScope",
        "testFoldNot",
        "testShadowVariables18",
        "testStableSimple1",
        "testDefineAssignmentInLoop",
        "MouseEvent",
        "testSuperInterface",
        "testNestedFor",
        "setDefineToDoubleLiteral",
        "handleGet",
        "ComposeWarningsGuard",
        "testRemoveVarGet1",
        "testCatchStatement",
        "DeadAssignmentsEliminationTest",
        "testPropertyDefinedInGlobalScope",
        "AnalyzeNameReferences",
        "testNoInlineOutOfBranch",
        "testLocalAlias7",
        "recordHiddenness",
        "MethodCheckTest",
        "testOneFunction",
        "handleObjectLit",
        "isUnscopedQualifiedName",
        "getParametersNode",
        "testConstantRedefined1",
        "testRemoveDo",
        "clearContextForNoInOperator",
        "testContinueToSwitchWithTwoCases",
        "maybeProvidePrefixes",
        "differsFrom",
        "stringToKeyword",
        "testNoInlineOfExternMethods3",
        "testDependentStrictModuleDependencyCheck",
        "testNoRewriteMultipleDefinition1",
        "testValidFunctionExpr",
        "Candidate",
        "calculateReferences",
        "testAssignNoFunction",
        "hasCodeChanged",
        "or",
        "doRun",
        "getOrCreateName",
        "SQLTransaction",
        "testInline10",
        "isPropertyTestFunction",
        "testChainedAssignment",
        "testLocalFunctionOrder",
        "testReplaceSetter3",
        "isNone",
        "registerNativeType",
        "testMethodsFromExternsFileNotExported",
        "newFunctionNode",
        "testInlineExpression10",
        "testInlineIntoTryCatch",
        "MethodCheck",
        "HTMLInputElement",
        "testPassWithOneNew",
        "consumesDanglingElse",
        "setDestination",
        "isGeneratingDebug",
        "getCodeSizeRecord",
        "forNewRhino",
        "getImplementedInterfaceCount",
        "parseParametersType",
        "traverseAtScope",
        "testNoSideEffectAnnotation15",
        "testSamePropertyNameQuotedAndUnquoted",
        "doesFunctionMeetMinimumRequirements",
        "setSourceMap",
        "testFunctionMovement1",
        "testFunctionWithReferenceToArgumentsShouldNotBeOptimize",
        "removeChildren",
        "unregisterListener",
        "findParentOfFuncDescendant",
        "testNoWarnShadowGlobal",
        "testScopes",
        "processSwitchStatement",
        "nameObjectLiteralMethods",
        "testProvideErrorCases",
        "testSideEffectClassification1",
        "Notation",
        "testNestedAssign7",
        "PrototypeObjectType",
        "isControlStructureCodeBlock",
        "testRewriteImplementedMethod",
        "testHaltAtVarRef3",
        "processProvideFromPreviousPass",
        "testComplexInlineVars1",
        "getTypeRegistry",
        "testNamespaceResetInGlobalScope2",
        "formatNodePosition",
        "testGeneratePseudoNames",
        "applySubclassRelationship",
        "ClipboardData",
        "HTMLScriptElement",
        "testSkipNativeObjectMethod",
        "createLeaf",
        "testInlineFunctions8",
        "testHook5",
        "canTestForShallowEqualityWith",
        "getTypeValidator",
        "getNeighborNodesIterator",
        "fixUnitializedVarDeclarations",
        "removeByName",
        "isConstructor",
        "testRedefinitionUsingItself",
        "LinkedDirectedGraphEdge",
        "isSubGroup",
        "testSetQuotedPropertyOfThis",
        "createPass",
        "testIgnoreAssignmentsToIdConstant",
        "getPassConfig",
        "isDirected",
        "ExternFunctionCall",
        "ReductionGatherer",
        "hasOptionalOrVarArgs",
        "testSwitch2",
        "testMissingGoogProvide",
        "Attr",
        "ExpressionDecomposer",
        "testGoldenOutput2",
        "testPrototypeInit",
        "areSafeFlagsToFold",
        "setFn",
        "createNewFunctionLevelAstParallelizer",
        "appendFileMapTo",
        "testInlineSameVariableInStraightLine",
        "testStatementRestriction",
        "testNoRemoveVar1",
        "testGetElem",
        "defineDelegateProxyProperties",
        "testIndividualPasses",
        "EvaluatorException",
        "parseArrayType",
        "testMissingGetCssName",
        "init",
        "badWrite",
        "setPositionInformation",
        "testPartialTraversalOfScope",
        "getParamAndVarCount",
        "testInline2",
        "testReferencedPrototypeProperty",
        "exposeExpression",
        "isConditionalOp",
        "AnonymousFunctionDefinition",
        "testFoldOneChildBlocks",
        "testReturnSlot",
        "ParameterizedType",
        "testPropertyAddedToObjectStable",
        "hasChild",
        "newExternInput",
        "testClassDefiningCallWithStripType5",
        "maybeEliminateAssignmentByLvalueName",
        "testPrototypePropertySetInLocalScope7",
        "visitVar",
        "dump",
        "NodeList",
        "testDeprecatedObjLitKey",
        "setColorize",
        "testUnexpectedException",
        "MustDef",
        "recordStaticNameUse",
        "tryFoldGetElem",
        "collapseDeclarationOfNameAndDescendants",
        "getFunctions",
        "createRegExp",
        "testStringLiteralExpectedError",
        "updateScopeForTypeChange",
        "testAnonymousFunction",
        "testCallPrototypeFunction",
        "testMultiUseInTwoDifferentPath",
        "parseExpectedJs",
        "ambiguateProperties",
        "recordSuppressions",
        "testHook6",
        "checkPropertyVisibility",
        "testRecursiveObjectLiteral",
        "buildCharacterMappings",
        "visitInterfaceGetprop",
        "getAdditionalReplacements",
        "assertEntered",
        "FunctionRewriter",
        "createCfg",
        "InferJSDocInfo",
        "getRValue",
        "markTypeNode",
        "testAllPropertyReference",
        "getInt",
        "EventListener",
        "parseInputs",
        "testAnonymousFunctionCallInlining2",
        "testInlineReferenceInExpression5",
        "testMultipleDeclarationError1",
        "testComma3",
        "isNew",
        "defineDeclaredProperty",
        "RenamePrototypes",
        "testAddMethodsPrototypeTwoWays",
        "incrementGeneration",
        "checkObjectLiteral",
        "setIdGenerators",
        "getParameterType",
        "HTMLAppletElement",
        "testUnmatchedEndMarker1",
        "getTypeOfThis",
        "testFunctionMovement6",
        "testNoInlineMutableArgs4",
        "getChecks",
        "pow5mult",
        "createFor",
        "PropertyGraphNode",
        "testNoInlineIfParametersModified1",
        "testMayHaveSideEffects",
        "testAssignmentToPrototype5",
        "CheckAccessControls",
        "testPropertyDefinedInBranch",
        "hasCompileFunctionsWithDynamicScope",
        "enableTypeCheck",
        "testOrOperator1",
        "testRecursiveFunction",
        "testGlobalObjectDeclaredToPreserveItsPreviousValue1",
        "testAnonymous2",
        "testHook2",
        "isCollapsibleValue",
        "isSimpleFunctionObjectCall",
        "testContainsType",
        "identifyTypeDeclarationCall",
        "helperExposeExpression",
        "hasCatchHandler",
        "createBinary",
        "NodeNameExtractor",
        "HTMLBRElement",
        "testConstructorThatModifiesThis1",
        "function",
        "ConstCheckTest",
        "testIgnorePrivateConstructor",
        "testInference3",
        "testConsumption2",
        "testRemovalMultipleAssignmentInIf4",
        "testFunctionsWithJsDoc4",
        "testNoWarningInDeprecatedStaticMethod",
        "testTypedStubsInExterns",
        "RemoveUnusedVars",
        "declareThrows",
        "testArgumentsArray",
        "setNewName",
        "testInstrument",
        "testLocalAliasOfFunction",
        "getLoopCodeBlock",
        "makeAssignmentExprNode",
        "testNoRemoval",
        "getReferencesThis",
        "simplifyShortCircuitBranch",
        "onEmptyStackTopRead",
        "testClassDefiningCallWithStripType2",
        "getScriptNode",
        "externExports",
        "throwUnexpectedException",
        "addChildAfter",
        "JSModuleGraph",
        "testShadowVariables4",
        "testImplicitCallFromPropertyOfUnion",
        "testPropAccessorPushedDeeper2",
        "testObjectLiteralTraversal",
        "testIllegalArgumentIfNoSideEffectAndOr",
        "getIgnoreDynamicScope",
        "checkPrefix",
        "HTMLOListElement",
        "getOptimizationLevel",
        "testAddPropertyToUncollapsibleObjectInLocalScopeDepth1",
        "testAnalyzeUnusedPrototypeProperties",
        "FoldConstants",
        "seal",
        "ScriptOrFnNode",
        "recordThisType",
        "testTypeAnnotationsImplements",
        "ConcreteTypeSystem",
        "testCombined",
        "testComplexInlineInExpresssions3",
        "createLoggerInstance",
        "getPossibleToBooleanOutcomes",
        "getEncodedSourceStart",
        "testNewDateGoogNowSimplification",
        "testCanInlineReferenceToFunction3",
        "testLocalAlias4",
        "testReadPropertyOfGlobalThis",
        "testGetFunctionName4",
        "createStringTests",
        "testInstanceOf2",
        "testDoNotConvert",
        "testExpressions1",
        "testNamespacedClass4",
        "ExternalNameOnlyDefinition",
        "createEdge",
        "testIgnoreUnknownType",
        "HTMLIsIndexElement",
        "insideGetCssNameCall",
        "isLive",
        "tryMinimizeIf",
        "setUnknown",
        "testReplaceSetter2",
        "recordThrowType",
        "testShortCircuit8",
        "testTwoRequiredTwoOptionalSixthVarArgReferenced",
        "testGlobalVarSetToObjLitConditionally1b",
        "testFoldLiteralConstructors",
        "testAnonymousFunctionCallInlining10",
        "testFooBar",
        "GearsPositionError",
        "recordBlockDescription",
        "testRefChain22",
        "testMaybeAddTempsForCallArguments1",
        "checkForStateChangeHelper",
        "testShadowVariables3",
        "maybeColorize",
        "testInline5",
        "recordInterfaces",
        "testPropGetInsideAnObjLit",
        "testCanInlineReferenceToFunctionInExpression8",
        "testComplexNoVarSub",
        "testUnreferencedBleedingFunction",
        "getSlot",
        "testCorrectRedeclare",
        "testBadRead",
        "MemoizedScopeCreator",
        "setWarningLevel",
        "ScriptEngineBuildVersion",
        "getRegion",
        "getBooleanOutcomes",
        "assignExpr",
        "addError",
        "testRhsAssign6",
        "testSetPropertyReferencedByGeneratedCode",
        "testOneRequired",
        "getBooleanValue",
        "testMixin6",
        "testRewriteSameModule3",
        "UndoConstantRenaming",
        "checkResults",
        "getFileOverview",
        "testSortInputs",
        "hasUnknownSupertype",
        "isConstructorRecorded",
        "isEmptyFunction",
        "get",
        "testRefToUndefinedProperty1",
        "testComplicatedFinally2",
        "getReturnSlot",
        "markText",
        "GenerateExportsTest",
        "FunctionTypeBuilderTest",
        "setSummaryDetailLevel",
        "inlineAliases",
        "getPropertySlot",
        "testPropMutatorNotPushedDeeper",
        "testRewritePrototypeMethods1",
        "JSTypeSystem",
        "reportRuntimeError2",
        "testAliasCreatedForFunctionDepth1_2",
        "doPercentTypedAccounting",
        "checkForTypedef",
        "testRefChain12",
        "testPropAccessorNotPushedDeeper",
        "testMutateValueReturnWithResultAssignment",
        "testNoInlineMutableArgs3",
        "testMakeLocalNamesUnique",
        "isPropertyAssignmentInExpression",
        "testRemoveLabeledStatment4",
        "testLiteralProperty",
        "testTry1",
        "readReader",
        "canRemove",
        "testBug1897706",
        "testNoInlineIfParametersModified9",
        "testReachableTryCatchFinally",
        "nextUniqueNameId",
        "getNode2Id",
        "getAnnotateTypes",
        "testAbbreviatedBitAssignment2",
        "testNoInlineAliases7",
        "testGetNodeTypeReferenceCount",
        "testPropertyAddedToObject",
        "visitOrMaybeActivate",
        "enter",
        "mimimizeCost",
        "getMismatches",
        "testInference2",
        "getPriority",
        "testExitPaths",
        "processRegExpLiteral",
        "splitFunctions",
        "testUnhandled",
        "testRewriteNoVarArgs",
        "testNoAliasAnnotationForFunction",
        "clearAsts",
        "testTwoFunctions",
        "getEndingLineNumber",
        "testStubsInExterns",
        "declare",
        "GraphColoring",
        "testStaticFunction2",
        "testInheritanceDetection7",
        "visitCall",
        "PureFunctionMarker",
        "EcmaError",
        "testLoop1",
        "isBottom",
        "setLastGeneration",
        "testLocalScopeOnly2",
        "UintMap",
        "testOrOperators4",
        "testBadWrite",
        "createPassFactory",
        "getNodeForCodeInsertion",
        "setRequiresActivation",
        "testFunctionMovement2",
        "isInitializingDeclaration",
        "getSuperclassType",
        "parseSuppressTag",
        "getRenamingMap",
        "testFor1",
        "CollapseAnonymousFunctionsTest",
        "testOverrideAfterAlias",
        "GraphReachability",
        "getVariableMap",
        "testMissingModuleDependencySkipNonStrictPromoted",
        "testRewriteInGlobalScope",
        "testAssignmentOp",
        "isNormalized",
        "testDoContinueOptimization",
        "inGlobalScope",
        "createTypeWithSubTypes",
        "testNoInlineAliases1",
        "addInputAndDeps",
        "pushEdgeAnnotations",
        "getResult",
        "testLoggerClassDefinition",
        "FunctionListExtractor",
        "checkDefinitions",
        "SimpleDefinitionFinder",
        "testTemplateType",
        "testNoExport",
        "Traversal",
        "CompilerRunner",
        "testInlineDefinedConstant",
        "testUnaryOperators1",
        "getTypesToSkipForTypeNonUnion",
        "testRemoveVarDeclartion5",
        "build",
        "RestrictByFalseTypeOfResultVisitor",
        "PrettyCodePrinter",
        "TextRange",
        "doesLowerCost",
        "testMaybeAddTempsForCallArguments6",
        "testChainedAssignments6",
        "testMutateNoValueReturnWithoutResultAssignment",
        "testStableRenameNested",
        "match",
        "getTransitiveDepsDeepestFirst",
        "testNoInlineMutableArgs2",
        "testDeadVarDeclarations",
        "SiblingNodeIterable",
        "testAccessOfStaticMethodOnPrivateQualifiedConstructor",
        "addChildrenToBack",
        "testInlineExpressions3",
        "testEnumRAI2",
        "assertContainsAnonFunc",
        "replaceTopLevelExpressionWithRhs",
        "testFoldGetElem",
        "createFunctionType",
        "bitAndExpr",
        "memberExpr",
        "PruningCallback",
        "testFoldOneChildBlocksStringCompare",
        "getScopeRoot",
        "testIllegalArgumentIfNotAndOr",
        "handleSymbolExport",
        "testCostBasedInlining4",
        "GearsResultSet",
        "getType",
        "testAnonymous4",
        "testBug1509085",
        "visitNew",
        "generateCode",
        "RGBColor",
        "testInlineFunctions7",
        "getSourceStringEnd",
        "setCompilerData",
        "testConstantPreIncremented2",
        "ConcreteUniqueType",
        "trimCanidatesNotMeetingMinimumRequirements",
        "matchesUint32Context",
        "HTMLBodyElement",
        "testNoRemoveCall1",
        "buildAnnotationNames",
        "createConstructorType",
        "FindCandidatesReferences",
        "testMergeThreeVarNames",
        "Entity",
        "testInsideHookBranch",
        "testAliasCreatedForObjectDepth2_1",
        "testFunction",
        "CheckAccidentalSemicolonTest",
        "testGetBooleanValue",
        "getTypedPercent",
        "processShortCircuitExpression",
        "testTwoFourArgsTwoUsed",
        "visitGetElem",
        "testObjLitAssignedInTernaryExpression2",
        "forConcreteTypeSystem",
        "testVarMovement1",
        "testDenormalize",
        "testInlineConstructor2",
        "replacePrototypeMemberDeclaration",
        "assertNotLiveBeforeX",
        "HTMLPreElement",
        "testRemovalMultipleAssignment4",
        "CompiledSizeEstimator",
        "computeDefUse",
        "testArrayLit",
        "testAlias",
        "testInsideAndConditional",
        "testGetProp",
        "getParameterNames",
        "isLvalue",
        "isPropertyTypeDeclared",
        "testReferencesThis",
        "analyze",
        "FindReferences",
        "testReplaceEmptyFunction3",
        "flowSensitiveInlineVariables",
        "hasVarArgs",
        "addToString",
        "testConstructorAnnotation",
        "getSetPropertyName",
        "sortJsModules",
        "instrumentFunctions",
        "testConstantInlineWithSideEffects",
        "bothIntrinsics",
        "RemoveTryCatchTest",
        "setShouldRemove",
        "popAnnotations",
        "isEquivalentTo",
        "testSetCreatingReference",
        "testConstructorParameterSlots",
        "testBuiltInTypeDifferentReturnType",
        "recordConstructor",
        "clearAst",
        "isNullType",
        "testUnaryOperators5",
        "GearsHttpRequest",
        "VarCheck",
        "setModule",
        "ExtractPrototypeMemberDeclarations",
        "setNameAnonymousFunctionsOnly",
        "createAssignStatementNode",
        "getCodeChangeHandler",
        "testNecessaryDanglingElse",
        "getNameSupplier",
        "isObjectCallMethod",
        "testMaybeAddTempsForCallArguments8",
        "testClosureParameterTypesWithJSDoc",
        "testComplexInline4",
        "AliasExternalsTest",
        "setXmlAvailable",
        "recordNoTypeCheck",
        "beginCaseBody",
        "d2b",
        "buildPropNames",
        "getFunctionNodeList",
        "testReadPropertySetByExternObjectLiteral",
        "isInlineableDeclaredConstant",
        "visitBinaryOperator",
        "testNoRemoveInherits1",
        "testRemovalMultipleAssignmentInIf2",
        "getActions",
        "dereference",
        "getSuppressions",
        "testNoInlineGetProp",
        "hasEqualCallType",
        "checkSynthesizedExtern",
        "processLabeledStatement",
        "forName",
        "setCssNames",
        "getTypesUnderInequality",
        "handleBreak",
        "isNullable",
        "getRhsSubexpressions",
        "InlineCostEstimator",
        "detachFromParent",
        "recordFunctionInformation",
        "testShortCircuitingAnd",
        "GatherSideEffectSubexpressionsCallback",
        "JSTypeExpression",
        "testRemoveOneOptionalMultiplePossibleDefinition",
        "testSimpleProvides",
        "DOMImplementationList",
        "addIdentifier",
        "testMethodBeforeFunction",
        "computeMidPoint",
        "tryMergeBlock",
        "testPrototypeMethodReferencingThis",
        "testExportProperty",
        "testInlineInFunction3",
        "testNotEnoughPrototypeToExtract",
        "testDoNotInlineAssignmentOp",
        "markFunctionEnd",
        "testInlineFunctions26",
        "equals",
        "removeUnreferencedFunctionArgs",
        "undefReadError",
        "testStableOverlap",
        "createElementGet",
        "testLoggerVarDeclaration",
        "getShouldTraversed",
        "gatherLocalNames",
        "testHook1",
        "testCallUndefinedMethodOnObjLitDepth1",
        "isSimpleOperatorType",
        "testBasicDefine",
        "IncompleteDefinition",
        "testNoMoveSideEffectProperty",
        "testAssignmentToPrototype",
        "getInitialValue",
        "forType",
        "getVisited",
        "testExtractingTwoClassPrototypeInDifferentBlocks",
        "moveMethods",
        "children",
        "testLocalScope2",
        "GearsDatabase",
        "flattenNameRefAtDepth",
        "rewriteFunctionExpressions",
        "recordErrorOrigin",
        "checkDefinitionsInJs",
        "testNoInlineIfParametersModified2",
        "eliminateParamsAfter",
        "convertToDottedProperties",
        "getSafeFnNode",
        "isAssignTo",
        "testLotsOfClasses",
        "DefinitionGatheringCallback",
        "testTwiceDefinedGlobalNameDepth1_2",
        "testVarInControlStructure",
        "CSSRuleList",
        "InlineVariables",
        "testCall",
        "testSubtypesWithSameField",
        "testAliasCreatedForEnumDepth2_3",
        "CSSPrimitiveValue",
        "computeFollowNode",
        "enterScope",
        "testThrownExpression",
        "parseTopLevelTypeExpression",
        "testUnary",
        "isValidDeclaration",
        "testInlineFunctionWithArgsMismatch4",
        "tryFoldWhile",
        "testDoNotCrossReferencingFunction",
        "mergeLineCharNo",
        "isPropertyInExterns",
        "TypeError",
        "setQuotedString",
        "formatConclusion",
        "hasEncounteredAllWarnings",
        "ReferencedAfterSideEffect",
        "testTryCatchFinally",
        "addUsedModule",
        "testVarNotImmediatelyBelowScriptOrBlock1",
        "addCandidate",
        "testInlineReferenceInExpression15",
        "testOneVar",
        "testInstanceOf3",
        "VariableShadowDeclarationCheck",
        "inlineVariable",
        "testInline7",
        "testCanInlineReferenceToFunction23",
        "isAssociative",
        "ClassDefiningFunctionNode",
        "TypeFilter",
        "inliningLowersCost",
        "parseAndRecordTypeNameNode",
        "testHookOperators4",
        "isVarArgsFunction",
        "statementHelper",
        "testComplexInlineNoResultNoParamCall3",
        "catch",
        "testInlineFunctions11",
        "isOn",
        "testClosureInherits",
        "isPopulated",
        "addParameter",
        "testNoRemoveFunctionDeclaration1",
        "getGlobalObject",
        "createErrorName",
        "traverseArrayLiteral",
        "testSortJsModules",
        "HTMLTableSectionElement",
        "testResetObjectPropertyInLocalScope",
        "canReplaceWithGetProp",
        "testStaticFunction3",
        "testRemoveRecursiveFunction2",
        "canInlineDirectly",
        "testCallWithArgs",
        "isWordChar",
        "setSuppressions",
        "autoboxesTo",
        "testCanInlineReferenceToFunctionInExpression14",
        "exposedToCallOrApply",
        "testModules",
        "OptimizeParameters",
        "testClassMovement4",
        "getFunctionBody",
        "testManyArguments",
        "Arguments",
        "setTaintsThis",
        "HTMLIFrameElement",
        "testNoInlineExportedName",
        "addPossibleSignature",
        "testNamespacesEnumAlias",
        "getOwnSlot",
        "createJSTypeExpression",
        "testOr",
        "HTMLOptionElement",
        "testMaybeAddTempsForCallArguments13",
        "initTypes",
        "testInvalidNumArgumentsError",
        "getColumnNumber",
        "addDummyAssignment",
        "testAliasCreatedForClassDepth2_2",
        "getRootNode",
        "processAssignment",
        "SubclassRelationship",
        "IRFactory",
        "checkTreeEqualsImpl",
        "pushNodeAnnotations",
        "isImplicitPrototype",
        "testStableWithTrickyExternsChanges",
        "disconnect",
        "testChainedVarAssignments4",
        "SanityCheck",
        "canAccessDeprecatedTypes",
        "LinkStyle",
        "expectBitwiseable",
        "processVariableDeclaration",
        "getMappingFor",
        "createExprStatement",
        "HTMLDivElement",
        "hasScope",
        "setAliased",
        "testRemoveLocalScopedInstanceOfOnly",
        "setLocale",
        "maybeEndStatement",
        "recordBaseType",
        "recordTypedef",
        "testNoSideEffectAnnotation6",
        "recordVisibility",
        "parsePrint",
        "checkCost",
        "buildParameterList",
        "testNoAliasAnnotationForSingleVar",
        "processName",
        "parseFunctionBody",
        "setImplementedInterfaces",
        "getSourceLine",
        "testNoInlineInMergedPath",
        "getTypesToSkipForType",
        "tryFoldBitAndOr",
        "checkRanges",
        "testPrivateAccessForProperties3",
        "testSetterInForStruct5",
        "isNamedType",
        "testRegularExpressions",
        "testDoNotCrossIncrement",
        "testCanInlineReferenceToFunction2",
        "testShadowVariables1",
        "testInlineFunctions18",
        "testConstructorReferencingThis",
        "XSLTProcessor",
        "testRecursiveInternal2",
        "testAliasing",
        "testPrivateAccessForProperties1",
        "testObjectRedefined1",
        "rehashTable",
        "getEnumType",
        "testComplexSampleNoInline",
        "GenerateNodeContext",
        "testRefToDescendantOfUndefinedProperty1",
        "moveCode",
        "hasReferences",
        "getLineSource",
        "createCompiler",
        "caseTopType",
        "testTopLevelVariables",
        "testNonMarkingUse",
        "Selection",
        "createDotQuery",
        "parseTypeName",
        "testInlineFunctionWithArgsMismatch3",
        "setJSDocInfo",
        "testPrefixedPropertyName",
        "NameList",
        "isConstructorOrEnumDeclaration",
        "hasParamOrVar",
        "DefineInfo",
        "setNoShadow",
        "NameAnonymousFunctionsMappedTest",
        "RecordTypeBuilder",
        "testPreconditionCheck",
        "testCodeMotionDoesntBreakFunctionHoisting",
        "applyFullCompilationOptions",
        "createArrayLiteral",
        "isActive",
        "CallbackWrapper",
        "recordParameterDescription",
        "isXMLAttribute",
        "XPathNamespace",
        "testLiveRangeChangeWithinCfgNode",
        "testTypeAnnotationsNamespace",
        "testNamingBasedOnOrderOfOccurrence",
        "testOverriding3",
        "testCatchBlock",
        "makeCompilerInput",
        "testStubProperty",
        "testAliasCreatedForObjectDepth2_2",
        "testMaybeAddTempsForCallArguments23",
        "testForLoopOrder",
        "testLateRequire",
        "testStaticFunction1",
        "createAssignmentActions",
        "testDefines",
        "testNoExceptionsWithBadConstructors2",
        "checkTypes",
        "testInlineBlockMutableArgs4",
        "testFunctionLiteral",
        "testInlineExpression7",
        "appendInferredPaths",
        "newId",
        "testMixin2",
        "getParameterSlots",
        "createAssignment",
        "testGlobalAlias",
        "containsUnicodeEscape",
        "encodeStringAsIdentifier",
        "testHaltAtSideEffects",
        "visitNewNode",
        "UnknownDefinition",
        "forChildScope",
        "setIsNewCall",
        "assertInvalidLabelContinue",
        "testHaltAtSideEffects4",
        "FunctionNamesTest",
        "testNestedExprExploitation",
        "testLineLength",
        "storeUint32Result",
        "testMergeBlock3",
        "testStaticLoggerPropertyDefinition",
        "newTraversal",
        "testSame",
        "GearsFileSubmitter",
        "createInitialScope",
        "reattach",
        "getCssRenamingMap",
        "createAnonymousObjectType",
        "getPrototype",
        "testRemoveInControlStructure2",
        "isSafeReplacement",
        "isNumberValueType",
        "newName",
        "getImplicitPrototype",
        "isQuotedString",
        "condExpr",
        "testCanInlineReferenceToFunction18",
        "setInterface",
        "HTMLMetaElement",
        "testNoSplit",
        "getRestrictedWithoutUndefined",
        "testWithInversion",
        "testAnonymous1",
        "testRenameLocalsClashingWithGlobals",
        "ReplaceIdGenerators",
        "findAll",
        "testRemoveLabeledStatment",
        "processAstRoot",
        "sourceToString",
        "testTryCatch",
        "putThreadLocal",
        "addList",
        "getBaseType",
        "testHook",
        "testPassWithNestedNewNodes",
        "testInlineReferenceInExpression2",
        "testThisJSDoc2",
        "testAssignInCondition",
        "tryReduceReturn",
        "testPrint",
        "recordReturnDescription",
        "testExposeExpression1",
        "testExternMethodsFromExternsFile",
        "isReturnExpressBlock",
        "newExpr",
        "testInitJsParseFail",
        "testRemoveGlobal",
        "testMoveExpression8",
        "testGoldenOutput1",
        "ErrorPass",
        "recordUnknownUse",
        "testSplitNamedFuntion",
        "createInitialEstimateLattice",
        "testMutateWithParameters3",
        "hasFeature",
        "inlineAliasIfPossible",
        "setNormalized",
        "testInlineStringMultipleTimesWhenAliasingAllStrings",
        "getCodeNoCache",
        "stripTrailingZeroes",
        "initReverseMap",
        "JsDocInfoParser",
        "testRemoveNumber",
        "testCorrectIfReturns",
        "setIsPure",
        "testIsControlStructureCodeBlock",
        "isFunctionDeclaration",
        "testNoInlineIntoNestedNamedFunctions",
        "getDepth",
        "getConditionExpression",
        "pop",
        "incCount",
        "getParamOrVarName",
        "canChangeSignature",
        "warnAboutNamespaceAliasing",
        "testAddPropertyToFunctionInLocalScopeDepth2",
        "lineNumber",
        "replaceWithNull",
        "testFunctionWithinTry",
        "testUnknownType2",
        "testAnonymousFunctionInlining2",
        "DOMApplicationCache",
        "testFunctionArityWithVarArgs",
        "testCanInlineReferenceToFunction14",
        "Assignment",
        "containsType",
        "processGeneric",
        "testLocalAliasOfOtherName",
        "testRemoveVarDeclartion7",
        "isCallOrNew",
        "handleDo",
        "parseFieldName",
        "testRefChain15",
        "testCanInlineReferenceToFunction26",
        "processReturnStatement",
        "declareNativeValueType",
        "processReference",
        "setReferencesThis",
        "aliasExternals",
        "getFunctionalInformationMap",
        "isGlobal",
        "testWithNoDefines",
        "AnnotationState",
        "updateObjLitOrFunctionDeclaration",
        "setOptionsForCompilationLevel",
        "testRemoveVarArg",
        "testIfBranch",
        "DepsFinder",
        "addSubType",
        "testRewritePrototypeNoObjectLiterals",
        "checkTreeEqualsSilent",
        "testLongStableAlias",
        "getVarCount",
        "testVarNotImmediatelyBelowScriptOrBlock2",
        "testNamespaceInjection",
        "appendBlockStart",
        "testFooGetElemBar",
        "getSubTypes",
        "resolveTypesInScope",
        "initializeBuiltInTypes",
        "getSourceFileByName",
        "getMethodBlock",
        "getId",
        "getBlockDescription",
        "testInline13",
        "functionCallHasSideEffects",
        "testOneType",
        "testRemoveNamedFunction",
        "RenamePropertiesTest",
        "testArgumentsWithSideEffectsNeverInlined2",
        "testCanInlineReferenceToFunction38",
        "createExprStatementNoReturn",
        "findPropertyType",
        "testBoth",
        "testCrossFunctionsAsLeftLeaves",
        "isUnion",
        "testRhsReference4",
        "assertEquivalent",
        "testNoWarningForSimpleVarModuleDep1",
        "getEdges",
        "getMessage4",
        "testVarMotionWithCode",
        "testRecursiveExternal1",
        "testNonGlobalScopeExport",
        "testChainedAssignments4",
        "processIfStatement",
        "testChainedAssignments7",
        "testNoRemoveCall6",
        "CollectDefines",
        "testOneArgWithUnknownStringLiterals",
        "andExpr",
        "getEntry",
        "parseJSDocInfo",
        "testNullableDeprecatedProperty",
        "testNoRemoveAssign4",
        "assertNotMatch",
        "testInCorrectSwitchReturn",
        "annotate",
        "findNameType",
        "replaceReturnWithBreak",
        "SQLResultSet",
        "inferReturnType",
        "documentFileOverview",
        "testAnonymousFunctionCallInlining9",
        "testCallOnUndefinedProperty",
        "hasNoSideEffectsAnnotation",
        "initHash",
        "testFunctionAritySimple",
        "ReplaceCssNames",
        "testInherits1",
        "testDoNotCrossDelete",
        "testInlineFunctionWithArgsMismatch1",
        "testNoProtectedAccessForProperties2",
        "testNestedAssign4",
        "AstChangeProxy",
        "testAbbreviatedShiftAssignment1",
        "testFooDotBar",
        "isForwardDeclaredType",
        "createNullableType",
        "setPassConfig",
        "assertInvalidBreak",
        "mutatesGlobalState",
        "testNoWarningOnDeprecatedPrototype",
        "testAssignment",
        "hasBreakOrContinue",
        "HTMLTableCellElement",
        "testConstructorAnnotationInExterns5",
        "MatchNodeType",
        "tokenToName",
        "getGetPropertyName",
        "testInlineName",
        "testInlineConditionallyDefinedConstant2",
        "testNoPrivateAccessForProperties3",
        "tryFoldAndOr",
        "setErrorReporter",
        "testMoveExpression3",
        "testSwitch4",
        "extractConditional",
        "removeVarDeclarationsByNameOrRvalue",
        "toUnion",
        "testSecondCallReturnNotThis",
        "testUndefinedPrototypeMethodRefGivesNoWarning",
        "testContinueToLabelSwitch",
        "testAnonymousFunctionCallInlining12",
        "testInnerFunctionsWithNamedArgumentInInnerAndOutterFunction",
        "InstanceOfCheckNode",
        "exitSwitch",
        "getFirstNonEmptyChild",
        "getMinArguments",
        "ExternExportsPass",
        "declareNativeFunctionType",
        "objectPropertyStringPostprocess",
        "testAndOperator2",
        "testForIn",
        "assertNoReturnEdge",
        "PassFactory",
        "testMethods",
        "testInlineAliases2",
        "maybeRemove",
        "Rect",
        "expectCanAssignToPropertyOf",
        "getIndexType",
        "testMutateWithMultipleReturns",
        "testHookOperator3",
        "findUniqueRefinedSlot",
        "getDefinitionSites",
        "isGlobalFunctionDeclaration",
        "testRhsReference5",
        "testCorrectEarlyReference",
        "confirm",
        "testHaltAtVarRef2",
        "HTMLBaseFontElement",
        "HTMLHeadElement",
        "testFunctionPassedAsParam",
        "getCssNames",
        "continueProcessing",
        "popEdgeAnnotations",
        "testBuiltInTypeDifferentNumParams",
        "testGetNameReferenceCount",
        "testInlineInFunction",
        "hasTypedefType",
        "testFoldInstanceOf",
        "CanvasRenderingContext2D",
        "processTask",
        "testImplicitCallFromPropertyOfAllType",
        "isUnknown",
        "traverseRoots",
        "testOnlyInversion",
        "testExportNonStaticSymbol2",
        "getCallsInFunctionBody",
        "GearsGeolocation",
        "createJsModules",
        "RemoveUnusedNamesTest",
        "testTwoFiles",
        "handleIf",
        "testGetElemDereference",
        "testAssignmentOps",
        "isForIn",
        "testInlineExpressions6",
        "RhinoErrorReporter",
        "SimpleRegion",
        "testAssign",
        "GearsAddress",
        "testExportVars",
        "testWarningForDeprecatedSuperClass",
        "testReplaceSetter4",
        "testLoggerDefinedInConstructor",
        "FunctionNode",
        "allowSourcelessWarnings",
        "testNoCreateVarsForLabels",
        "isPrototypeNameReference",
        "initializeRegistry",
        "openDatabase",
        "Annotation",
        "testAnonymousFunctionInlining3",
        "enterSwitch",
        "testObjectLiteral",
        "validateName",
        "setInstanceType",
        "testGlobalWriteToNonAncestor",
        "getNamedContainingFunction",
        "testNoRewriteExternalMethods2",
        "testObjLitAssignmentDepth2",
        "undeclare",
        "Generated",
        "testCanInlineReferenceToFunction43",
        "setCheckForLabel",
        "InlineRenamer",
        "testPropertiesOnInterface",
        "GlobalNamespace",
        "testUnion",
        "addModuleAndDeps",
        "SuspiciousPropertiesCheckTest",
        "popScope",
        "unionWith",
        "testRewriteNoNestedFunction",
        "getSuperClassConstructor",
        "generateExtractedDeclaration",
        "testAccessOfStaticMethodOnPrivateConstructor",
        "handleFunction",
        "isVarDeclaration",
        "testReturn1",
        "expectCanAssignTo",
        "ParserRunner",
        "testMismatchInvalidation",
        "isLowerPrecedenceInExpression",
        "getAbstractMethodName",
        "testInlineEmptyFunction3",
        "isEligibleDefinition",
        "trimCanidatesUsingOnCost",
        "splitFiles",
        "testNoWarningForNumbers",
        "testEnumOfObjects1",
        "createFunctionInfo",
        "testAnonymousFunctionCallInlining7",
        "testCallFunction",
        "Object",
        "createString",
        "HTMLTableColElement",
        "testSimpleVarAssignment",
        "AbstractMessageFormatter",
        "determineLineMappings",
        "constructorCallHasSideEffects",
        "documentBlock",
        "testInsideIfConditional",
        "testSwitches",
        "testDeterministic",
        "checkEnumElementCycle",
        "markExported",
        "testAnnotationInExterns5",
        "makeOneTimePass",
        "processElementGet",
        "testComplex1",
        "referenceMore",
        "testCanInlineReferenceToFunctionInExpression21a",
        "stuffBits",
        "testInc",
        "testOverlappingOriginalAndGeneratedNamesStable",
        "isEnumType",
        "testUnintendedUseOfInheritsInLocalScope1",
        "isJSFormatChar",
        "DevirtualizePrototypeMethodsTest",
        "checkAllPathsWithoutBackEdges",
        "testNoProtectedAccessForProperties1",
        "isExternallyReferenceable",
        "getMessage2",
        "createPassConfigInternal",
        "testChainedAssignments3",
        "HTMLAnchorElement",
        "updateObjLitOrFunctionDeclarationAtVarNode",
        "hasBlockInliningReferences",
        "setDefine",
        "getBasePassConfig",
        "createRecordTypeFromNodes",
        "testDuplicateNames",
        "ungetCharIgnoreLineEnd",
        "generateReport",
        "reportDestructuringAssign",
        "getErrors",
        "testLocalCall",
        "testDeprecatedFunction",
        "addAliasDeclarationNodes",
        "AbstractPostOrderCallback",
        "defineElement",
        "processPropertyGet",
        "testFoldRegExpConstructorStringCompare",
        "getLocaleFromStandardLocaleString",
        "testLocalWriteToNonAncestor",
        "testRemoveTryFinally",
        "testAbbreviatedBitAssignment1",
        "recordType",
        "testComplexAssignmentAfterInitialAssignment",
        "handleFor",
        "DiagnosticGroupWarningsGuard",
        "StartMarker",
        "testGlobalObjectNameInBooleanExpressionDepth1_2",
        "replaceWithRhs",
        "hasNode",
        "test",
        "isTypeInferred",
        "testAdd3",
        "eliminateCallParamAt",
        "extractBlockComment",
        "testCorrectSwitchReturn",
        "testInline12",
        "testMaybeAddTempsForCallArguments22",
        "testNoInlineAliases2",
        "testObjectPropertySetToObjLitConditionally",
        "areEquivalent",
        "MessagePort",
        "testExcerptOneLine",
        "ChainableReverseAbstractInterpreter",
        "Comparator<Assignment>",
        "testConstantPostDecremented1",
        "testInherits4",
        "testIncrement",
        "size",
        "unboxesTo",
        "testConstructorAnnotationInExterns8",
        "testMaybeAddTempsForCallArguments3",
        "hasFileOverview",
        "testSeparateMethods",
        "testCanInlineReferenceToFunction39",
        "removeChild",
        "testShortCircuit3",
        "testRedeclaration2",
        "valueConsumedByParent",
        "createCatch",
        "eqExpr",
        "testLabelledForInLoopOrder",
        "testCostBasedInlining3",
        "GearsErrorObject",
        "recordSplitPoint",
        "addRelatedInterfaces",
        "testStaticFunction4",
        "visitNameNode",
        "getCallThisObject",
        "createForIn",
        "addDeclaration",
        "createMemberRefGet",
        "assertEscaped",
        "getClassesDefinedByCall",
        "testCostBasedInlining12",
        "testGetScopeRoot",
        "getImpl",
        "getMessage3",
        "onRedeclaration",
        "processUnaryExpression",
        "flattenReferencesTo",
        "NamedType",
        "getLocale",
        "reportBadModuleReference",
        "inferFromOverriddenFunction",
        "callMeetsBlockInliningRequirements",
        "testUsedNameInScope",
        "removeListener",
        "testNoRemoveThrow3",
        "testScopedType",
        "testPrototypePropertySetInLocalScope1",
        "testMixedModeInliningCosting1",
        "testDeleteOperator2",
        "testAssignmentToPrototype3",
        "printSourceString",
        "setLoggingLevel",
        "startSourceMapping",
        "getDeclaredGetPropType",
        "updateTypeOfThisOnClosure",
        "isEmptyMethod",
        "testCast",
        "testComplexFunctionWithFunctionDefinition",
        "testNoSideEffectAnnotation5",
        "isJSIdentifier",
        "ScriptEngineMinorVersion",
        "testCostBasedInlining7",
        "checkLanguageVersion",
        "InstanceObjectType",
        "assertPrettyPrint",
        "extractClassNameIfRequire",
        "testBadCast",
        "testNamespacedConstructorAlias",
        "ScriptRuntime",
        "testKnownConditions",
        "testInheritance2",
        "processWithStatement",
        "setReturnType",
        "getRootModule",
        "CheckGlobalNamesTest",
        "testCostBasedInlining6",
        "testAnonymousFunctionInlining4",
        "Touch",
        "hi0bits",
        "testCollapsePrototypeName",
        "parseAndRecordTypeNode",
        "fromNatives",
        "testRefChain4",
        "testFunctionCallDepth1",
        "getMessage0",
        "testAnonymous3",
        "getterSetterProperty",
        "testInheritance1",
        "processLabel",
        "testReadUndefinedPropertyDepth2",
        "getDouble",
        "testGetElem3",
        "canMoveValue",
        "NodeUtil",
        "testRefChain14",
        "initForUnitTest",
        "assertOk",
        "testPropertiesOfAnUndefinedVar",
        "Builder",
        "addVar",
        "testMixedModeInliningCosting2",
        "expectUndeclaredVariable",
        "testNoRewriteMultipleDefinition2",
        "createType",
        "testCanInlineReferenceToFunctionInExpression5",
        "createGlobalScopeHelper",
        "testAliasCreatedForEnumDepth1_3",
        "StringType",
        "GlobalFunction",
        "getVariableName",
        "testDeterministicNaming",
        "testTwoMethods2",
        "calcSize",
        "shouldTraverse",
        "testRestrictToCastWithNonInstantiatedTypes",
        "testComplexNestedAssigns2",
        "testCanInlineReferenceToFunctionInExpression6",
        "diffSlots",
        "TouchList",
        "findCalledFunctions",
        "getNewNameToOriginalNameMap",
        "JS_dtostr",
        "testTypeAnnotationsMemberSubclass",
        "reportRuntimeError0",
        "testMovePrototypeRecursiveMethod",
        "MatchNameNode",
        "DevirtualizePrototypeMethods",
        "testTwiceDefinedGlobalNameDepth1_1",
        "getNameForId",
        "testNoInlineArrayLits",
        "endStatement",
        "testUnchainedCalls",
        "CheckGlobalThis",
        "testLocalAlias3",
        "testFunctionType",
        "testLocalVar",
        "caseObjectType",
        "getVisibility",
        "testForwardVarReferenceInLocalScope2",
        "maybeSanityCheck",
        "testRenameInFunction",
        "createTypeCheck",
        "testPruningCallbackShouldTraverse2",
        "processForTesting",
        "mustMatchToken",
        "testContinueToSwitch",
        "testConstRemovingRename1",
        "getFunctionType",
        "inferTemplateTypeName",
        "recordDepScope",
        "testInlineFunctions23",
        "endsWith",
        "testInheritanceDetection9",
        "putBooleanProp",
        "getCallSlot",
        "tryEliminateConstantArgs",
        "testPrefixedClassName",
        "inlineReturnValue",
        "testClassMovement5",
        "generateNames",
        "getNameForest",
        "testShortCircuit7",
        "HTMLElement",
        "isImmutableValue",
        "testFourFiles",
        "testAutoboxedPrivateProperty",
        "getAllNameInfo",
        "isExprCall",
        "testHookOperator2",
        "getPosition",
        "testStringIndexOf",
        "testCorrectShadowing",
        "testInherits7",
        "FixedPointGraphTraversal",
        "testShouldWarnWhenInstantiatingObjectsDefinedInGlobalScope",
        "testPrototypePropertySetToAnObjectLiteral",
        "isLabelName",
        "NullErrorReporter",
        "testIsLabelName",
        "testAnd",
        "testInlineFunctions17",
        "testCanInlineReferenceToFunctionInExpression13",
        "getCurrentOffset",
        "RegExp",
        "createMessageFormatter",
        "resetForTypeCheck",
        "testBadCrossModuleRequire",
        "testOptionalArgumentsToConstructorCanBeOptimized",
        "testInferredPrototypeProperty",
        "maybeInsertAliasDeclarationIntoParseTree",
        "hashCode",
        "setTemplateTypeName",
        "testComplexInlineVars12",
        "testGetVarsDeclaredInBranch",
        "testShadowVariables8",
        "createWith",
        "testTypeMismatch",
        "replaceStringsWithAliases",
        "computeMayUse",
        "testObjectOfObjects1",
        "getTempConstantValueName",
        "getEscapedLocals",
        "caseNoObjectType",
        "computeLiveness",
        "HTMLLabelElement",
        "testRemoveNamespaceGet2",
        "UnreachableCodeElimination",
        "UniqueTag",
        "traverseBranch",
        "Scope",
        "testComplexInlineInExpresssions2",
        "getTokenId",
        "testRefChain16",
        "name",
        "TightenTypes",
        "testRemoveRecursiveFunction4",
        "recordSet",
        "DeadAssignmentsElimination",
        "recordEnumParameterType",
        "testExportMultiple3",
        "testRewriteCallReference",
        "setCollapsePropertiesOnExternTypes",
        "traverseWithinShortCircuitingBinOp",
        "isName",
        "getState",
        "actsOnStripType",
        "ensurePropertyDeclared",
        "testCombinedPasses",
        "NameAnonymousFunctionsTest",
        "MarkNoSideEffectCalls",
        "testRhsAssign8",
        "testInherits3",
        "propertyMustBeInitializedByFullName",
        "testMoveExpression5",
        "testBug1840071",
        "testFoldBlocksWithManyChildren",
        "newQualifiedNameNode",
        "isGenerateDebugInfo",
        "inferQualifiedSlot",
        "identifierEscape",
        "testConstantPostDecremented2",
        "Boolean",
        "testInfiniteLoop1",
        "testUnionTypeTwoFields",
        "testTypeAnnotationsAssign",
        "isFunction",
        "isLocalName",
        "testDefineWithInvalidDependentValue",
        "getErrorManager",
        "testLiteralMovement1",
        "ProxyObjectType",
        "testRValueReference1",
        "testInnerFunctions",
        "getExisting",
        "testCollapsePropertyOnExternType",
        "addChildBefore",
        "testInlineEmptyFunction5",
        "Color",
        "testRewriteDeclIsExpressionStatement",
        "testCanInlineReferenceToFunction12",
        "extractInstance",
        "tableLookupStep",
        "testFunctionsNamesAndIds",
        "assertAllOneTimePasses",
        "getTraversal",
        "testDeclaredVar",
        "moveAllFollowing",
        "GearsMessageObject",
        "testMayEffectMutableState",
        "expectString",
        "determineGetTypeForHookOrBooleanExpr",
        "recordPrototypePropDefinition",
        "testShadowVariables6",
        "Result",
        "testNoSideEffectAnnotation10",
        "reportRuntimeError3",
        "resolveInlineConflicts",
        "flattenNameRef",
        "appendListItem",
        "testFunctionPropertyResetInLocalScope",
        "testRemoveUnreachableCode",
        "testRemoveLiteral",
        "termSupportsColor",
        "ensurePropertyDeclaredHelper",
        "nodeTypeMayHaveSideEffects",
        "testExcerptLineFromInexistantSource",
        "testReassignAfterRefInConditional",
        "prioritizeFromEntryNode",
        "testChainedVarAssignments1",
        "testInvalidAnnotation3",
        "testRemoveRecursiveFunction6",
        "History",
        "SimpleSubGraph",
        "numberToString",
        "testMoveExpression2",
        "testEnum",
        "testConstructorAnnotationInExterns6",
        "getExitLatticeElement",
        "getAliasName",
        "testCanInlineReferenceToFunctionInExpression14a",
        "getSideEffectsHookNode",
        "getFirst",
        "provablyExecutesBefore",
        "testNestedAssigns",
        "getElementsType",
        "testGlobalObjectDeclaredToPreserveItsPreviousValue2",
        "testInheritanceDetection2",
        "expectArgumentMatchesParameter",
        "getExportSymbolFunction",
        "testDoNotChangeLocalScopeReferencedLocalScopedInstanceOf",
        "testConsumption1",
        "ensureCacheInitialized",
        "testSimpleFor",
        "getInstanceType",
        "isPropertyTest",
        "getOutcomeFlowScope",
        "setWrapperPrefix",
        "hasProperty",
        "testIf2",
        "setCodingConvention",
        "setJSType",
        "AnonymousFunctionNamer",
        "branchedFlowThrough",
        "testFinallyStatements",
        "getAssignments",
        "testNoRewritePrototypeObjectLiterals2",
        "traverseHook",
        "testPassWithTwoNewNodes",
        "setTempNamePrefix",
        "tryFoldArithmetic",
        "reportRuntimeError",
        "scanVars",
        "GetAliasableNames",
        "testContrivedExampleWhereConsistentRenamingIsWorse",
        "testFoldBitwiseOp",
        "testLiteralMovement3",
        "processForLoop",
        "aliasGlobals",
        "testSetProp",
        "testOneArgWithCompositeClassNames",
        "DOMConfiguration",
        "testExportedMethodsByNamingConventionAlwaysExported",
        "testNoInlineAliases8",
        "initInputsByNameMap",
        "testShadowVariables17",
        "testPropertiesReferencedByGeneratedCode",
        "getInstances",
        "testNoOptimizationWhenGetProp",
        "getReferences",
        "testIrrelevant",
        "DiagnosticGroups",
        "testInlineVariablesConstants",
        "decompile",
        "testGetFunctionName1",
        "testAnnotationInExterns4",
        "getAstDotGraph",
        "toDot",
        "getString",
        "testMultipleVar",
        "pushScope",
        "testSeveral",
        "GearsPosition",
        "siblings",
        "registerMismatch",
        "fromInputStream",
        "registerIfMismatch",
        "testBug1059649",
        "getFunctionJsDocInfo",
        "testStableSimple2",
        "getInstanceFromPrototype",
        "testAnonymous9",
        "getArgumentAtIndex",
        "testRemovalMultipleAssignment2",
        "run",
        "reportRefToUndefinedName",
        "allPathsReturn",
        "testSetStaticAndPrototypePropertiesOnFunction",
        "MutationEvent",
        "getNumRepetitions",
        "testExposeExpression8",
        "testNoInlineIfParametersModified7",
        "testCountMismatch",
        "testRemoveFunction",
        "testPrototypeFieldDefinitionWithoutAssignment",
        "DOMParser",
        "processInternal",
        "maybeDecomposeExpression",
        "testAnonymousFunctionCallInlining11",
        "isExternallyDefined",
        "processConstructorCall",
        "testCanInlineReferenceToFunction6",
        "buildAndRegister",
        "isGetProp",
        "testUnionType",
        "assertReturnEdge",
        "testExpressions2",
        "canCollapse",
        "testBug1438784",
        "testCanInlineReferenceToFunctionInExpression7a",
        "createPostOrderAlphabet",
        "testChainedVarAssignments5",
        "maybeRemoveReferenceToRemovedVariable",
        "inferSlotType",
        "testOrOperator3",
        "isValidReference",
        "assertNotClassDefining",
        "sanityCheckCodeGeneration",
        "HTMLTitleElement",
        "testFunctionsWithJsDoc2",
        "decodeURIComponent",
        "testGoodCrossModuleRequire2",
        "testLocalScopeOnly1",
        "collectPropertyNames",
        "minOccurrencesRequiredToAlias",
        "testCostBasedInliningComplex4",
        "identifyEnumName",
        "shouldGenerateMapPerModule",
        "testAssignmentToThisPrototype",
        "testWarningInStaticMethod",
        "nameLink",
        "runInParallel",
        "testMethod2",
        "testNamespaceDefinedInLocalScope",
        "countCallCandidates",
        "extractForInitializer",
        "testParameters",
        "testConstructorAnnotationInExterns3",
        "testFunctionMismatch2",
        "getImplicitActionsFromCall",
        "countOf",
        "testRemoveUselessNameStatements",
        "createCondExpr",
        "testFunctionGivenTwoNames",
        "testMisusedConstructorTag",
        "nodesAreEqual",
        "processBreakStatement",
        "testRValueReference3",
        "checkVar",
        "testRefToDefinedProperties2",
        "testRemoveUselessLiteralValueStatements",
        "computeRelatedTypes",
        "ConcreteInstanceType",
        "testConstructorAnnotationInExterns7",
        "getPrototypeClassName",
        "checkActivationName",
        "testIsSimpleFunction2",
        "getNodeB",
        "getRenamedTypesForTesting",
        "opToStrNoFail",
        "HTMLQuoteElement",
        "getDefaultErrorReporter",
        "NameAnonymousFunctionsMapped",
        "testAliasableAndUnaliasableGlobals",
        "testIllegalArgumentIfNoSideEffectHook",
        "assertTypeEquals",
        "extract",
        "traverseNodes",
        "testMixedModeInlining2",
        "maybeCreateDirsForPath",
        "testMixin3",
        "testRemovalMultipleAssignmentInIf3",
        "nameUsesArgumentsProperty",
        "unseal",
        "isFinite",
        "testNotMissingGetCssName",
        "testFoldArithmetic",
        "generateNextName",
        "registerListener",
        "testGlobalFunctionsInGraph7",
        "getParameterName",
        "addConst",
        "createOptions",
        "optimizeFunctionDefinition",
        "PureFunctionIdentifier",
        "testBug1704733",
        "recordExport",
        "testNoInlineGetpropIntoCall",
        "testMaybeAddTempsForCallArguments27",
        "MimeTypeArray",
        "testNestedAssign8",
        "hasErrors",
        "declareSlot",
        "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1",
        "join",
        "testNamespaceAnnotationInExterns6",
        "testResetFunctionPropertyInLocalScope",
        "testIsFunctionAnonymous",
        "testDoNotUseReplacementMap",
        "addGlobalAliasNode",
        "testNamespacedDefine1",
        "createModules",
        "testInherits2",
        "endSourceMapping",
        "testAliasMethodsDontGetOptimize4",
        "apply",
        "mutatesThis",
        "SourceInformationAnnotator",
        "parseExpected",
        "getJSDocToken",
        "testSimpleDefinitionFinder",
        "Element",
        "testNoOptimizationForExternsFunctions",
        "testSimpleReassign3",
        "getLength",
        "testInline",
        "testProtectedAccessForProperties6",
        "testFoldComparison",
        "testVarInConditionPath",
        "testGlobalFunctionsInGraph4",
        "testReplaceIdentityFunction1",
        "testNoSideEffectAnnotation4",
        "caseNameOrGetProp",
        "testUsingAnonymousObjectsToDefeatRemoval",
        "disableTypeCheck",
        "hasSideEffects",
        "connectUnknowns",
        "statements",
        "testLotsOfVars",
        "put",
        "verifyArgument",
        "testFold2",
        "RecordFunctionInformation",
        "VarDefinition",
        "testNoRemoveInherits3",
        "toSource",
        "getNext",
        "addAuthor",
        "toStringTree",
        "ObjectType",
        "testValidSetCssNameMapping",
        "testSimpleReassign2",
        "testDoCrossFunction",
        "isControlStructure",
        "Name",
        "testExposeExpression2",
        "getStartLine",
        "getGrandparent",
        "meet",
        "testRefChain19",
        "typeError3",
        "testInlineBlockMutableArgs2",
        "fromReader",
        "assertLiveAfterX",
        "getLikelyNonConflictingName",
        "getScopeDepth",
        "testCanInlineReferenceToFunction30",
        "testIf4",
        "setNamesToAlias",
        "shouldTraverseIfActive",
        "testRemovalMultipleAssignment3",
        "CSSStyleRule",
        "getFlag",
        "testFunctionCallDepth2",
        "testCanInlineReferenceToFunction36",
        "testMixedModeInliningCosting4",
        "testObjLitWithQuotedKeyThatGetsRead",
        "nextFlaggedToken",
        "removeUnreferenced",
        "getRegexpCount",
        "findRoot",
        "collectDefines",
        "isOneTimePass",
        "getRestrictedUnion",
        "ControlRange",
        "testWhileContinueOptimization",
        "addReference",
        "testPrivateName",
        "allEquivalenceClasses",
        "testIfTryCatch",
        "parseTypeString",
        "setRequiredUsage",
        "splitAssignments",
        "orExpr",
        "getNamedInfo",
        "tryFoldHookIf",
        "isAssignAllowed",
        "createThrow",
        "testNamespacedClass2",
        "testProtectedAccessForProperties4",
        "Plugin",
        "createSourceInputs",
        "testNoVarArgs",
        "testStubsInExterns4",
        "RenamePrototypesTest",
        "openExternExportsStream",
        "testRenameWithNameOverlap",
        "testUnknownType",
        "getRestrictedTypeGivenToBooleanOutcome",
        "testReadUndefinedPropertyDepth1",
        "testNoSimplifyFunctionArgs1",
        "testSameNamesSameDefinitions",
        "ungetChar",
        "renamePrototypes",
        "testFailWithNestedNewNodes",
        "testPassWithLocalVariables",
        "testCorrectSimple",
        "testAliasCreatedForClassDepth1_2",
        "matchesExpectation",
        "AssignmentProperty",
        "ConstCheck",
        "getNodeA",
        "IntermediateState",
        "testClassDefiningCallWithStripType7",
        "printSummary",
        "getRestrictedWithoutNull",
        "testOneRun",
        "hasReturnAtExit",
        "testNoRewriteUseBeforeDefinition",
        "isLatin",
        "RemoveConstantRValuesCallback",
        "maybeCollapseIntoForStatements",
        "assertNotLiveAfterX",
        "testSimpleCatchFinally",
        "testJsDocNormalization",
        "parseFieldTypeList",
        "testMoveMethodsUsedInTwoModules",
        "applyCommonRestriction",
        "testProtobuffParseFail",
        "testRenamePropertiesFunctionCall2",
        "testContinueOutsideSwitch",
        "testComplexInlineInExpresssions4",
        "LinkedUndirectedGraphEdge",
        "testCanInlineReferenceToFunction1",
        "formatFoundRequired",
        "isDeprecatedFunction",
        "setExportedNames",
        "setDeprecationReason",
        "testStableRenameSimple",
        "testInline17",
        "testGlobalNameReferencedInLocalScopeBeforeDefined1",
        "HTMLParagraphElement",
        "testTwoVarArgs",
        "fromGenerator",
        "initForScopeRoot",
        "HTMLLIElement",
        "formatLine",
        "testInlineFunctions4",
        "create",
        "getCompilerData",
        "canPropertyBeDefined",
        "LoggerErrorManager",
        "setReservedKeywordAsIdentifier",
        "testSimpleSwitch",
        "getTypeIfRefinable",
        "processScope",
        "estimateMinOccurrencesRequriedToAlias",
        "expectNumber",
        "StyleSheet",
        "testInference6",
        "inferTypes",
        "testRenameWithPrefix2",
        "getDefaultExterns",
        "UnknownType",
        "createRecordType",
        "maybeDeclareQualifiedName",
        "testBlackList",
        "fromFile",
        "testInline19",
        "testAnonymousFunctionCallInlining5",
        "isVoidType",
        "setBaseLineno",
        "testGetElem2",
        "createExternInputs",
        "testWarningForDeprecatedClassInGlobalScope",
        "testCantMovePrototypeProp",
        "testRValueReference4",
        "testNonWellformedAlias2",
        "testFunctionWithQuotedPropertyThatGetsRead",
        "setCharno",
        "testExportMultiple",
        "needsToBeStubbed",
        "testSkipComplexMethods",
        "getPrototypeType",
        "testInnerFunctions2",
        "getPartitionSuperNode",
        "normalizeClassType",
        "wasEmptyNode",
        "exitScopeIfActive",
        "testInit",
        "getNativeFunctionType",
        "isGlobalVarReference",
        "processDefineAssignment",
        "testPropertiesOnBothSidesOfAssignment",
        "testShortCircuitingOr2",
        "testSubclass",
        "testUnusedTypeInExterns",
        "FunctionDefinition",
        "testNoRewriteNestedFunction",
        "processSubtree",
        "getSourcePositionFromStack",
        "TypedScopeCreator",
        "testInlineFunctions20",
        "propertyIsImplicitCast",
        "addChangeHandler",
        "testNamespaceAnnotation",
        "testUnaliasable",
        "testVarInWithBlock",
        "testSameWithInversion",
        "updateAssignAllowedStack",
        "processStringNode",
        "testCrossModuleInlining1",
        "testMutateWithParameters2",
        "testGlobalThis4",
        "testThisJSDoc3",
        "FunctionCheck",
        "getThisSlot",
        "parseFunction",
        "isLastGeneration",
        "testChainedAssignments2",
        "safeAlias",
        "assertNodeNames",
        "runtimeError",
        "declareArguments",
        "testFunctionArgumentsBasic",
        "HTMLFontElement",
        "recordConstancy",
        "setDefineInfoNotAssignable",
        "getVarsDeclaredInBranch",
        "getTopScope",
        "testNamespaceAnnotationInExterns1",
        "testBothScopes",
        "testReferencedVarNotDefined",
        "testComplexInlineVars8",
        "VerifyConstants",
        "setCompileFunctionsWithDynamicScope",
        "testExitNoReturn",
        "isBreakStructure",
        "getFunctionInfo",
        "testPrototypeAndInstance",
        "setWasEmptyNode",
        "canInline",
        "testFindModifiedParameters3",
        "testAssignAndReadInCondition",
        "assertUndeclared",
        "testIllegalArgumentIfNotHook",
        "removeFirstChild",
        "getTask",
        "testPropertyOfChildFuncOfUncollapsibleObjectDepth2",
        "testNoSimplifyFunctionArgs3",
        "unaryExpr",
        "getOwnPropertyNames",
        "release",
        "testNestedAssign1",
        "testDontCrashIfTheresNoQualifiedName",
        "createObjectLiteral",
        "testStaticFunctionReferencingThis2",
        "checkNameUsage",
        "FunctionAnalyzer",
        "testDefinitionInExterns",
        "CSSCharsetRule",
        "testSetPropertyReadByGeneratedCode",
        "testSwitch1",
        "testComplexNoInline2",
        "testLoop2",
        "testSimpleForWithContinue",
        "badRead",
        "setFlag",
        "assertRegionWellFormed",
        "testNotAllIndexKnown",
        "traverseAndRemoveUnusedReferences",
        "recordClassConstructorOrInterface",
        "addChildrenToFront",
        "isQualifiedName",
        "initIterator",
        "testInlineFunctions2",
        "getLevelName",
        "hasMoreThanOneChild",
        "testExternSubTypes",
        "HTMLAreaElement",
        "findIndex",
        "testInlineFunctions9",
        "copyNameAnnotations",
        "getWarningCount",
        "declareVar",
        "isConnectedInDirection",
        "setString",
        "getCodingConvention",
        "RemoveCallback",
        "setItem",
        "Date",
        "traverseNew",
        "getPropertyVar",
        "testThatNumbersArentDeprecated",
        "testSplitFileLevel",
        "testNamespacedDefine2",
        "createModuleChain",
        "DOMErrorHandler",
        "testNoInlineGetEle",
        "acquireSymbolTable",
        "testExportedName",
        "testRenamingMap",
        "removeUnreferencedVars",
        "testWithStatement",
        "testParam",
        "addToUseIfLocal",
        "testNamedType",
        "testInfiniteLoop2",
        "DettachPoint",
        "isImplicitReturn",
        "testCanStillCallNumberWithoutNewOperator",
        "plainProperty",
        "inLoop",
        "Normalize",
        "testNoRemoveAssign1",
        "lazyInitInfo",
        "TestCallback",
        "testOneFile",
        "testReplaceIdentityFunction2",
        "CheckMissingReturn",
        "ReplaceCssNamesTest",
        "testMergeBlock2",
        "testLiteralMovement4",
        "visitPostOrder",
        "testConstantInitializedInAnonymousNamespace1",
        "testBadCollapseIntoCall",
        "recordSizeChange",
        "trySimplify",
        "testSwitchCase",
        "testDeclare",
        "NameAndInstrumentFunctions",
        "testDoNotExitForLoop",
        "testClassDefiningCallWithStripType8",
        "sanityCheckNormalization",
        "evaluate",
        "getNumber",
        "testTopLevelClass1",
        "inlineCostDelta",
        "caseUnionType",
        "testExposeExpression5",
        "cloneTree",
        "getFileOverviewJSDocInfo",
        "recordAccessor",
        "fixFunctionType",
        "getConcreteInstance",
        "ControlStructureCheck",
        "onInvalidIndex",
        "formatDetailedMessage",
        "isJSSpace",
        "testSharedFunctionName1",
        "testStringJoinAdd",
        "testNoMemberDeclarations",
        "testUnreachableCatch",
        "testInheritanceDetectionPostCollapseProperties",
        "setDebugInformation",
        "setLineno",
        "addNumber",
        "testSplitVar",
        "testAssignBeforeDeclaration2",
        "Event",
        "testNestedObjLit",
        "testSwitchDefaultFirst",
        "SideEffected",
        "testForContinueOptimization",
        "testAssignmentToPrototype4",
        "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2",
        "StringOccurrence",
        "isArrayType",
        "testAnonymous7",
        "testComplex5",
        "createUndirectedGraphNode",
        "testRemoveInControlStructure3",
        "recordNoShadow",
        "alert",
        "testMutateValueReturnWithoutResultAssignment",
        "testLoggerDefinedInPrototype",
        "setLicense",
        "testInsideOrBranchInsideIfConditionalWithConstant",
        "getVisitedScopes",
        "parseBasicTypeExpression",
        "LiveRangeChecker",
        "testNoInlineOfExternMethods2",
        "testFoldArrayLength",
        "testRemovalMultipleAssignmentInIf1",
        "testComplexInline8",
        "isBooleanObjectType",
        "testLoggerDefinedStaticallyAndUsedInConstructor",
        "testInlineFunctionWithArgsMismatch2",
        "HTMLMenuElement",
        "recordParameter",
        "testAnalyzeUnusedPrototypeProperties3",
        "hasAnySingletonTypeTags",
        "testInlineIntoExpressions",
        "maybeAddFunction",
        "incrementNameCount",
        "getDirectImplementors",
        "setIn",
        "ConcreteFunctionType",
        "testInlineFunctions14",
        "getSourceAst",
        "setCode",
        "not",
        "tryFoldDo",
        "isConst",
        "testStableRenameLocalsClashingWithGlobals",
        "testRenamingConstants",
        "dependsOn",
        "testNewOperator",
        "testSetterInForStruct7",
        "tryFoldFor",
        "testNoInlineIfParametersModified6",
        "parseAndRecordParamTypeNode",
        "testSuspiciousSemi",
        "isForward",
        "RenameLabels",
        "lo0bits",
        "count",
        "testRemoveAbstract",
        "flattenPrefixes",
        "isTheObjectType",
        "testComma1",
        "Comparator<Property>",
        "formatSetPropFn",
        "testPruningCallbackShouldTraverse1",
        "testLocalAlias1",
        "buildCallNode",
        "joinInputs",
        "testInvalidFunctionDecl2",
        "testInlineExpressions12",
        "testTwoRequiredOneOptionalFifthVarArgReferenced",
        "AmbiguateProperties",
        "getParentScope",
        "testFoldComplex",
        "testStableSimple3",
        "addActivationName",
        "testNew1",
        "testInherits6",
        "addFixedPointLoop",
        "getOutEdges",
        "checkNameDeprecation",
        "Comparator<Var>",
        "hasEnumParameterType",
        "clearTemplateTypeName",
        "getReasonWhyNotAssignable",
        "testInlineBlockMutableArgs1",
        "getEnclosingFunctionDependencyScope",
        "connectToPossibleExceptionHandler",
        "getValueType",
        "recordDefineType",
        "initAnnotationNames",
        "setOut",
        "testBuiltInTypeDifferentParamType",
        "isNumberObjectType",
        "lookupProperty",
        "testPreserveTryBlockContainingReturnStatement",
        "level",
        "reusePropertyNames",
        "justTransform",
        "ShowByPathWarningsGuard",
        "testCostBasedInliningComplex5",
        "removeParamOrVar",
        "testLateProvides",
        "testVarReferenceInExterns",
        "testBadFunctionTypeDefinition",
        "testMutateCallInLoopVars1",
        "testConditionallyDefinedFunction2",
        "SpecialReferenceNode",
        "testInnerFunctionLocalVar",
        "JSDocInfo",
        "testMutateNoReturnWithoutResultAssignment",
        "computeGenKill",
        "shouldRemove",
        "testNoInlineIfParametersModified8",
        "CSSRule",
        "RemoveUnusedVarsTest",
        "hasName",
        "resetUniqueNameId",
        "add",
        "testWarningForDeprecatedSuperClass2",
        "testGlobalThis5",
        "testUnintendedUseOfInheritsInLocalScope4",
        "getParamVar",
        "testConstantArgumentsToConstructorCanBeOptimized",
        "testHook4",
        "regexpEscape",
        "testReplaceReturnConst3",
        "getAnnotation",
        "getOffset",
        "notifyOfRemoval",
        "testRefToUndefinedProperty3",
        "testLiteralMovement2",
        "testInlineNeverPartialSubtitution1",
        "testCallInExterns",
        "lookupSourceName",
        "getJsDocToken",
        "eval",
        "testFunctionNameReuse",
        "assertPasses",
        "testMaybeAddTempsForCallArguments9",
        "testDoNotInlineDecrement",
        "testNamespacedFunctionStub",
        "testInlineStringWhenWorthwhile",
        "testAliasMethodsDontGetOptimize3",
        "getPrototypePropertyOwner",
        "isUnknownType",
        "testStubMethodMovement2",
        "inlineWellDefinedVariable",
        "testExposeExpression7",
        "getLabel",
        "tryFoldStringIndexOf",
        "assertLiveBeforeX",
        "testNoRemoveVar2",
        "CSSMediaRule",
        "getFunctionScope",
        "isTestFunction",
        "ConcreteSlot",
        "foldSame",
        "testConditionalCall",
        "DocumentCSS",
        "testUnknownType1",
        "testNoInlineGetProp2",
        "canExposeExpression",
        "testVarArgsLast",
        "peekTokenOrEOL",
        "isLhsOfForInExpression",
        "testSimpleCatch",
        "loadPrototype",
        "bitOrExpr",
        "testUndefinedComparison",
        "testNoRemoveAssign2",
        "processTryStatement",
        "getReturnType",
        "parseFloat",
        "getChildCount",
        "testCostBasedInlining9",
        "AnonymousFunctionNamingPolicy",
        "testFoldArithmeticStringComp",
        "checkNameUse",
        "UnrecognizedRequire",
        "MarkNoSideEffectCallsAndNameAnalyzerRunner",
        "processWhileLoop",
        "testRhsReference1",
        "RestrictByFalseInstanceOfResultVisitor",
        "bitXorExpr",
        "HTMLDocument",
        "setOptimizationLevel",
        "formatRegion",
        "matchingExitNode",
        "isValidPropertyName",
        "processAllTasks",
        "testRegexesCanBeInlined",
        "getReplacementName",
        "setOptionalArg",
        "testAbbreviatedArithmeticAssignment1",
        "testGlobalAssigment",
        "createDefaultOptions",
        "testInlineReferenceInExpression11",
        "StandardUnionFind",
        "setState",
        "testConstructorUsedAsFunctionCanBeOptimized",
        "testShadowVariables2",
        "cloneNode",
        "ThrowAliasSpecification",
        "getTemplateTypeName",
        "testObjLitDeclarationUsedInSameVarList",
        "testMaybeAddTempsForCallArguments4",
        "testContinueToSwitchWithNoCases",
        "testNoProblem",
        "getTypeAlternatives",
        "CanvasPixelArray",
        "testChainedAssignments1",
        "clearCachedSource",
        "assertMismatches",
        "newParameter",
        "testComplexInlineNoResultWithParamCall2",
        "NoRewriteNonCallReferenceTestInput",
        "testNoDefinition",
        "Position",
        "testSimpleDottedAdditionalProvide",
        "DisambiguatePropertiesTest",
        "findParametersReferencedAfterSideEffect",
        "testInlineConstructor4",
        "getSynthesizedExternsInput",
        "testInlineInFunction4",
        "visitFunction",
        "testExpressionVariableReassignment",
        "process",
        "testGlobalVarSetToObjLitConditionally2",
        "testMakeLocalNamesUniqueWithContext",
        "processVariableInitializer",
        "testCatch1",
        "key",
        "testTwoFields",
        "testRestrictToInterfaceCast",
        "hasEncounteredAllErrors",
        "DOMLocator",
        "checkForHosedThisReferences",
        "GlobalTypeResolver",
        "testNamePrefix",
        "testObjectLiterals",
        "testCanExposeExpression3",
        "testDoNotRemoveNormal",
        "testMaybeAddTempsForCallArguments26",
        "getQualifiedName",
        "replaceChildAfter",
        "mayBePure",
        "testIf",
        "createDefaultNamespace",
        "testInlineReferenceInExpression8",
        "testInlineFunctions5",
        "getAddingRoot",
        "testStaticMethod1",
        "processEmptyExpression",
        "testNoProtectedAccessForProperties5",
        "getSlots",
        "testPropertyReferenceGraph",
        "testMoveExpression7",
        "testAliasCreatedForEnumDepth1_2",
        "expectAllInterfacePropertiesImplemented",
        "getErrorReporter",
        "testAssignOps",
        "getExports",
        "testInlineExpression9",
        "HTMLTextAreaElement",
        "DOMStringList",
        "TypeCheck",
        "calcZippedSize",
        "isReservedKeywordAsIdentifier",
        "verifyProvide",
        "recordFileOverview",
        "testRValueReference5",
        "testTwoMethods",
        "addProperty",
        "ErrorFunctionType",
        "helperMutate",
        "testHaltAtSideEffects2",
        "reportLineCut",
        "createUnionWithSubTypes",
        "testAliasMethodsDontGetOptimize",
        "getUniqueAnonymousParameterName",
        "tryReplaceArguments",
        "testMixedQuotedAndUnquotedObjLitKeys",
        "hasThisType",
        "HTMLFrameElement",
        "testPrivateAccessForNames",
        "getImplicitActions",
        "matchLabel",
        "error",
        "LiveVariableLattice",
        "SemanticReverseAbstractInterpreter",
        "testHaltAtSideEffects5",
        "extractClassNameIfGoog",
        "handleDefault",
        "testObjLitAssignmentDepth3",
        "testConstantArrayInline",
        "createDoWhile",
        "doAlias",
        "hasParsedJSDocInfo",
        "CompilerInput",
        "testJoin1",
        "testRhsAssign2",
        "rewriteDefinition",
        "xDigitToInt",
        "detachChildren",
        "testShortCircuit5",
        "HTMLHRElement",
        "testComplexNestedAssigns3",
        "copyInformationFrom",
        "isCallSite",
        "CombinedCfgNodeLiveRangeChecker",
        "getLastValue",
        "AliasKeywords",
        "parseTestCode",
        "makeVariableMap",
        "testJoin2",
        "testCallIsIgnore",
        "testExtendNativeType",
        "testSynBlock",
        "testForwardVarReferenceInLocalScope1",
        "testVarDeclaration",
        "assertDownEdge",
        "CharacterData",
        "isGeneratingSource",
        "isNoAlias",
        "testUint32String",
        "getTypesWithProperty",
        "Collapse",
        "ModuleDependenceException",
        "wrapNode",
        "checkKeepSimplifiedShortCircuitExpr",
        "testMaybeAddTempsForCallArguments2",
        "testGetElemOnThis",
        "testOrOperator2",
        "getNativeObjectType",
        "allDefinitionsEquivalent",
        "generatePreProcessThrowCode",
        "runFindHighestTypeInChain",
        "restrictParameter",
        "testNoPrivateAccessForProperties6",
        "LinkedUndirectedGraphNode",
        "testTwoTypes",
        "markAnnotation",
        "popNodeAnnotations"
      ],
      "functions_name_co_evolved_modified_file": [
        "defineName",
        "CollectProperties",
        "declareNativeFunctionType",
        "getFunctionType",
        "checkForTypedef",
        "AbstractScopeBuilder",
        "getEnumType",
        "declareNativeValueType",
        "GlobalScopeBuilder",
        "getObjectSlot",
        "shouldTraverse",
        "declareArguments",
        "getPrototypePropertyOwner",
        "handleFunctionInputs",
        "define",
        "defineSlot",
        "checkForOldStyleTypedef",
        "visit",
        "TypedScopeCreator",
        "getDeclaredGetPropType",
        "build",
        "createScope",
        "maybeDeclareQualifiedName",
        "getDeclaredTypeInAnnotation",
        "declareNativeType",
        "LocalScopeBuilder",
        "createInitialScope",
        "maybeCollectMember"
      ],
      "functions_name_co_evolved_all_files": [
        "hasGeneratedAnyIds",
        "canBeCalled",
        "testTopLevelClass5",
        "testGoodCrossModuleRequire1",
        "getCurrentContext",
        "testRemovalMultipleAssignment1",
        "fromCode",
        "testAutoboxedDeprecatedProperty",
        "getOrCreateConstructor",
        "testModule",
        "main",
        "processContinueStatement",
        "processBlock",
        "addFunctionDeclaration",
        "testMakeLocalNamesUniqueWithoutContext",
        "traverseInnerNode",
        "XPathEvaluator",
        "getCharIgnoreLineEnd",
        "defineNameIfNotExists",
        "testPrivateAccessForProperties2",
        "testReadPropertyReferencedByGeneratedCode",
        "insertNewKey",
        "ArrowType",
        "setNoSideEffects",
        "testStopRemovalAtNonQualifiedName",
        "testCostBasedInliningComplex3",
        "testConstructorNode",
        "getIgnoring",
        "getImplicitActionsFromProp",
        "testComma4",
        "addLeftExpr",
        "codeBug",
        "testPrototypeProperties",
        "addAllSiblings",
        "traverseFunction",
        "AnonymousFunctionNamingCallback",
        "FunctionInformation",
        "reserveCharacters",
        "Compiler",
        "addToDefIfLocal",
        "reportWarningAsError",
        "setProcessObjectPropertyString",
        "testNoRewriteDeclUsedAsCallArgument",
        "fastAllPathsReturnCheck",
        "NewRhinoErrorReporter",
        "testInheritanceDetection6",
        "testPrototypeMethodDefinition",
        "OptimizeArgumentsArray",
        "getSortedPropTypes",
        "testSimpleNoDefault",
        "testFor",
        "testNoRewriteVarArgs",
        "testMissingModuleDependencySkipNonStrict",
        "newInstanceForTesting",
        "assertMatch",
        "testCanInlineReferenceToFunction34",
        "isNestedAssign",
        "ObjToIntMap",
        "testRemoveVarDeclartion3",
        "getPositionOnEndLine",
        "initialize",
        "testInlineIntoRhsOfAssign",
        "toStringTreeImpl",
        "reportRuntimeError4",
        "readCDATA",
        "testInlineFunctions15",
        "testNoProtectedAccessForProperties3",
        "getActingCallback",
        "testRewriteDefinitionBeforeUse",
        "replaceAccessor",
        "XMLDOMDocument",
        "processForInLoop",
        "testApply2",
        "testDoNotChangeLocalScopeReferencedInstanceOf",
        "testAbbreviatedShiftAssignment2",
        "testRemoveDuplicateVarDeclarations",
        "testRemoveOneOptionalOneRequired",
        "visitAssign",
        "formatError",
        "applyDelegateRelationship",
        "testMultiLevelCollapse",
        "appendString",
        "expectIndexMatch",
        "addNonUnionType",
        "CSSValue",
        "getMarkers",
        "testHook8",
        "caseNullType",
        "newlineJoin",
        "renameVars",
        "matchToken",
        "testFunctions",
        "getNameNewName",
        "testInlineFunctions16",
        "toBoolean",
        "testInheritanceDetection5",
        "testNoProtectedAccessForProperties4",
        "testMultiFunctionMapping",
        "testGetFunctionName",
        "testFunctionsWithJsDoc3",
        "SQLError",
        "testNotInfiniteLoop",
        "testFailWithOneNew",
        "testInline11",
        "testImplicitCallFromProperty",
        "testRenameRedeclaredGlobals",
        "processGlobalFunctionDeclaration",
        "setUp",
        "testFunctions2",
        "testFunctionsAreExported",
        "testGlobalThis1",
        "findInjectionPoint",
        "setFunctionThrows",
        "testMergesWithOneDefinition",
        "normalizeBlocks",
        "testNoInlineOfNonGlobalFunction1",
        "computeFallThrough",
        "pushAnnotations",
        "HTMLLinkElement",
        "CompilerTestCase",
        "testMixin7",
        "testAnnotationInExterns3",
        "invertContextualRenaming",
        "insertAliasDeclaration",
        "testCostBasedInliningComplex1",
        "getUndirectedGraphEdges",
        "update",
        "NameReferenceGraph",
        "CSSImportRule",
        "GearsResourceStore",
        "findConstantParameters",
        "testAddDependency",
        "createModuleStar",
        "OldRhinoErrorReporter",
        "testCanInlineReferenceToFunctionInExpression7",
        "sortInputsByDeps",
        "testFunctionPrototype",
        "tryFoldGetProp",
        "addWrite",
        "testSimpleAssign",
        "getBeginningLineNumber",
        "testEnumOfObjects4",
        "LightweightMessageFormatter",
        "GearsDesktop",
        "Comparator<DiGraphNode<Node,Branch>>",
        "inlineFunction",
        "getGraphvizEdges",
        "createRefForTesting",
        "applyToOptions",
        "appendFunctionValue",
        "isCompoundAssignment",
        "neighborIterator",
        "setFileLevelJsDocBuilder",
        "canRename",
        "getFunctionInstanceTypes",
        "setTaintsGlobalState",
        "PropertyAssignAction",
        "testCollectedFunctionStub",
        "testCanInlineReferenceToFunction25",
        "testBreakCrossFunction",
        "newString",
        "markPrototypePropertyCandidate",
        "testReturnInFinally2",
        "testReplaceGetter2",
        "testNoPrivateAccessForProperties5",
        "isAliasableType",
        "RuntimeObject",
        "VerifyingCallback",
        "HTMLFrameSetElement",
        "testMutateInitializeUninitializedVars1",
        "testReplaceReturnConst2",
        "GearsPositionOptions",
        "endLine",
        "encodeURIComponent",
        "getInfoForNameNode",
        "Config",
        "testMaybeAddTempsForCallArguments25",
        "testOverlappingInlines",
        "ReplaceStrings",
        "CompilerOptions",
        "isGeneratedScript",
        "getSingletonGetterClassName",
        "testConstantDefinition1",
        "testStaticFunctionReferencingThis1",
        "split",
        "testSplitMupltiFuntions",
        "disable_testSplitAssign",
        "visitAnnotatedAssignGetprop",
        "Reduction",
        "XPathExpression",
        "testInlineConstants",
        "testExceptionThrowingAssignments",
        "NameAnalyzer",
        "recordThrowDescription",
        "markObjLitPropertyCandidate",
        "testComplexInlineVars6",
        "testProvideAfterDeclarationError",
        "testDoNotRenameExportedName",
        "check",
        "testExtractingSingleClassPrototype",
        "testRecursiveFunction2",
        "flush",
        "DOMImplementationCSS",
        "reportChange",
        "RemoveConstantExpressions",
        "EnumType",
        "handleTry",
        "testFoldBlock",
        "getGreatestSubtypeWithProperty",
        "testConfusingNames",
        "testObjectLiteralNotRenamed",
        "testInlineConditionallyDefinedConstant3",
        "testMethod1",
        "testAnonymous5",
        "isUseDynamicScope",
        "getVars",
        "undefWriteError",
        "AstControlFlowGraph",
        "testExtends",
        "ignore",
        "newTracer",
        "getExistingIntProp",
        "maybeSetBaseType",
        "CombinedLiveRangeChecker",
        "SetNoSideEffectCallProperty",
        "BranchedFlowState",
        "isCandidateFunction",
        "getReplacementReturnStatement",
        "traverseCatch",
        "rebuildInputsFromModules",
        "testMultipleInterfaces",
        "ReferenceError",
        "setColorizeErrorOutput",
        "testGlobalThis",
        "testExternName1",
        "parseRecordType",
        "maybeGetSingleReturnRValue",
        "getOptionalNodeComparator",
        "isPrototypePropertyDeclaration",
        "MaxIterationsExceededException",
        "testIsAnonymousFunction2",
        "escape",
        "PrintStreamErrorManager",
        "testReturn2",
        "getCustomPasses",
        "testNoOptimizationForGoogExportSymbol",
        "getContextualRenameInverter",
        "isLoopStructure",
        "runInSerial",
        "getLicense",
        "testMovePrototypeMethod",
        "isConnected",
        "ensureTyped",
        "matchesStringContext",
        "testNoInlineAliases3",
        "GoogleCodeRemovalTest",
        "testInlineEmptyFunction4",
        "checkDelete",
        "setSource",
        "getImplementedInterfaces",
        "testInline19b",
        "HTMLStyleElement",
        "addSimplifiedChildren",
        "semicolonSplit",
        "getInEdges",
        "getProcessor",
        "addDeclaredName",
        "testOverriding2",
        "createParametersWithVarArgs",
        "testStaticFunctionReferencingThis4",
        "connect",
        "testEmptyMethodInlineInAssign1",
        "caseStringType",
        "testEnumOfObjects3",
        "getDeclarations",
        "make",
        "newBooleanOutcomePair",
        "OptimizeArgumentsArrayTest",
        "inlineEmptyMethod",
        "testConstructorThatModifiesGlobal1",
        "testNestedCatch",
        "openSourceMapStream",
        "testRenamePropertiesFunctionCall1",
        "testUndefinedModuleDep1",
        "getPropertyDeprecationInfo",
        "getCfg",
        "splitVarDeclarations",
        "testFunctionWithQuotedPropertyThatDoesNotGetRead",
        "getDelegateSuperclassName",
        "checkNameVisibility",
        "doStatementNormalizations",
        "allPathsSatisfyPredicate",
        "testComma2",
        "CrossModuleMethodMotionTest",
        "setRenamingPolicy",
        "computeFixedPoint",
        "setEnumParameterType",
        "FunctionCallBuilder",
        "LineMappingInformation",
        "removeDeadExprStatementSafely",
        "nextToken",
        "checkProperty",
        "testMethodInStaticFunction",
        "addRegexp",
        "testRefChain8",
        "testRemoveVarDeclartion2",
        "testAlert",
        "addOneTimePass",
        "getCombinedName",
        "TypeValidator",
        "ensureProperty",
        "testExposeExpression6",
        "testTopLevelClass7",
        "testLocalScope1",
        "testCanInlineReferenceToFunction12b",
        "appendCall",
        "testNestedProperties",
        "testRewriteChained",
        "peekFlaggedToken",
        "FlatFlowScopeCache",
        "isCall",
        "assertNoWarning",
        "FunctionInfo",
        "testPassWithNoNewNodes",
        "testIsSimpleFunction4",
        "addInvalidatingType",
        "testGlobalAliasNotPushedDeeper",
        "testExternName2",
        "hasNamespace",
        "checkForOldStyleTypedef",
        "testLocalAlias5",
        "isImplicitCast",
        "tryFoldLiteralConstructor",
        "testNamespaceAnnotationInExterns3",
        "testObjLitRedefinedInLocalScope",
        "createCallOrNew",
        "isIdeMode",
        "testUncheckedConditionInFor",
        "testLoopInductionVar",
        "getParamAndVarConst",
        "ActiveXObject",
        "parseInt",
        "recordMutator",
        "testOverlappingDottedAdditionalProvide",
        "forwardDeclareType",
        "FunctionTypeBuilder",
        "isExported",
        "testAssignmentOverride",
        "isNaN",
        "TightenTypesTest",
        "Function",
        "JSTypeRegistry",
        "declareParam",
        "testInlineReferenceInExpression3",
        "testInlineWithinCalls1",
        "addAccessorPropName",
        "contains",
        "testGetSourceName",
        "getPropertyType",
        "setInline",
        "testObjLitRedefinedInGlobalScope",
        "RewritePrototypeMethodTestInput",
        "setChainCalls",
        "canEliminate",
        "testBadOverrideOfPrivateProperty",
        "testDoubleInlining1",
        "testMixin5",
        "declareNativeType",
        "testNamespaceAnnotationInExterns",
        "isAncestor",
        "keepAssignableInterfaces",
        "getSignatureStore",
        "word1",
        "testFoldWithMarkers2",
        "hasParseError",
        "CollectProperties",
        "UserDataHandler",
        "testInstanceofOfPrivateConstructor",
        "addAlternate",
        "setPropName",
        "testDoNotExitTry",
        "parseResultType",
        "getValueNode",
        "testBasic",
        "testFoldUselessFor",
        "testSetterInForStruct6",
        "testRestrictToCast",
        "replaceReferencesToThis",
        "testNoRemoveAssign6",
        "maybeAddAutoboxes",
        "testQualifedNameExpectedError",
        "nextPreciserScopeKnowingConditionOutcome",
        "testStableRenameWithExterns1",
        "getLastChar",
        "NameGenerator",
        "testWarningForMethod1",
        "testRemoveInControlStructure1",
        "testIsAnonymousFunction1",
        "testEarlyReference",
        "println",
        "createNode",
        "testMultipleDeclarationError2",
        "testConvert",
        "setWarningsGuard",
        "getOrCreateStringInfo",
        "testPrettyPrinter",
        "testInlineFunctions24",
        "testConditionallyDefinedFunction1",
        "testCanInlineReferenceToFunction21",
        "ExtractionInfo",
        "testStubMethodMovement1",
        "checkPropertyAccess",
        "removeAll",
        "getKeys",
        "getReservedCharacters",
        "CopySideEffectSubexpressions",
        "testBug1449316",
        "testProperties",
        "DOMException",
        "assertError",
        "CompilerEnvirons",
        "isFunctionObjectApply",
        "testClassMovement1",
        "getCatchBlock",
        "testInlineReferenceInExpression12",
        "getTopVarName",
        "LiteralProperty",
        "testAssignmentInReturn",
        "AssignmentDefinition",
        "createInstanceScope",
        "testSetterInForStruct1",
        "testInlineEmptyFunction1",
        "caseTypeOf",
        "testUseShadowGlobals1",
        "keepSimplifiedShortCircuitExpression",
        "processPrototypeParent",
        "intern",
        "Visitor<List<ObjectType>>",
        "testCanExposeExpression2",
        "testExtractingPrototypeWithQName",
        "testCanInlineReferenceToFunctionInExpression19",
        "LocalVarMotion",
        "testConstantPreIncremented1",
        "initColumnNumber",
        "documentAuthor",
        "testShadowVariables15",
        "getReference",
        "getScriptStackTrace",
        "ProcessVars",
        "tryFoldBlock",
        "Comparator<JSType>",
        "testNoPrivateAccessForProperties4",
        "getMapPath",
        "testRefChain9",
        "testNoInlineIfParametersModified5",
        "createTypeIntersection",
        "getThisType",
        "testComplexInline2",
        "transformTree",
        "testCollapse",
        "testGlobalFunctionNameInBooleanExpressionDepth1",
        "isSupportedCallType",
        "initSourceName",
        "testAliasTrueFalseNull",
        "FunctionPrototypeType",
        "isCallWhoseReturnValueShouldBeStripped",
        "hasSideEffect",
        "testExportNonStaticSymbol",
        "testAssignmentToUnknownPrototype",
        "handleSetFromLocal",
        "testDependentModules",
        "skipAllCompilerPasses",
        "getDeepestCommonModuleRef",
        "testComplexPropAssignGivesNoWarning",
        "getAllEdges",
        "testNeededTemps",
        "testStaticFunction5",
        "testNoSimplifyFunctionArgs2",
        "testStaticProperty",
        "testExportComplexSymbolReservesName",
        "testDoNotInlineIncrement",
        "RenameProperties",
        "NameAnonymousFunctions",
        "computeCfg",
        "testDo",
        "addOp",
        "testInlineImmutableMultipleTimes",
        "recordDeprecated",
        "getListener",
        "testConstructorAnnotationInExterns4",
        "FunctionInjector",
        "VariableNameGenerator",
        "testSetCssNameMappingNonStringValueReturnsError",
        "HTMLHtmlElement",
        "testRefToDescendantOfUndefinedProperty3",
        "testInheritanceDetection10",
        "testGlobalObjectNameInBooleanExpressionDepth1_4",
        "testReturn",
        "testNoRewriteNotImplementedMethod",
        "KeywordAliasSpecification",
        "NoObjectType",
        "register",
        "testMinimizeCondition",
        "canCollapseUnannotatedChildNames",
        "getValue",
        "getFunctionAnnotation",
        "testExcerptRegion",
        "testTopLevelClass6",
        "testNewNodesWithMoreThanOneFile",
        "addAction",
        "nameAnchor",
        "tearDown",
        "testMisusedEnumTag",
        "testIsSimpleFunction6",
        "maybeRemoveCall",
        "createWhile",
        "processArrayLiteral",
        "isFunctionType",
        "define",
        "isFunctionPrototype",
        "testInheritanceDetection8",
        "ConcreteUnionType",
        "CheckGlobalThisTest",
        "handleStmtList",
        "testSimpleStatements",
        "aliasProperties",
        "compile",
        "doExtraction",
        "makeLocalNamesUnique",
        "typeError",
        "getName",
        "testCall1",
        "testViolatedModuleDependencyNonStrictPromoted",
        "processFunctionNode",
        "getParamCount",
        "isVar",
        "extractPrototypeMemberDeclarations",
        "testCall2",
        "getExportPropertyFunction",
        "handleUnresolvedType",
        "createNumber",
        "updateTypeOfParametersOnClosure",
        "removeDeclaration",
        "createScope",
        "testHaltAtSideEffects3",
        "assertInvalidContinue",
        "testStableRenameWithPointlesslyAnonymousFunctions",
        "ensureIndex",
        "testExcerptInexistantLine",
        "eliminateFunctionParamAt",
        "isArgumentsName",
        "warnAboutNamespaceRedefinition",
        "hasParameter",
        "isReferenceToRemovedVar",
        "formatPropNameDecl",
        "visitLabel",
        "canTestForEqualityWith",
        "maybeEliminateExpressionByName",
        "testAssignMovement",
        "testCostBasedInlining1",
        "testStable",
        "testCorrectLoopBreaksAndContinues",
        "getRestrictedByTypeOfResult",
        "testVarLifting",
        "testMaybeAddTempsForCallArguments20",
        "isDeclaration",
        "testIfTryFinally",
        "testClassMovement7",
        "testConstantDefinition2",
        "testComparison",
        "setShouldPreserveTry",
        "isTryFinallyNode",
        "testTypeAnnotationsInterface",
        "popContainingFunction",
        "hasFinally",
        "canReplaceWithSetProp",
        "testConstantFunction1",
        "testBasicTestFunctionsAreExported",
        "assertPrintNode",
        "BuildGlobalNamespace",
        "isValidPrivateConstructorAccess",
        "isNameAssignedTo",
        "testStableRenameWithAnonymousFunctions",
        "documentVersion",
        "isRegexpType",
        "assertCrossEdge",
        "createIncDec",
        "getAlternatives",
        "testAdd1",
        "start",
        "testNormalMethod",
        "testGlobalNameReferencedInLocalScopeBeforeDefined2",
        "testVarMovement4",
        "isGeneratingDebugChanged",
        "registerPropertyOnType",
        "parseWithJSDoc",
        "isEnumElementType",
        "testApply",
        "testConstructorFields",
        "testCrossModuleInlining2",
        "getPropertySlots",
        "getDirectedSuccNodes",
        "testAndOperator1",
        "testUntypedExterns",
        "addGuards",
        "hasOneChild",
        "isExtern",
        "testMaybeAddTempsForCallArgumentsInLoops",
        "addDependency",
        "DocumentStyle",
        "testDifferentInstance",
        "testComplexInlineVars3",
        "shouldReplaceWithAlias",
        "visit",
        "testConstants1",
        "testObjLitWithUnusedNumericKey",
        "testRenamePropertiesFunctionCallStable",
        "inferThisType",
        "recordNoAlias",
        "testPrototypePropertySetInLocalScope3",
        "testNoSymbolMapStripsCallAndDoesntIssueWarnings",
        "testConditions",
        "computeCFG",
        "testStaticMethod3",
        "testConstantInline",
        "getDescriptionForThrownType",
        "testSimpleFunction",
        "testNoInlineMaskedFunction",
        "CollapseProperties",
        "testIsSimpleFunction3",
        "testArgumentsWithSideEffectsNeverInlined1",
        "throwInternalError",
        "tryMinimizeCondition",
        "expectStringOrNumber",
        "testGetFunctionName3",
        "visitThrow",
        "mayThrowException",
        "getUniqueNameIdSupplier",
        "testNoRemoveUselessNameStatements",
        "getParamAndVarNames",
        "addRefInternal",
        "testRefChain7",
        "testMaybeAddTempsForCallArguments12",
        "testSetterInForStruct3",
        "testObjLitAssignmentDepth1",
        "testObjLitWithUsedNumericKey",
        "documentReference",
        "testHaltReadWhenValueHasSideEffects",
        "addPassFactoryBefore",
        "replaceWithEmpty",
        "testGlobalFunctionNameInBooleanExpressionDepth2",
        "classOrNull",
        "getAndResetJSDocInfo",
        "VariableReferenceCheck",
        "testRhsAssign9",
        "XMLHttpRequest",
        "applyCollapses",
        "createObjectType",
        "color",
        "createVariables",
        "testConstantPostIncremented2",
        "XMLSerializer",
        "FunctionNames",
        "CSSValueList",
        "testInlineNeverPartialSubtitution2",
        "condition",
        "testRefToMethod1",
        "testPrototypePropertySetInLocalScope4",
        "appendStringTree",
        "getSourceRegion",
        "recordPreserveTry",
        "HTMLCollection",
        "testRenameNested",
        "isSubtype",
        "testComplexInline1",
        "testAssignmentInArgs",
        "testContinue",
        "readPI",
        "ReachingUses",
        "checkSourceMap",
        "getIn",
        "getAncestor",
        "processSwitchCase",
        "getImplicitActionsFromPropNonUnion",
        "getDirectedGraphEdges",
        "LineNumberCheck",
        "skipLine",
        "testNoSideEffectAnnotation2",
        "testSameNamesDifferentDefinitions",
        "ClientInformation",
        "applyBasicCompilationOptions",
        "CallVisitor",
        "testTwoArgsWithStringLiterals",
        "GearsFactory",
        "testVarMovement7",
        "testRewriteSingleDefinition1",
        "testIsSimpleFunction5",
        "getScopeCreator",
        "testSpuriousBreak",
        "connectIfCrossed",
        "FoldConstantsTest",
        "testNoExceptionsWithBadConstructors1",
        "getObject",
        "testAbbreviatedArithmeticAssignment2",
        "testMoveExpression9",
        "testConditionalDeadCode",
        "isReadFrom",
        "compute",
        "insideGetUniqueIdCall",
        "testNoSideEffectAnnotation7",
        "getNewName",
        "testRemoveTryCatch",
        "createInputs",
        "testInlineCall",
        "testProtectedAccessForProperties3",
        "testNoRemoveInherits4",
        "testBadObjectLiteralCast1",
        "getFnParameters",
        "assertLiteralButNotImmutable",
        "testNoRemoveFunctionDeclaration2",
        "HTMLDirectoryElement",
        "constructError",
        "testInlineInDifferentPaths",
        "getFunctionCallParameterMap",
        "testSwitchEmpty",
        "testSideEffectClassification2",
        "getCodeRemovingPasses",
        "testDoubleInlining2",
        "SymbolTable",
        "testCanInlineReferenceToFunction15",
        "createInterfaceType",
        "aliasNode",
        "setStartingPosition",
        "ConcreteScope",
        "testStableRenameSimpleGlobalNameExterned",
        "testMergeBlock1",
        "DOMError",
        "invalidate",
        "isNativeObjectType",
        "testCost",
        "testRefChain1",
        "parseUnionTypeWithAlternate",
        "setValue",
        "createNewFileLevelAstParallelizer",
        "testDeepNestedFinally",
        "testAnonymousFunctionYCombinator",
        "testDoNotCollapsePropertyOnExternType",
        "testNestedAssign2",
        "testChainedAssignments5",
        "testOneArgWithCompositeClassNamesWithUnknownParts",
        "transformTokenType",
        "isRecursiveFunction",
        "testSafeReferenceOfThis",
        "getImplicitReturn",
        "testBug1974371",
        "testThrow",
        "helperInlineReferenceToFunction",
        "setDefineToNumberLiteral",
        "execute",
        "assertPrint",
        "isNoSideEffectsCall",
        "JsAst",
        "testAliasCreatedForObjectDepth1_1",
        "testFunctionMovement3",
        "recordAssignment",
        "testRefChain17",
        "testNoPrivateAccessForProperties2",
        "testCostBasedInlining2",
        "isVarBlock",
        "expectAnyObject",
        "closeSwitch",
        "getIntermediateState",
        "testRequireOfAdditionalProvide",
        "Behavior",
        "testCanInlineReferenceToFunctionInExpression23",
        "RemoveUnusedPrototypePropertiesTest",
        "testGlobalThis6",
        "getRuntimeRecord",
        "testMinimizeWhileConstantCondition",
        "getConstructorType",
        "HTMLObjectElement",
        "testMovedVariable",
        "peek",
        "appendDot",
        "addConcreteType",
        "getJsDocBuilderForNode",
        "decomposeSubExpressions",
        "ObjectPropertyStringPreprocess",
        "RestrictByTrueInstanceOfResultVisitor",
        "AliasCandidate",
        "testAliasCreatedForFunctionDepth1_3",
        "recordPassStop",
        "clearEdgeAnnotations",
        "requiresActivation",
        "testCanInlineReferenceToFunction4",
        "testPropAccessorPushedDeeper1",
        "testInlineIntoFunction",
        "testEmptyModules",
        "testRenameGlobals",
        "testOptionNotToTraverseFunctions",
        "testWarningOnDeprecatedConstVariable",
        "testGetElemInIf",
        "testRemoveTwoOptionalMultiplePossibleDefinition",
        "testRefToDefinedProperties3",
        "combineChecks",
        "traverseChildren",
        "testRefToDefinedProperties1",
        "getUseSites",
        "convertPosition",
        "testMoveMethodsUsedInTwoModules2",
        "DiagnosticGroup",
        "testObjLitDefinedInLocalScopeIsLeftAlone",
        "testRefChain21",
        "getTempValueName",
        "ViewCSS",
        "testBreak",
        "testPrototypeInitializer",
        "expect",
        "qualifiedNameBeginsWithStripType",
        "createRecordTypeBuilder",
        "testSkipRenamingExterns",
        "CheckSideEffects",
        "addLoopedPass",
        "testInlineFunctions13",
        "readStream",
        "normalizeNodeTypes",
        "isAnonymousFunction",
        "testRemoveUnusedVars",
        "applySingletonGetter",
        "getLeastSupertype",
        "testCallSlot",
        "isThis",
        "testNoRemoveAssign5",
        "formatPreamble",
        "annotateCodingConvention",
        "firePropertyChangeImpl",
        "testWarningForPrototypeProperty",
        "makeVarDeclNode",
        "fromOrdinal",
        "removeChangeHandler",
        "testCanInlineReferenceToFunction16",
        "testCanInlineReferenceToFunctionInExpression23a",
        "testReferenceInAnonymousObject1",
        "reset",
        "ProcessLabels",
        "testWeirdnessOnLeftSideOfPrototype",
        "getMessage1",
        "replacePlaceHolders",
        "redeclareVarsInsideBranch",
        "getImplicitActionsFromArgument",
        "getObjectSlot",
        "testCollapsing",
        "hasNext",
        "testInherits8",
        "testPrefixedVariableName",
        "testExternCalls",
        "testRValueReference2",
        "testChainedVarAssignments2",
        "decodeURI",
        "LinkedFlowScope",
        "isInliningForbidden",
        "checkLabel",
        "getTypeDeprecationInfo",
        "findTokens",
        "addOptionalParams",
        "toArray",
        "testInlineFunctions22",
        "testAliasMethodsDontGetOptimize2",
        "ProcessClosurePrimitives",
        "increaseSourceCapacity",
        "isFunctionPrototypeType",
        "isMethodCallThatTriggersRemoval",
        "BASEDIGIT",
        "getContext",
        "HTMLModElement",
        "JSDocInfoBuilder",
        "UIEvent",
        "testSimpleFinally",
        "mayHaveSideEffects",
        "testPrototypePropertySetInLocalScope6",
        "testHookOperator1",
        "testSets",
        "testCanInlineReferenceToFunction41",
        "testReassignAfterRef",
        "caseUnknownType",
        "setIsSyntheticBlock",
        "reduce",
        "normalize",
        "isJSDocString",
        "testInlineConstructor1",
        "hasAnyTypeRelatedTags",
        "testCanInlineReferenceToFunctionInExpression5a",
        "testGlobalObjectNameInBooleanExpressionDepth2",
        "addSymbolUse",
        "getSuperclassTypes",
        "testInfiniteLoop",
        "rewriteDefinitionIfEligible",
        "testInlineReferenceInExpression13",
        "parseFunctionType",
        "testNoSideEffectAnnotation8",
        "Reference",
        "getCost",
        "testInference5",
        "createScript",
        "getUnresolvedReference",
        "putIntProp",
        "testGetStringValue",
        "testCanInlineReferenceToFunction20",
        "testReturnThrowingException",
        "startNewLine",
        "testUnmatchedEndMarker2",
        "getUniqueName",
        "testInlineAcrossModules",
        "testReplaceReturnConst1",
        "Denormalize",
        "getColor",
        "DiagnosticType",
        "SyntheticAst",
        "addToken",
        "testStaticLoggerMethodDefinition",
        "removeChildAfter",
        "testFunctionMovement5",
        "Definition",
        "testSetPropertyOfThis",
        "LiveVariablesAnalysis",
        "setAnnotation",
        "isBooleanValueType",
        "traverseGetElem",
        "testAssignmentToPropertyOfArrayElement",
        "testRenamingConstantProperties",
        "testManyFunctions",
        "getLineNumber",
        "testCanInlineReferenceToFunction32",
        "writeObject",
        "testShadowVariables16",
        "testInlineIntoLoops",
        "getDependencyScope",
        "testOkAssignmentOfDeprecatedProperty",
        "testRemovalOfRequires",
        "save",
        "processKeywordLiteral",
        "addRequiredParams",
        "parseModuleWrappers",
        "testMissingRequireWithAdditionalProvide",
        "caseEquality",
        "handleWhile",
        "testInsideAndBranch",
        "CrossModuleCodeMotionTest",
        "testExcerptRegionFromInexistantSource",
        "addModuleInformation",
        "testExternedPropertyNameDefinedByObjectLiteral",
        "ClosurePassAndRenameVars",
        "testInlineFunctions1",
        "recordReference",
        "BuggyVariableChanger",
        "createFunction",
        "CheckPathsBetweenNodes",
        "getTopMostDefiningType",
        "createUndefinableType",
        "getLineno",
        "createTaggedName",
        "testRenamePrototypes",
        "handleWith",
        "createConstructorTypeWithVarArgs",
        "testBreakingTryBlock",
        "testComplexNestedAssigns1",
        "shouldEmitDeprecationWarning",
        "createAliasSpecifications",
        "recordStaticNameDefinition",
        "checkOptimizationLevel",
        "testLoggerDefinedInPrototypeAndUsedInConstructor",
        "testWarningForSuperClassWithDeprecatedSubclassMethod",
        "testExposeExpression4",
        "testTwoInterfacesWithSomeInheritance",
        "testRemoveRecursiveFunction3",
        "countPropertyOccurrence",
        "recordProperty",
        "testReplaceGetter1",
        "findNonconditionalParent",
        "testDoNotCrossAssignmentPlus",
        "getTypesUnderShallowInequality",
        "traverseAdd",
        "Parser",
        "testNestedVarAssign",
        "testBadModuleDep1",
        "hasExistingFunctionDefinition",
        "OnDisk",
        "isTemplateType",
        "testExposeExpression12",
        "NodeTypeNormalizer",
        "testPrototypePropertiesAsObjLitKeys",
        "createFunctionScope",
        "testEnumKey",
        "testRemoveAssignment",
        "columnNumber",
        "extractLineno",
        "propertyName",
        "ignoreEdge",
        "testWhatCausedIeToFail",
        "testCfg",
        "testInsideOrBranchInsideIfConditional",
        "testInstanceOf1",
        "testTwoPaths",
        "testEmpty",
        "toFormatter",
        "isPrototypePropertyAssign",
        "testNoInlineMutatedVariable",
        "testDoNotRemoveOverride",
        "recordDeprecationReason",
        "testNoRemoveInherits2",
        "getContextForNoInOperator",
        "ProcessDefinesTest",
        "ensureCapacity",
        "testStableRenameSimpleExternsChanges",
        "detectImplicitPrototypeCycle",
        "testUnintendedUseOfInheritsInLocalScope2",
        "testParentChild",
        "testComplexInlineVars4",
        "String",
        "testRemoveFromLabel1",
        "assertNoEdge",
        "testReturnNotMissing",
        "testConstantPostIncremented1",
        "testComplexInlineNoResultWithParamCall3",
        "testInlineReferenceInExpression9",
        "removeFromUseIfLocal",
        "setFileOverviewJSDocInfo",
        "PrototypeSetNode",
        "testFoldReturns",
        "handleThrow",
        "testGetElemWithDashes",
        "CreateSyntheticBlocksTest",
        "testFunctionMismatch",
        "getEnumParameterType",
        "clearResolved",
        "testTopLevelClass4",
        "testIsSimpleFunction7",
        "testDefineFunction",
        "setPropertyJSDocInfo",
        "testDuplicatedVar",
        "UnionType",
        "computeEscaped",
        "testDeleteOperator1",
        "testGetPropOnUndefinedProperty",
        "testCostBasedInlining8",
        "testCanInlineReferenceToFunctionInExpression19a",
        "getDefinitionsReferencedAt",
        "testLocalAliasOfAncestor",
        "testRemoveOneOptionalExpressionAssign",
        "newUndefinedNode",
        "getFunctionValue",
        "testUnresolvedType",
        "AncestorIterable",
        "AllType",
        "flow",
        "testReferencedBleedingFunction",
        "testComplexInlineNoResultNoParamCall1",
        "getBlockExpression",
        "testRefToMethod2",
        "testOverlappingOriginalAndGeneratedNames",
        "testUncheckedWhileInDo",
        "readObject",
        "testPrototypeFieldDefinition",
        "visitGetProp",
        "getReadableJSTypeName",
        "testEnumProperty",
        "getFirstXMLToken",
        "initFunction",
        "addStrictWarning",
        "testForLoops",
        "testMissingVariable",
        "PureFunctionIdentifierTest",
        "connectIfNotFound",
        "testStringFunction",
        "updateObjLitOrFunctionDeclarationAtAssignNode",
        "testMemoization",
        "testCanInlineReferenceToFunction24",
        "testDoCrossNewVariables",
        "generateExterns",
        "addNonEmptyExpression",
        "isVoidOrUnknown",
        "getDestination",
        "ObjArray",
        "addToDebugLog",
        "LinkedFlowSlot",
        "testIncAndDec",
        "defineName",
        "testInlineConstructor3",
        "getParentNode",
        "inject",
        "testTopLevelClass2",
        "testReplaceEmptyFunction1",
        "testReferencedVarDefined2",
        "testVarAndOptionalParams",
        "testWrongNumberOfArgs",
        "testLoggerDefinedInObjectLiteral",
        "BoxObject",
        "isPrototypeProperty",
        "append",
        "testScopeDiscovery",
        "VariableMap",
        "getCompiler",
        "testAnonymousFunctionCallInlining6",
        "testTwoNamespaces",
        "HTMLTableElement",
        "testNoPrivateAccessForProperties1",
        "testExportSymbol",
        "extractClassNameIfProvide",
        "testInlineVariablesConstantsJsDocStyle",
        "doInlinesForScope",
        "testInCorrectIfReturns",
        "isNeverReassigned",
        "writeOutput",
        "assignNames",
        "BooleanOutcomePair",
        "testInferredVar",
        "isDefine",
        "testMutate8",
        "processInfixExpression",
        "testRemoveRecursiveFunction5",
        "isNoShadow",
        "testUnintendedUseOfInheritsInLocalScope3",
        "testExposeExpression9",
        "testWarningForProperty2",
        "testTypeAnnotations",
        "testExcerptInexistantRegion",
        "removeTryCatchFinally",
        "setNotAssignable",
        "testCanExposeExpression1",
        "markReference",
        "testCanInlineReferenceToFunction40",
        "testInnerFunctionsWithNamedArgumentInInnerFunction",
        "Node",
        "verify",
        "testAssignAdd",
        "TypeInfo",
        "isNameReferenced",
        "testAliasableGlobals",
        "BasicBlock",
        "testReassignAfterNonGlobalRef",
        "GearsCompleteObject",
        "testReassignWithExpr",
        "testInlineExpressions5",
        "newBleedingFunction",
        "HTMLBaseElement",
        "addChildToFront",
        "testGlobalVarSetToObjLitConditionally3",
        "AbstractCompilerRunner",
        "addFunction",
        "testOtherGlobal",
        "testInnerFunction1",
        "testExposeExpression11",
        "computeMustDef",
        "RemoveUnusedPrototypeProperties",
        "testBug1401831",
        "getParameterSlot",
        "processNewExpression",
        "testConstantPreDecremented2",
        "testSelfInline",
        "exitScope",
        "getFunctionId",
        "isTypeCheckingEnabled",
        "testDoNotRemoveNonQualifiedName",
        "testDoNotChangeReferencedInstanceOf",
        "testAnnotationInExterns1",
        "defineAndAlias",
        "hasOwnProperty",
        "testStableRenameWithPrefix1AndUnstableLocalNames",
        "getAllModules",
        "isValidEnumKey",
        "testFoldUselessWhile",
        "checkConstructorDeprecation",
        "testConstantInitializedInAnonymousNamespace2",
        "createExterns",
        "testNoWarningForGoodModuleDep1",
        "testRemoveVarDeclartion8",
        "collapseAnonymousFunctions",
        "testSplitInplaceCall",
        "maybeAddReference",
        "caseIn",
        "createSwitch",
        "setEncodedSourceBounds",
        "testNoRewritePrototypeObjectLiterals1",
        "testInvalidAnnotation1",
        "testSimpleInline",
        "testInvalidAnnotation5",
        "testNoInlineIfParametersModified3",
        "resolve",
        "isEmptyBlock",
        "getPrototypeTypes",
        "testShadowVariables10",
        "isConditional",
        "testMutateNoReturnWithResultAssignment",
        "addRead",
        "mismatch",
        "testUsedAsConditions",
        "testSideEffectClassification6",
        "addSignature",
        "getCount",
        "getGraph",
        "testNoRemovalFunction2",
        "PotentialCheck",
        "Window",
        "caseNumberType",
        "handleReturn",
        "testNameLookup",
        "testMixedQuotedAndUnquotedObjLitKeysStable",
        "isIdName",
        "testRenameMap",
        "testNoWarningsForThisConstructor",
        "createForTypes",
        "processStringLiteral",
        "toBytes",
        "getWeight",
        "ValueType",
        "testAddPropertyToObjectInLocalScopeDepth2",
        "inlinePropertyReturn",
        "testPropertyDeclarationOnRecordType",
        "makeUrlForGeneratedScript",
        "compare",
        "GreedyGraphColoring",
        "testNoRewriteNamespaceFunctions",
        "GearsWorkerPool",
        "getDebugReport",
        "SignatureStore",
        "testAliasCreatedForFunctionDepth2",
        "testArrays",
        "testStaticMethod2",
        "getParameters",
        "testLocalAlias2",
        "testInline15",
        "testMultiplyDeclaredVars1",
        "testOverlappingAdditionalProvideAtEnd",
        "getArg",
        "testCollectedCtorProperty",
        "CheckAccidentalSemicolon",
        "intersectWith",
        "report",
        "registerGroup",
        "assertLiteralAndImmutable",
        "testInsideIfBranch",
        "ConvertToDottedProperties",
        "testAnonymousFunctionCallInlining1",
        "testEmptyDeclaration",
        "testNoRemoveThrow1",
        "visitCallSite",
        "testNoArgumentRemovalNonEqualNodes",
        "testMultiUseInSameCfgNode",
        "addChildToBack",
        "testNamespacedClass3",
        "readQuotedString",
        "testStableTrickyExternedMethods",
        "testMixedModeInlining4",
        "testNoInlineNonFunction",
        "tryFoldAssign",
        "testInline3",
        "Range",
        "visitFunctionNode",
        "resolveViaProperties",
        "ElementCSSInlineStyle",
        "processParenthesizedExpression",
        "testComplex4",
        "notFunctionError",
        "testNoInlineEscapedToInnerFunction",
        "testCanInlineReferenceToFunction8",
        "testRemoveRecursiveFunction7",
        "remove",
        "testMultiplyDeclaredVars3",
        "testNonStringArgument",
        "tryFoldAdd",
        "testConstructor2",
        "getNeighborNodes",
        "CollapseVariableDeclarations",
        "collapseAssignEqualTo",
        "testStripCallsToStrippedNames",
        "canInlineReferenceToFunction",
        "testNoInlineOfNonGlobalFunction2",
        "testRemoveLabelChild2",
        "addNode",
        "JSType",
        "putProp",
        "NoType",
        "getInfo",
        "estimateSavings",
        "testCanInlineReferenceToFunction9",
        "testPrototypePropertySetInLocalScope5",
        "testIgnoreDuplicateWarningsForSingleClasses",
        "setParseJSDocDocumentation",
        "testOverrideDefinitionInSource",
        "testRValueHoisting",
        "testMissingReturn",
        "testCostBasedInliningComplex2",
        "testWhile",
        "testCanInlineReferenceToFunctionInExpression3",
        "testRewritePrototypeMethods2",
        "CanvasPattern",
        "testRemoveVarChild",
        "testDifferentBlock",
        "encodeURI",
        "getDescription",
        "testInstanceOf5",
        "testMoveExpression4",
        "testInheritanceDetection3",
        "testProtectedAccessForProperties1",
        "testThrow1",
        "testMultiplyDeclaredVars2",
        "testMultiDefinitionsInSameCfgNode",
        "testCanInlineReferenceToFunction37",
        "testGlobalObjectNameInBooleanExpressionDepth1_6",
        "getErrorMessage",
        "CollapsePropertiesTest",
        "testRefToDescendantOfUndefinedProperty2",
        "testParameter4",
        "testStaticFunctionInMethod1",
        "testInstanceOf4",
        "isStripName",
        "testGetCurrentNode",
        "testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope",
        "testDoNotCrossConstructor",
        "format",
        "testGlobalScope",
        "getObjectLiteralCast",
        "testComplexInlineVars10",
        "testUnionAndExternTypes",
        "testRhsAssign3",
        "endFunction",
        "getParameterCount",
        "TouchEvent",
        "testWarningForSubclassMethod",
        "testRenameWithExterns1",
        "assertNotEscaped",
        "createChildFlowScope",
        "testNoShadowAnnotation",
        "tryMinimizeExits",
        "testGlobal",
        "getOwnerFunction",
        "testAssignInIf",
        "setImpl",
        "testContinueNotCrossFunction",
        "testShadowedVariableInnerFunction",
        "testStableRenameWithExterns2",
        "allFlowSlots",
        "testNoInlineAliases5",
        "noProb",
        "testNoRemoveCall2",
        "newNode",
        "testThrow2",
        "testFor4",
        "isExprAssign",
        "checkInvariant",
        "isPropertyTypeInferred",
        "getAllDefines",
        "testFunctionAlias",
        "testCanInlineReferenceToFunctionInExpression12",
        "testNoInlineAliases6",
        "intersection",
        "testUnmatchedStartMarker",
        "addListener",
        "testLoop3",
        "testRemoveConstantArgument",
        "isVersionECMA1",
        "testConstructorOptArgsNotRemoved",
        "testNamespaceResetInLocalScope1",
        "testFailure",
        "getNameNode",
        "isNoTypeCheck",
        "NumberType",
        "testTwoVar",
        "PropertyGraph",
        "NormalizeAndDenormalizePass",
        "testFunctionNonMovement2",
        "testNoInlineIfParametersModified4",
        "testCanDeleteArgumentsAtAnyPosition",
        "aliasStrings",
        "mulExpr",
        "getStringFromBuffer",
        "getOptimizations",
        "CrossModuleCodeMotion",
        "testExportSimpleSymbolReservesName",
        "enableMarkNoSideEffects",
        "assertNotLiteral",
        "setErrorManager",
        "testGlobalObjectNameInBooleanExpressionDepth1_5",
        "getChildBefore",
        "testSimpleAdditionalProvideAtEnd",
        "testNoRewriteDeclUsedAsAssignmentRhs",
        "testUselessCode",
        "runCustomPasses",
        "isInThrowExpression",
        "isAssign",
        "updateFunctionDeclarationAtFunctionNode",
        "isInstanceType",
        "endBlock",
        "expr",
        "testRemoveRecursiveFunction8",
        "testApplyIsIgnore",
        "testSharedFunctionName2",
        "returnedExpression",
        "setThreadContext",
        "testNestedAssign5",
        "testBug1956277",
        "testFunctionsWithJsDoc5",
        "testObjectPropertyResetInLocalScope",
        "fullName",
        "GearsTimer",
        "assertNoError",
        "testNoInlineWithoutConstDeclaration",
        "createBreak",
        "forOldRhino",
        "getParamOrVarIndex",
        "createFunctionTypeWithVarArgs",
        "testRemoveDuplicateStatements",
        "LinkedDirectedGraphNode",
        "testDecrement",
        "testAddPropertyToUncollapsibleObjectInLocalScopeDepth2",
        "testNoSideEffectsSimple",
        "testPropertyOnUnknownSuperClass",
        "getCurrentNode",
        "checkAssignment",
        "processObjectLiteral",
        "nodeRemoved",
        "getInjector",
        "testCallFunctionThatModifiesThis",
        "getAuthors",
        "testAliasCreatedForClassDepth2_3",
        "getNoSideEffectsHookNode",
        "reusePrototypeNames",
        "ReferenceCollectingCallback",
        "addActions",
        "compareTo",
        "ContextualRenamer",
        "testExpressions3",
        "opToStr",
        "AliasExternals",
        "getTypes",
        "addEOL",
        "parseAllJsDocInfo",
        "testInlineConstantAliasWithNonConstant",
        "getZippedCodeSizeRecord",
        "getDefineReplacements",
        "testNoInlineOfDangerousProperty",
        "testShadowVariables11",
        "CompactCodePrinter",
        "isRecordType",
        "addExpr",
        "testConstructorThatModifiesThis4",
        "HTMLCanvasElement",
        "CreateSyntheticBlocks",
        "markFunctionStart",
        "setSourceName",
        "testPropertyOfObjectOfUnknownType",
        "KeyboardEvent",
        "ProcessDefinesWithInjectedNamespace",
        "parseSyntheticCode",
        "testValidBuiltInTypeRedefinition",
        "isAllType",
        "testStaticFunctionInMethod2",
        "testWarnShadowLocal2",
        "roundOff",
        "HTMLMapElement",
        "ImageData",
        "getAnnotationNames",
        "testReport",
        "maybeReplaceChildWithNumber",
        "processNumberLiteral",
        "getCallableDefinitions",
        "CheckGlobalNames",
        "testRemoveLabeledStatment2",
        "SuspiciousPropertiesCheck",
        "isClassDefiningCall",
        "stopTracer",
        "testAnonymousFunction2",
        "optimize",
        "processConditionalExpression",
        "addAllChildren",
        "getHelperSource",
        "visitAliasableNode",
        "getInstructionObserverThreshold",
        "testObjectLit",
        "Iterator",
        "testCanInlineReferenceToFunction35",
        "testRhsReference2",
        "testIndependentModules",
        "markExposedToCallOrApply",
        "TestHelper",
        "testIsLiteralOrConstValue",
        "assertVariableMapsEqual",
        "testWarningForSuperclassMethod",
        "StyleSheetList",
        "testSimpleWhile",
        "testInterface",
        "testBug1445366",
        "getFunctionNode",
        "assertMapping",
        "TypeCheckFunctionCheckTest",
        "getUses",
        "testSubPropertyAccessByVariableName",
        "extractSingleLineBlock",
        "removeSignature",
        "parse",
        "addSimplifiedExpression",
        "testAndOperators4",
        "testThreePaths",
        "isEmpty",
        "createAliasFunctionNode",
        "elements",
        "testObjectLitExtern",
        "isRValue",
        "getBasicBlock",
        "findCall",
        "handleTypeCycle",
        "coalesceVariableNames",
        "testNoWarningInGlobalScopeForCall",
        "testTwoSeparateFieldsTwoTypes",
        "CheckMissingReturnTest",
        "setSourceFile",
        "isXmlAvailable",
        "testRemoveMultiplySetAbstract",
        "testFunctionMovement7",
        "getNonEmptyChildCount",
        "typeofClassDefiningName",
        "JSSourceFile",
        "testUnions",
        "getUndirectedGraphNode",
        "assertUnreachable",
        "testDeclareInNonGlobalScope",
        "inferInheritance",
        "find",
        "testMultiplePrototypeInitializer",
        "testMaybeAddTempsForCallArguments10",
        "testSetterInForStruct4",
        "testInlineVariablesConstantsWithInlineAllStringsOn",
        "isValidDefineValue",
        "testInlineBlockMutableArgs3",
        "isStatementBlock",
        "inferParameterTypes",
        "setIsCallFunction",
        "testWarningForMethod2",
        "verifyAllReferencesInlined",
        "testFunctionToString",
        "testInlineExpressions1",
        "testAssignInNonGlobalScope",
        "assertResultString",
        "testNoMoveDeepFunctionDeclarations",
        "classDefiningCallsHaveSideEffects",
        "advanceLookAhead",
        "testWithNoInputs",
        "testSimple",
        "canMoveAggressively",
        "TokenStream",
        "testClassMovement6",
        "makeHashKeyFromPair",
        "testFoldWithMarkers1",
        "currentAncestors",
        "testAvoidingConflictsBetweenQuotedAndUnquotedPropertyNames",
        "setLineLengthThreshold",
        "testNoWarningForDeprecatedClassInstance",
        "getTypedefType",
        "testTry2",
        "testRenameMapUsingOldMap",
        "caseAndOrNotShortCircuiting",
        "testTwoRuns",
        "getLineIndex",
        "outputSourceMap",
        "NativeCallFunctionCall",
        "testShadowVariables9",
        "inlineDirectly",
        "testAssignmentWithComplexLhs4",
        "testStaticAndInstanceProperties",
        "testClassDefiningCallWithStripType4",
        "trySimplifyNewDate",
        "testInnerFunction2",
        "testRenamePropertiesWithLeadingUnderscores",
        "assertLineBreak",
        "AnalyzePrototypeProperties",
        "insideAssignmentToIdConstant",
        "addWarningsGuard",
        "transformAsString",
        "testExternFunction",
        "State",
        "getValueParent",
        "handleGetProp",
        "createName",
        "testNoRemoveThrow2",
        "testCostBasedInlining11",
        "getReferencesAt",
        "isCalled",
        "testObjectLiteralCast",
        "resolveViaRegistry",
        "isContinueStructure",
        "testMarkCalls",
        "testRefChain18",
        "testCallBeforeDefinition",
        "testMissingVarArgs",
        "createLabel",
        "testRemovalOfProvidedObjLit",
        "testModulesWithoutDependencies",
        "isStringValueType",
        "testObjectModified",
        "addMarker",
        "testInlineInFunction2",
        "maybeAddReferenceUsingMode",
        "testApply1",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope2",
        "NodeIterators",
        "testFoldBitShiftsStringCompare",
        "hasHaltingErrors",
        "AbstractNodeTypePruningCallback",
        "testCrossModuleInlining3",
        "testPassWithoutWarningsAndMultipleFiles",
        "testEmptyMethodInline",
        "testFor2",
        "GearsHttpRequestUpload",
        "assertSomeError",
        "testFunctionArityWithOptionalArgs",
        "testPropertyOnParamOfUnknownType",
        "isOptionalParameter",
        "StripCode",
        "initLineNumber",
        "testGoogProvideInWrongFileShouldCreateWarning",
        "getColumnIndex",
        "traverseAnd",
        "FunctionRecord",
        "getTwin",
        "testVarMovement6",
        "testNoSideEffectAnnotation12",
        "isOptionalArg",
        "Navigator",
        "isNoObjectType",
        "matchChar",
        "assertType",
        "testGlobalCallWithStrippedType",
        "testOneArgWithSimpleStringLiterals",
        "testPropertyAddedToFunction",
        "getAllDownEdges",
        "checkEnumInitializer",
        "testGlobalFunctionsInGraph",
        "getGlobalName",
        "testIfElse",
        "initFromContext",
        "indexOf",
        "testInsideHookConditional",
        "isAliasDefinition",
        "testBreakingBlock",
        "testQuotedPrototypeProperty",
        "testNoRewriteExternalMethods1",
        "replaceThis",
        "testRemoveLabeledStatment3",
        "DefinitionSite",
        "testNoSideEffectAnnotation16",
        "stripCode",
        "handleCase",
        "moveFunctionDeclarations",
        "testUnaryOperators3",
        "AliasSpecification",
        "visitScriptNode",
        "MyScopeCreator",
        "testInlineReferenceInExpression6",
        "testViolatedModuleDependencySkipNonStrict",
        "testCanInlineReferenceToFunction22",
        "recompute",
        "testNextedWhile",
        "canInlineReferenceAsStatementBlock",
        "flattenReferencesToCollapsibleDescendantNames",
        "testAnonymous8",
        "documentThrows",
        "isDirectCallNodeReplacementPossible",
        "TypeMismatch",
        "onSeledMutation",
        "testMixedModeInlining3",
        "testRenameLocals",
        "replaceMutator",
        "testComplexInlineVars9",
        "UseSite",
        "implicitPrototypeChainIsUnknown",
        "testNoHaltReadWhenValueIsImmutable",
        "GearsManagedResourceStore",
        "setCssRenamingMap",
        "processSetCssNameMapping",
        "testVarLiveRangeCross",
        "testNoInlineObjectLits",
        "NoRewriteMultipleDefinitionTestInput",
        "getByName",
        "getOptions",
        "addMapping",
        "matches",
        "recordPassStart",
        "testInlineConditionallyDefinedConstant1",
        "disables",
        "optimizeCallSite",
        "CodeSizeEstimatePrinter",
        "getIntForType",
        "formatNodeName",
        "testShortCircuit2",
        "getThrownTypes",
        "hasReturnType",
        "testExistingAliasDefinitionFails",
        "eatTokensUntilEOL",
        "getNeighborEdges",
        "getNamesToAlias",
        "Text",
        "tryRemoveDeadAssignments",
        "testReplaceSetter1",
        "listSeparator",
        "testReferencedVarsExternallyDefined",
        "testInline4",
        "testDoNotEnterSubscope",
        "findSwitchFromCase",
        "testNamespacedClass5",
        "testDep",
        "removePropertyChangeListener",
        "isInvalidatingType",
        "handleSwitch",
        "testIgnoresNativeObject",
        "connectToImplicitReturn",
        "getVarIndex",
        "testFunctionsWithJsDoc6",
        "inlineDeclaredConstant",
        "setLanguageVersion",
        "createParameters",
        "union",
        "testFunctionScope",
        "scanRoot",
        "InlineVariablesTest",
        "buildResultExpression",
        "AbstractScopeBuilder",
        "setSourceNode",
        "assertLineLength",
        "GatherNoSideEffectFunctions",
        "traverseAssign",
        "testInlineReferenceInExpression14",
        "testFunctionDeclarationsInModule",
        "setDouble",
        "HTMLFieldSetElement",
        "testUnaryOperators4",
        "BlackHoleErrorManager",
        "isFunctionObjectCall",
        "testFor3",
        "testIgnoreGetUniqueIdArguments",
        "testCostBasedInlining10",
        "ObjectLiteralPropertyDefinition",
        "processDefines",
        "GenerateExports",
        "isVarArgs",
        "getDirectedGraphNode",
        "getExportedVariableNames",
        "XPathResult",
        "addVariableToFunction",
        "testInlineFunctions12",
        "combine",
        "isNoType",
        "testMutateNoValueReturnWithResultAssignment",
        "testConstructorAlias",
        "testSwitchDefaultInMiddle",
        "testInlineAssignmentToConstant",
        "getInput",
        "testRemoveAnonymousFunctionName",
        "getDeclaredTypeInAnnotation",
        "getRootScope",
        "testRemoveTryCatchFinally",
        "visitReturn",
        "word0",
        "testNoRewriteIfNotInGlobalScope2",
        "VariableAssignAction",
        "testSheqDiscovery",
        "isDescriptionRecorded",
        "testExposeExpression13",
        "setBaseType",
        "testAliasCreatedForEnumDepth2_1",
        "testNamedFunction2",
        "isIndependentOf",
        "testNamespaceAnnotationInExterns2",
        "coalesceDuplicateFiles",
        "testNoRewriteNonCallReference",
        "SyntaxError",
        "setUnnormalized",
        "testFunctions1",
        "getProperty",
        "testInlineIntoLoop",
        "addString",
        "testAliasCreatedForClassDepth2_1",
        "HTMLFormElement",
        "isCallWithinLoop",
        "getExportedNames",
        "testRhsAssign1",
        "isStatement",
        "getThisAndAllDependencies",
        "testInsideOrBranch",
        "createPropertyGet",
        "testAliasCreatedForEnumDepth1_4",
        "testStatement",
        "testForEquality",
        "JsNameRefNode",
        "testNoCollapseForEachInExterns",
        "testMultipleDefinition",
        "testNoSideEffectAnnotation11",
        "identifyTypeDefAssign",
        "NamedPass",
        "printStackTrace",
        "testErrorHandling",
        "testNoSideEffectAnnotation14",
        "testPass",
        "testNestedLoops",
        "setDeprecated",
        "NameAnalyzerTest",
        "testAssignmentWithComplexLhs2",
        "recordDescription",
        "testReferenceInAnonymousObject4",
        "testConstRemovingRename2",
        "testHookIf",
        "recordSubclassPrototypePropUse",
        "testEnumRAI3",
        "testInvalidatingInterface",
        "expectSuperType",
        "handleSetFromGlobal",
        "testAddPropertyToFunctionInLocalScopeDepth1",
        "getConstructor",
        "removeUnusedProperties",
        "testRemoveWithLabels",
        "lastUint32Result",
        "testFoldBitShifts",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope5",
        "NodeFilter",
        "SourceFile",
        "getDocInfoForDeclaration",
        "testBadReadOfDeprecatedProperty",
        "newInstanceOrNull",
        "testAvoidingConflictsBetQuotedAndUnquotedPropertyNamesStable",
        "setAnnotateTypes",
        "testInnerFunctionsWithNamedArgumentInOutterFunction",
        "testGlobalAliasOfAncestor",
        "addIncrementalSourceAst",
        "definitionTypeContainsFunctionType",
        "testNoInlineBackwards",
        "printNode",
        "getReferencedType",
        "typeError2",
        "testBadModuleDep2",
        "MustBeReachingVariableDef",
        "reportGenericTypeSyntaxWarning",
        "testRemovePrototypeDefinitionsInGlobalScope2",
        "mayEffectMutableState",
        "testComplexInlineNoResultWithParamCall1",
        "getMutatorFor",
        "testFoldBitwiseOpStringCompare",
        "testNoWarningForPrototypeCopying",
        "testOverlappingAdditionalProvide",
        "checkDescendantNames",
        "MessageEvent",
        "canInlineReferenceDirectly",
        "exit",
        "testReadPropertyOfThis",
        "testFunctionAnnotation",
        "testGlobalVarSetToObjLitConditionally1",
        "testImplicitPropCall",
        "testLocalAlias6",
        "testStableRenameGlobals",
        "testRenameSimple",
        "testUnaryOpsStringCompare",
        "checkDeclaredPropertyInheritance",
        "addMethod",
        "testSplitNamedFuntionWithArgs",
        "testExportedMethodsByNamingConvention",
        "testOk",
        "enableNormalize",
        "EntityReference",
        "testCallToRedefinedFunction",
        "testRemoveRecursiveFunction1",
        "getAllDependencies",
        "testBasicMapping",
        "testCanInlineReferenceToFunctionInExpression9",
        "getArrayNotationNameFor",
        "isAddedAsNumber",
        "testComplexInline5",
        "HTMLLegendElement",
        "recordPrototypePropUse",
        "getCurrentCharIndex",
        "testNoWarningInDeprecatedClass",
        "testInline8",
        "HTMLUListElement",
        "getErrorCount",
        "testInCorrectLoopBreaksAndContinues",
        "createTryCatchFinally",
        "testPropAccessorPushedDeeper3",
        "testCanInlineReferenceToFunctionInExpression22a",
        "getSideEffectNodes",
        "MethodCompilerPass",
        "getPropertyNames",
        "strEscape",
        "testDontAlias",
        "done",
        "mutate",
        "testDoCrossVar",
        "aliasKeywords",
        "testNoAliasAnnotationForMultiVarDeclaration",
        "isLocalNameReference",
        "classifyCallSite",
        "setIntermediateState",
        "getClassOfMethod",
        "getParseJSDocDocumentation",
        "maybeCollectMember",
        "testMethodCall",
        "testVarMovement2",
        "testMaybeAddTempsForCallArguments11",
        "testAliasedFunction",
        "testComplexInlineVars5",
        "testFunctionReturnOptimization",
        "testComplexSample",
        "FunctionTypeInformationGatherer",
        "Parameter",
        "testNoWarningForDuckProperty",
        "isNodeTypeReferenced",
        "testRemoveTryChild",
        "statement",
        "testRefChain3",
        "setConstant",
        "testCorrectRecursion",
        "extractExpression",
        "testFunctionMovement4",
        "XPathNSResolver",
        "processObjectProperty",
        "testRenameWithPrefix1",
        "getSourceFile",
        "lazyInitDocumentation",
        "testLocalWriteToAncestor",
        "getImplementationVersion",
        "mustHaveXML",
        "JsDocTokenStream",
        "VoidType",
        "testBuiltInTypeDifferentNumParams2",
        "testAnnotationInExterns2",
        "testInherits5",
        "getDeepestCommonDependencyInclusive",
        "testMixin1",
        "isObjectLitKey",
        "expectCanCast",
        "FunctionToBlockMutator",
        "replaceGlobalUse",
        "estimateCodeSize",
        "isGlobalNameReference",
        "reportWarning",
        "testInlineReferenceInExpression4",
        "testInference1",
        "getReturnDescription",
        "HTMLOptionsCollection",
        "collapseReplacements",
        "checkTreeEquals",
        "addAliasNodes",
        "testInterfaceWithSupertypeImplementor",
        "addName",
        "getPreciserScopeKnowingConditionOutcome",
        "testDoubleDeclaration",
        "VariableTestCheck",
        "RenameVars",
        "getOrCreateFunctionState",
        "RecordType",
        "testNamespacedClass1",
        "getFunctionCallAssignments",
        "afterExitScope",
        "addImplementedInterface",
        "testMaybeAddTempsForCallArguments7",
        "testAssignmentToCallResultPrototype",
        "restrictByNotNullOrUndefined",
        "testUnaryOps",
        "testMaybeAddTempsForCallArguments5",
        "CSSStyleDeclaration",
        "recordImplicitCast",
        "testRefChain11",
        "HTMLImageElement",
        "isFunctionTypeDeclaration",
        "testRemovePrototypeGet2",
        "testRhsAssign7",
        "testNested",
        "createExternFunctionCall",
        "testStableRenaming",
        "TypeInferencePass",
        "clear",
        "isDeclared",
        "addFirst",
        "FunctionArgumentDefinition",
        "testFindModifiedParameters4",
        "makeTypeCheck",
        "warnings",
        "isPrivate",
        "testRedeclare",
        "testInvalidAnnotation2",
        "testStaticAndInstanceMethodWithSameName",
        "getFlowStateAtX",
        "relExpr",
        "addConstantMarkerToName",
        "testFunctionWithName",
        "onSealedMutation",
        "isFavorable",
        "testMultiDefinitionsBeforeUse",
        "getTypesUnderEquality",
        "testInOperatorNotInsideFor",
        "hasCachedValues",
        "testInlineFunctions10",
        "DocumentEvent",
        "toInstance",
        "getAllInputsFromModules",
        "testInline16",
        "handleContinue",
        "appendCharMapTo",
        "tryRemoveRepeatedStatements",
        "testGoodOverrideOfProtectedProperty",
        "testInlineExpressions11",
        "visitAssignmentOrUnaryOperatorLhs",
        "redeclare",
        "addVarArgs",
        "referenceParentNames",
        "testCanInlineReferenceToFunction28",
        "checkCompilesTo",
        "testDeepNestedBreakwithFinally",
        "getSite",
        "processFunctionCall",
        "declareTemplateTypeName",
        "HTMLTableRowElement",
        "getJSDocInfo",
        "testInline18",
        "fromBytes",
        "getModuleGraph",
        "NodeTraversal",
        "testRequireErrorCases",
        "recordNoSideEffects",
        "testNoRewriteIfNotInGlobalScope1",
        "testNoInlineArraysOrRegexps",
        "testOneSideEffectCallDoesNotRuinOthers",
        "testInlineFunctions3",
        "testAnonymous6",
        "appendOp",
        "testLiveRangeChangeWithinCfgNode2",
        "PassFactoryDelegate",
        "testExternType",
        "setSafeFnNode",
        "testStringsInModules",
        "CSSStyleSheet",
        "testLoggerDefinedStatically",
        "UnionTypeBuilder",
        "RefInfo",
        "computeUseDef",
        "canAssignTo",
        "testNoRemoveCall5",
        "WebSocket",
        "caseAllType",
        "processDoLoop",
        "testDoWhileOrder",
        "testSanityCheck",
        "getEndLineno",
        "hasInstanceType",
        "testNoClassMovement2",
        "testUnaryOperators2",
        "getProvides",
        "verifySubtypeOf",
        "expandTypesToSkip",
        "getDef",
        "testPeerAndSubpropertyOfUncollapsibleProperty",
        "testForLoopIntegration",
        "testMissingModuleDependencyDefault",
        "newNumber",
        "setAllowMemberExprAsFunctionName",
        "testGlobalThis2",
        "testShadowVariables5",
        "testIndependentStrictModuleDependencyCheck",
        "GoogleCodeRemoval",
        "lineSource",
        "HTMLHeadingElement",
        "createDirectedGraphNode",
        "FlowState",
        "testRecursiveFunction1",
        "testDivision",
        "CSSUnknownRule",
        "collapseVariableDeclarations",
        "getLanguageVersion",
        "inline",
        "testMaybeAddTempsForCallArguments24",
        "containsName",
        "testNoWarningInGlobalScope",
        "matchesObjectContext",
        "testNoInlineIfDefinitionMayNotReach",
        "newStringNode",
        "testFunctionMovement8",
        "isConstantName",
        "getBooleanOutcomePair",
        "getFunctionPrototype",
        "setSize",
        "collapseAssign",
        "markPropertyAccessCandidate",
        "forJSTypeSystem",
        "testClassMovement2",
        "setKnownConstants",
        "MaybeReachingVariableUse",
        "testRemoveForChild",
        "testPrintInOperatorInForLoop",
        "makeReference",
        "testObjLitDeclaration",
        "testClassMovement3",
        "fold",
        "testRefChain5",
        "testRemoveAdd1",
        "testHarmless",
        "newIterator",
        "testFunctionNonMovement1",
        "ObjectLiteralCast",
        "HTMLSelectElement",
        "maybeHandlePrototypePrefix",
        "testStringAdd",
        "testExternSubTypesForObject",
        "testRefChain2",
        "ChainCalls",
        "testSkipConflictingMethods",
        "testPropertyNameThatIsBothObjLitKeyAndPrototypeProperty",
        "memberExprTail",
        "setEndLineno",
        "testExported",
        "isOrdinaryFunction",
        "notePreferredLineBreak",
        "removeBlockInliningReferences",
        "stringToNumber",
        "testInlineConstructorCallsIntoLoop",
        "testNeverRemoveImplicitlyUsedProperties",
        "testStableRenameWithNameOverlap",
        "testImplicitPropCallWithArgs",
        "getBaseLineno",
        "NameInfo",
        "Comment",
        "LocalScopeBuilder",
        "testContinueToSwitchWithDefault",
        "testSubtraction",
        "CodingConventionAnnotator",
        "RemoveUnusedNames",
        "testNoInlineConstructors",
        "getNameInfoForName",
        "errors",
        "testInlineInFunction5",
        "declareVarsForObjLitValues",
        "documentParam",
        "addStubsForUndeclaredProperties",
        "getProp",
        "functionThrows",
        "testEscaped",
        "testRemoveVarGet2",
        "testAliasCreatedForEnumDepth2_2",
        "testRemovePrototypeDefinitionsInGlobalScope1",
        "testInlineAliases1",
        "getToken",
        "Document",
        "GearsOpenFileOptions",
        "testIf1",
        "rewriteCallSites",
        "keepSubTree",
        "recordVersion",
        "setHidden",
        "traverseGetProp",
        "readResolve",
        "testProtectedAccessForProperties2",
        "FlowSensitiveInlineVariables",
        "initLineSource",
        "expectObject",
        "ExportTestFunctionsTest",
        "RestrictByOneTypeOfResultVisitor",
        "CanvasGradient",
        "testAliasCreatedForObjectDepth1_3",
        "tryFoldStringJoin",
        "testCallUndefinedFunctionGivesNoWaring",
        "isIdentityFunction",
        "testRewriteSameModule1",
        "testCanInlineReferenceToFunction42",
        "readRegExp",
        "testRefChain6",
        "NoSideEffectCallEnumerator",
        "testEnumOfObjects2",
        "testCanInlineReferenceToFunctionInExpression10",
        "NameReferenceGraphConstruction",
        "testCanInlineReferenceToFunctionInExpression1",
        "testNamespacedVariables",
        "testNoSideEffectAnnotation13",
        "BooleanType",
        "testComplexInline7",
        "hasType",
        "HTMLTableCaptionElement",
        "getPositionOnStartLine",
        "testSimpleDefinitionFinder2",
        "tryRemoveAssignment",
        "PerformanceTracker",
        "testObjLitWithNonIdentifierKeys",
        "inferConcreteType",
        "processThrowStatement",
        "testChainedVarAssignments3",
        "testCostBasedInliningComplex7",
        "generatePrototypeDeclarations",
        "testUselessCodeInFor",
        "testNoRemoveAssign3",
        "tryMinimizeNot",
        "getFirstChild",
        "testNoFunction",
        "testCanInlineReferenceToFunctionInExpression22",
        "getSourceExcerpt",
        "getNextXMLToken",
        "getTypeWithProperty",
        "removeThreadLocal",
        "createAst",
        "traverseOr",
        "setLineBreak",
        "formatWarning",
        "testNoInlineOfNonGlobalFunction3",
        "matchesNumberContext",
        "testShadowVariables14",
        "testEmptyMethodInlineWithSideEffects",
        "testCostBasedInliningComplex6",
        "StringNode",
        "getKey",
        "minimize",
        "getPropertiesCount",
        "testUnknown",
        "testInline9",
        "recordTemplateTypeName",
        "testObjectPropertyInitializedLate",
        "findDeclaredNames",
        "testRefChain10",
        "testFindModifiedParameters2",
        "testWhile1",
        "visitPreOrder",
        "testRemovalRequiresRedeclaration",
        "testUnionTypeInvalidation",
        "getAlternates",
        "testWhile2",
        "MappedCodePrinter",
        "unescape",
        "testParameter",
        "readEntity",
        "testRemoveRenameFunctionStubs1",
        "testCanInlineReferenceToFunction44",
        "testWarningForBind",
        "setDefineToBooleanLiteral",
        "getErrorPrintStream",
        "caseFunctionType",
        "testNoWarningInDeprecatedClass2",
        "createIf",
        "CDATASection",
        "testReplaceEmptyFunction2",
        "generatePostProcessThrowCode",
        "removeInlinedFunctions",
        "testNoRemoveCall4",
        "setNoCheck",
        "addAfter",
        "testAddPropertyToChildOfUncollapsibleFunctionInLocalScope",
        "testWithPrefix",
        "testPartialExitPaths",
        "testRefToDescendantOfUndefinedPropertyGivesCorrectWarning",
        "testMixedModeInlining1",
        "getLValue",
        "InlineVariablesConstantsTest",
        "enables",
        "setIsClassOrEnum",
        "getEncodedSource",
        "testRemoveFromLabel2",
        "getCode",
        "testNamespaceAnnotationInExterns5",
        "getSource",
        "RestrictByTrueTypeOfResultVisitor",
        "getSourceName",
        "testMoveExpression1",
        "ExtractionInstance",
        "AstParallelizer",
        "testNoWarningInDeprecatedFunction",
        "flowsFromBottom",
        "testNestedAssign3",
        "testNoSideEffectAnnotation9",
        "testParsePrintParse",
        "getItem",
        "typeError0",
        "testFoldRegExpConstructor",
        "getFunctionCount",
        "setTaintsUnknown",
        "newSubGraph",
        "checkDeclaration",
        "testComplexAssigns",
        "testConstructorProperty",
        "testUseAndDefInSameInstruction",
        "getTokenno",
        "DocumentFragment",
        "checkCompilesToSame",
        "testNamedFunction",
        "testFlattening",
        "FindExportableNodes",
        "testConstructorThatModifiesThis2",
        "testSideEffectClassification5",
        "addNativeProperties",
        "testRemovePrototypeGet1",
        "testBadObjectLiteralCast2",
        "canNameValueChange",
        "getPrototypePropertyName",
        "verifyScopes",
        "testGlobalThis3",
        "isReferenced",
        "pushContainingFunction",
        "testComplexInlineInExpresssions1",
        "testMissingGoogProvideWithNamespace",
        "findExpressionRoot",
        "getVersion",
        "getFirstParameter",
        "testCompiledIsKnownDefine",
        "traverseEdge",
        "testSimpleIf",
        "testNamespacedDefine3",
        "isPopulatedWithFileOverview",
        "testCallPrototypeFunctionWithArgs",
        "testAnonymousFunctions",
        "hasChildren",
        "isSameClass",
        "testRemoveNamespaceGet1",
        "testBug2072343",
        "getCurrentBufferLength",
        "testNoInlineOfNonGlobalFunction4",
        "testAndParenthesesCount",
        "EnumElementType",
        "DOMImplementation",
        "testComplexInlineVars7",
        "testInline1",
        "testMinimizeCondition_example1",
        "reserveName",
        "DefaultPassConfig",
        "sanityCheckVars",
        "testConstants2",
        "clone",
        "canBeSideEffected",
        "clearNodeAnnotations",
        "propagateSideEffects",
        "getAstRoot",
        "consume",
        "DOMImplementationSource",
        "testRemoveOneOptionalMultipleCalls",
        "testInlineNeverMutateConstants",
        "getVar",
        "testCanInlineReferenceToFunction19",
        "recordReturnType",
        "FunctionParamBuilder",
        "testDoNotEnterCatch",
        "getNameIndex",
        "testThisJSDoc5",
        "getDebuggerContextData",
        "reportCodeChange",
        "testMoveMethodsInRightOrder",
        "testOverriding1",
        "parseTypeNameAnnotation",
        "testTwoIndependentVar",
        "JSModule",
        "testIsNameReferenceCount",
        "testWarnShadowLocal1",
        "isPrototypeMethodDefinition",
        "isExpressionNode",
        "isValidIdentifierName",
        "testMixin4",
        "tryMinimizeIfBlockExits",
        "startPass",
        "testRequiresAreCaughtBeforeProcessed",
        "processHook",
        "computeDependence",
        "testRefChain13",
        "isSubexpressionMovable",
        "testPrototype",
        "testComma5",
        "keepSimplifiedHookExpression",
        "getLocalVarIndex",
        "testCallWithConstArgs",
        "setPrettyPrint",
        "isVarInlineForbidden",
        "HTMLButtonElement",
        "testExposeExpression10",
        "processIllegalToken",
        "helperCanExposeExpression",
        "assertDefinesClasses",
        "getControlCharacter",
        "isPropertyTree",
        "isNumber",
        "CollapseAnonymousFunctions",
        "helperMoveExpression",
        "testRemoveOneOptionalVarAssignment",
        "push",
        "AliasStringsTest",
        "semicolonJoin",
        "testIllegalArgumentIfHookKeepNeitherBranch",
        "testStaticFunctionReferencingThis3",
        "testExposeExpression14",
        "hasBaseType",
        "completeScope",
        "Function<Pair<JSType,JSType>,Pair<JSType,JSType>>",
        "getInstanceTypeWithProperty",
        "testRenameProperties",
        "testMoveExpression10",
        "testHarmlessProcedural",
        "isExpressionTreeUnsafe",
        "testAndOperator3",
        "ExportTestFunctions",
        "testConstantRedefined2",
        "hasParsedFileOverviewDocInfo",
        "recordImplementedInterface",
        "testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit",
        "declareNameInScope",
        "getDirectedGraphNodes",
        "testExportNonexistantProperty",
        "expectCanOverride",
        "getNextSiblingOfType",
        "URIError",
        "testSupertypeWithSameField",
        "testRefToUndefinedProperty2",
        "InlineGetters",
        "testInlineMutableArgsReferencedOnce",
        "testNoInlineLoopCarriedDefinition",
        "testStableRenameWithPrefix2",
        "CSSFontFaceRule",
        "tryFoldShift",
        "visitCallNode",
        "GearsCoords",
        "testInlineEmptyFunction2",
        "getNode",
        "getNode1Id",
        "testCanInlineReferenceToFunction10",
        "testNoInlineAliases4",
        "testAnonymousFunctionOmega",
        "isInterface",
        "testAssignmentToProperty",
        "blacklistVarReferencesInTree",
        "testAssignmentToPropertyOfCallReturnValue",
        "CheckRequiresForConstructors",
        "testFoldStringLength",
        "testReturnInFinally",
        "injectNamespace",
        "handleFunctionInputs",
        "testDoNotChangeReferencedLocalScopedInstanceOf",
        "getWarnings",
        "testAssignmentToPrototype2",
        "testConstructorThatModifiesThis3",
        "replaceChild",
        "testInterfaceOfSuperclass",
        "PassConfig",
        "documentReturn",
        "outputNameMaps",
        "createDecompiler",
        "HTMLDListElement",
        "getNodeDegree",
        "createEnumType",
        "createReturn",
        "testNoSideEffectAnnotation3",
        "toSourceArray",
        "stripPrototype",
        "lastIndexOf",
        "propToString",
        "testGlobalFunctionReferenceOfThis",
        "AnonymousFunction",
        "testDoNotInlineIntoLhsOfAssign",
        "EvalError",
        "testDoLoopIECompatiblity",
        "testUnnormalizeNodeTypes",
        "testStableRenameSimpleLocalNameExterned",
        "testDependencies",
        "TestErrorReporter",
        "maybeLineBreak",
        "testComplexInline3",
        "testConstantRedefinedInLocalScope2",
        "estimateCallCost",
        "testStarStrictModuleDependencyCheck",
        "needsAliases",
        "getMainOptimizationLoop",
        "testReferencedVarDefined1",
        "testTwoArsWithVariableFirstArg",
        "testViolatedModuleDependencyDefault",
        "testEnumAlias",
        "markTwins",
        "testEnumRAI1",
        "testNoInlineOfExternMethods1",
        "testNoInlineMutableArgs1",
        "testInlineFunctions19",
        "traverseNode",
        "testNewNodesMeta",
        "getEndLine",
        "isStringWorthInlining",
        "readXmlComment",
        "testMissing",
        "testDoNotExitLoop",
        "isAliasName",
        "VerboseMessageFormatter",
        "getRoot",
        "testSetterInForStruct8",
        "argsMayHaveSideEffects",
        "setDefineToStringLiteral",
        "getNameReferenceGraph",
        "RemoveConstantExpressionsParallel",
        "createNameInformation",
        "createSwitchCaseConditionExpression",
        "testSetPropertyOfGlobalThis",
        "MoveFunctionDeclarations",
        "SymbolExport",
        "testManyFiles",
        "Preloaded",
        "Context",
        "testCanInlineReferenceToFunction7",
        "testStringsThatAreGlobalVarValues",
        "testShortCircuit1",
        "isAliased",
        "testFunctionCalls",
        "testGlobalWriteToAncestor",
        "testComplexNestedAssigns4",
        "ScriptEngine",
        "testMultilineMapping",
        "getExistingInt",
        "parseFieldType",
        "warning",
        "isAssignmentOp",
        "setIsNoSideEffectsCall",
        "maybeAddTempsForCallArguments",
        "testParameter2",
        "isDigit",
        "testLoggerMethodCallByVariableType",
        "nameAnonymousFunctions",
        "SQLResultSetRowList",
        "testRemoveVarAssignment",
        "PropertyExport",
        "toString",
        "testNoInlineStringMultipleTimesIfNotWorthwhile",
        "testContainsFunctionDeclaration",
        "testAnonymousFunctionCallInlining4",
        "testMixedModeInliningCosting3",
        "testAliasCreatedForObjectDepth1_2",
        "reportRuntimeError1",
        "GearsLocalServer",
        "acquire",
        "testRemoveLabelChild1",
        "noInline",
        "testAliasCreatedForClassDepth1_1",
        "visitParameterList",
        "Array",
        "testCorrectCode",
        "testFoldReturnResult",
        "testMultipleDeclarationError3",
        "getLine",
        "IndexedType",
        "matchesInt32Context",
        "isNodeAttached",
        "addParam",
        "testPreserveAnnotatedTryBlock",
        "isAlpha",
        "getLabelNameForFunction",
        "testInlineNeverOverrideNewValues",
        "testNullUndefined",
        "getAncestors",
        "parseHelperCode",
        "addMutatorFunction",
        "testWarningInNormalClass",
        "setWord0",
        "testLineBreak",
        "testGlobalFunctionsInGraph3",
        "forgiveUnknownNames",
        "recordOverride",
        "addRef",
        "testAssignToExtern",
        "testSelfModuleDep",
        "testNoRewriteCodingConvention",
        "testShortCircuit6",
        "setPrototypeBasedOn",
        "ProcessDefines",
        "moveExpression",
        "testNoRewriteNoReferences",
        "getDelegateRelationship",
        "assertRedeclare",
        "testRecursiveInternal1",
        "testAssignmentWithComplexLhs3",
        "testDefineWithBadValue",
        "getFn",
        "testExportSymbolAndProperties",
        "testVarMovement5",
        "position2charno",
        "testAndOr",
        "RangeException",
        "testAnnotationInExterns",
        "getEncodedSourceEnd",
        "setErrors",
        "testConstantRedefinedInLocalScopeOutOfOrder",
        "assertWarning",
        "checkKeepSimplifiedHookExpr",
        "testStaticFunction7",
        "testSetTimeout",
        "isLValue",
        "testSetterInForStruct2",
        "HTMLParamElement",
        "testCostBasedInlining5",
        "testRemoveVarDeclartion1",
        "handleExpr",
        "iterator",
        "getFunctionParameterSet",
        "parseTypeExpressionList",
        "setDescription",
        "testSideEffectClassification7",
        "firstPreciserScopeKnowingConditionOutcome",
        "sourceName",
        "getReferenceCollection",
        "dereferencePointer",
        "removeRef",
        "denormalize",
        "testInheritanceDetection1",
        "testMultiPaths",
        "maybeRecordExport",
        "testInlineExpression8",
        "testComplexNoInline1",
        "shouldExtract",
        "getMatchingTypes",
        "trimEnd",
        "testNestedAssign15",
        "CSSPageRule",
        "testInvalidAnnotation4",
        "findModifiedParameters",
        "currentParent",
        "testAliasThrowKeywordLiteral",
        "isValidDefineType",
        "tokenToString",
        "getJSType",
        "isAll",
        "tryFoldComparison",
        "isLocal",
        "testNoRemoveCall3",
        "newReportFunctionExitNode",
        "testConsumption3",
        "testReferenceInAnonymousObject5",
        "testDefinitionAfterUse",
        "testWarningForSuperclassMethod2",
        "testFoldTypeof",
        "testExportMultiple2",
        "addPropertyChangeListener",
        "FunctionVar",
        "testCostBasedInliningComplex9",
        "testObjLitDeclarationWithDuplicateKeys",
        "getDescriptionForParameter",
        "testCanInlineReferenceToFunctionInExpression4",
        "testDefineNumber",
        "eof",
        "testErr",
        "isSuperClassReference",
        "NumberNode",
        "addToSetIfLocal",
        "testPropertyOfChildFuncOfUncollapsibleObjectDepth1",
        "isNominalType",
        "removeActivationName",
        "replaceWith",
        "testRenamePrefixOfUncollapsibleProperty",
        "testAssignBeforeDeclaration1",
        "beginBlock",
        "addType",
        "testSideEffectClassification3",
        "eliminateKeysWithStripNamesFromObjLit",
        "testUnnormalized",
        "testNewFunctionNode",
        "testFindModifiedParameters1",
        "replace",
        "testMoveMethodsInRightOrder2",
        "createBlock",
        "getCurrentLineIndex",
        "endPass",
        "getModule",
        "collectAliasCandidates",
        "testUnhandledTopNode",
        "Declaration",
        "FlagUsageException",
        "getUniqueResultName",
        "CompilationLevel",
        "testStaticFunction6",
        "testPropertiesDefinedWithGetElem",
        "declarationIterator",
        "checkPropertyDeprecation",
        "getNameReferenceCount",
        "testTypeAnnotationsMember",
        "createConcreteFunction",
        "getGreatestSubtype",
        "isConstant",
        "CheckSideEffectsTest",
        "isResolved",
        "getTypesUnderShallowEquality",
        "isNamespace",
        "createConcreteInstance",
        "setImplicitPrototype",
        "TextMetrics",
        "removeDuplicateDeclarations",
        "testCanInlineReferenceToFunction33",
        "testCanInlineReferenceToFunction11",
        "getConcreteFunction",
        "JavaScriptException",
        "testBadOverrideOfProtectedProperty",
        "testReassignAfterCall",
        "testMisspelledOverride",
        "InstrumentReturns",
        "addTypeToSkip",
        "VarCheckTest",
        "testUntypedImplicitCallFromProperty",
        "getNodes",
        "CheckProvidesCallback",
        "isInstance",
        "testShadowVariables7",
        "testBug8730257",
        "testMissingProvides",
        "testObjLitAssignmentDepth4",
        "shiftExpr",
        "CheckProvides",
        "testComplexInline6",
        "shouldRename",
        "testReferredToByWindow",
        "parseParamTypeExpressionAnnotation",
        "testObjLitAssignedInTernaryExpression1",
        "getRelatedTypesOnNonUnion",
        "testRValueReference6",
        "testNamespaceResetInLocalScope2",
        "defineSlot",
        "testWarningForProperty1",
        "testGoogProvideMissingConstructorIsOkForNow",
        "testRenamePropertiesWithLeadingUnderscoresStable",
        "testCascadingInlines",
        "isSet",
        "CrossModuleMethodMotion",
        "testHook3",
        "testReturnInTry",
        "HTMLSpanElement",
        "ParallelCompilerPass",
        "maybeMarkCandidate",
        "testNestedAssign6",
        "testRemoveRenameFunctionStubs2",
        "controlRange",
        "testThisJSDoc1",
        "testInlineReferenceInExpression1",
        "getPrimitiveType",
        "declareType",
        "isLiteralValue",
        "canRenamePrototypeProperty",
        "testSkipNativeFunctionMethod",
        "testVarinIf",
        "testCanInlineReferenceToFunctionInExpression18",
        "fillSourceBuffer",
        "traverseName",
        "renameProperties",
        "testHook7",
        "createDebugger",
        "GearsProgressEvent",
        "expectNotVoid",
        "testOptArgsLast",
        "testParameterSlots",
        "testExposeExpression3",
        "replaceNode",
        "allowsUndeclaredVariables",
        "InlineFunctionsTest",
        "testClassDefiningCallWithStripType1",
        "getNodeTypeReferenceCount",
        "testCostBasedInliningComplex8",
        "testNestedDoWithBreak",
        "testInterferingInlines",
        "checkFirstModule",
        "defineProperty",
        "isNative",
        "testCorrectCatch",
        "newParameterFromNode",
        "setRemove",
        "isStringObjectType",
        "testInlineExpressions4",
        "updateSimpleDeclaration",
        "getParseJSDoc",
        "testIgnoredOps",
        "testGetFunctionName5",
        "testNoSideEffectAnnotation1",
        "getPropertyMap",
        "testIfElseVarDeclarations",
        "testNoWarningForSimpleVarModuleDep2",
        "createParameterizedType",
        "testSimpleReassign1",
        "testCallFunctionWithArgs",
        "Predicate<Node>",
        "defineInferredProperty",
        "testFold1",
        "getSimplifiedName",
        "testGlobalFunctionsInGraph5",
        "typeError1",
        "testDeadAssignment",
        "decomposeExpressions",
        "Inline",
        "recordSuperClassPrototypePropUse",
        "testDeprecatedFunctionVariable",
        "caseNoType",
        "allowsVariableRedeclaration",
        "ScriptEngineMajorVersion",
        "Image",
        "testStringJoinAdd_b1992789",
        "prep",
        "DisambiguateProperties",
        "getMessages",
        "testThisJSDoc4",
        "testInvalidProvide",
        "CreateScope",
        "NoRewriteIfNotInGlobalScopeTestInput",
        "setInstructionObserverThreshold",
        "getEnclosingFunction",
        "getNumUseInUseCfgNode",
        "testAssignmentWithComplexLhs",
        "finalizeNameAssignment",
        "processProperty",
        "lastIndexResult",
        "testFoldLogicalOpStringCompare",
        "markPureFunctionCalls",
        "testCallUndefinedMethodOnObjLitDepth2",
        "testRewriteSameModule2",
        "testVarNotImmediatelyBelowScriptOrBlock3",
        "Ref",
        "addSwitchCase",
        "testAssignmentToGetElem",
        "set",
        "testShortCircuit4",
        "getSourceMap",
        "createFunctionTypeWithNewReturnType",
        "getReverseAbstractInterpreter",
        "getFunctionMap",
        "testAppNameSetter",
        "testInnerFunctionsAfterArguments",
        "makeTypeInference",
        "createUnionType",
        "testNamespaceAnnotationInExterns4",
        "testFailWithLocalVariableInMoreThanOneFile",
        "FunctionArgumentInjector",
        "testFailWithWarningsAndMultipleFiles",
        "getModuleCount",
        "testReferenceInAnonymousObject0",
        "exportTestFunction",
        "getNativeType",
        "createFromTypeNodes",
        "testAnonymousFunctionCallInlining8",
        "testNoInlineGetProp3",
        "getLabelInfo",
        "shouldPreserveTry",
        "setRewriteNewDateGoogNow",
        "NullType",
        "testConstructor1",
        "prompt",
        "isInterfaceRecorded",
        "testTopLevelClass3",
        "removeConstantMarkerFromName",
        "lookupNewName",
        "next",
        "testMultipleVar2",
        "hasConditionalAncestor",
        "testIf3",
        "testFunctionPropertySetToObjLitConditionally",
        "testConstantPreDecremented1",
        "testComplex2",
        "testRecognizeGetCssName",
        "testDoNotEnterFinally",
        "visitName",
        "testBasicMismatch",
        "testGlobalFunctionsInGraph6",
        "primaryExpr",
        "getOriginalNameToNewNameMap",
        "getRelated",
        "initForExternRoot",
        "getRewrittenMethodName",
        "Property",
        "getGraphvizNodes",
        "appendVarArgsString",
        "getJoinedFlowScope",
        "testNoWarn",
        "inlineNonConstants",
        "getRegexpString",
        "testClassDefiningCallWithStripType6",
        "testObjLitAssignedToMultipleNames2",
        "okToRenameVar",
        "testMinimizeExpr",
        "MarkNoSideEffectCallsTest",
        "testInlineFunctions21",
        "setVisibility",
        "testBreakOptimization",
        "getControlFlowGraph",
        "testStraightLine",
        "normalizeJsDocAnnotations",
        "SimpleSlot",
        "compileInternal",
        "testIgnorePrivatelyAnnotatedConstructor",
        "GraphAnnotationState",
        "ProcessingInstruction",
        "GearsProgressObject",
        "hasDescriptionForParameter",
        "traverse",
        "isDateType",
        "isBreakTarget",
        "ClosureReverseAbstractInterpreter",
        "isBlockBoundary",
        "testComplex3",
        "testAnalyzePrototypeProperties",
        "getGeneratedExterns",
        "testRhsAssign5",
        "testInferredProperty",
        "ReportCodeHasChangedListener",
        "isHidden",
        "testClassDefiningCallWithStripType3",
        "getSideEffectsAndNode",
        "testShadowVariables13",
        "setReferencedType",
        "testIncorrectAttemptToAccessQuotedProperty",
        "ProvidedNode",
        "cost",
        "CombinedCompilerPass",
        "helperCanInlineReferenceToFunction",
        "testMergeDefinitions",
        "getDeepestCommonDependency",
        "DataFlowAnalysis",
        "testShortCircuitingOr",
        "getTypeAnnotation",
        "testRemoveVarDeclartion6",
        "Error",
        "testSimpleVar",
        "setVarArgs",
        "testDoNotCrossFunctionCalls",
        "removeVarDeclaration",
        "isAllowMemberExprAsFunctionName",
        "DotFormatter",
        "testNotAFunction",
        "extractCharno",
        "PassConfigDelegate",
        "getDirectedPredNodes",
        "ControlFlowGraph",
        "testOverlappingInlineFunctions",
        "isUnionType",
        "testRemoveInstanceOfWithReferencedMethod",
        "setWarnings",
        "recordInterface",
        "argumentList",
        "testAssignmentToExternPrototype",
        "disconnectInDirection",
        "testRedeclaration1",
        "StringInfo",
        "testFunctionsWithJsDoc1",
        "parseTypeExpression",
        "makeError",
        "isKeyword",
        "testFooPrototypeBar",
        "testInline6",
        "addCaseBody",
        "getRegexpFlags",
        "isActivationNeeded",
        "testAnonymousFunctionInlining1",
        "testNewNodesMetaTraditionalFunctionForm",
        "testDefineWithDependentValue",
        "MakeDeclaredNamesUnique",
        "testPropertyWithEmptyStringKey",
        "testIsSimpleFunction1",
        "testVarMovement3",
        "GearsBlobBuilder",
        "NamedFunction",
        "enterScopeIfActive",
        "Visitor<JSType>",
        "retrieveAndResetParsedJSDocInfo",
        "testError",
        "PrototypeMemberDeclaration",
        "testConstructor3",
        "getMap",
        "XPathException",
        "setTypedefType",
        "testVar",
        "jsString",
        "assertAllLoopablePasses",
        "testInlineGlobal",
        "reportTypeSyntaxWarning",
        "testAliasCreatedForFunctionDepth1_1",
        "hasParameterType",
        "populateDefaults",
        "getBooleanProp",
        "setOutputTypes",
        "testNoInlineIntoNamedFunction",
        "applySafeCompilationOptions",
        "cloneAndReclassify",
        "isFunctionAnonymous",
        "hasOwnDeclaredProperty",
        "discoverBackEdges",
        "assertMutableState",
        "testDoubleDeclaration2",
        "testInlineConstantAliasWithAnnotation",
        "testRefToPropertyOfAliasedName",
        "checkNamespaces",
        "testNoShadowAnnotationInExterns1",
        "reusePreviouslyUsedVariableMap",
        "testGetPrototypeProperty",
        "testThis",
        "testEmptyMethodInlineInAssign2",
        "shouldColorizeErrorOutput",
        "variables",
        "testSplitAnonFuntion",
        "testExtractingTwoClassPrototype",
        "isGlobalScope",
        "getElements",
        "testTypePrefix",
        "generateStackTrace",
        "testEscapedLiveness",
        "registerTypeImplementingInterface",
        "createOptionalNullableType",
        "testEnumRAI4",
        "xor",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope4",
        "getBlockReturnExpression",
        "testHaltAtVarRef",
        "isJSLineTerminator",
        "tryFoldRegularExpressionConstructor",
        "testPrototypePropertySetInLocalScope2",
        "isTypeToSkip",
        "isDeprecated",
        "testNoRewriteMultipleDefinition3",
        "createEntryLattice",
        "makeForwardSlashBracketSafe",
        "extractMultilineTextualBlock",
        "getCharacterIndex",
        "getContextForNonEmptyExpression",
        "resolveInlineConflictsForFunction",
        "testModulesWithDependencies",
        "getResults",
        "testNoPrivateAccessForProperties7",
        "isImmutableAndWellDefinedVariable",
        "markAllParametersEscaped",
        "isExpressBlock",
        "markReferencedVar",
        "testSimpleAdditionalProvide",
        "testObjLitAssignedToMultipleNames1",
        "testDuplicateVar",
        "testInlineFunctions25",
        "testTypedExterns",
        "CallSite",
        "isValidOptimizationLevel",
        "insideFunction",
        "testPassWithLocalFunctions",
        "getLastSibling",
        "testRefChain20",
        "testNoShadowAnnotationInExterns2",
        "testTwoModules",
        "nameEndsWithFieldNameToStrip",
        "explicitReturnExpected",
        "isStaticNameReference",
        "PhaseOptimizer",
        "testCanInlineReferenceToFunctionInExpression10a",
        "referencesThis",
        "testExternedPropertyName",
        "inFunction",
        "testScopeRootNode",
        "isCheckedUnknownType",
        "TypeValidatorTest",
        "testRemoveOneOptionalNamedFunction",
        "testCanInlineReferenceToFunction17",
        "TypeInference",
        "tryEliminateOptionalArgs",
        "JS_dtobasestr",
        "testComma",
        "testIf5",
        "reportMissingProperties",
        "testInference4",
        "testPropMutatorPushedDeeper",
        "mapToString",
        "testMethod3",
        "testGetElem1",
        "TypedCodeGenerator",
        "testMultiUse",
        "traverseCall",
        "reportError",
        "extractDeclaration",
        "testRenameWithPrefix3",
        "disableThreads",
        "getRequires",
        "getLastCompiler",
        "isValidLanguageVersion",
        "EventTarget",
        "testAliasCreatedForClassDepth1_3",
        "isSimpleName",
        "testFoldAssignments",
        "testNamespaceResetInGlobalScope1",
        "Var",
        "testBug2062487",
        "testSideEffectClassification4",
        "testInlineConstantAlias",
        "Option",
        "testReferenceInAnonymousObject3",
        "undefCallError",
        "JSError",
        "testAdd2",
        "processExpressionStatement",
        "Number",
        "getFuncChild",
        "testRhsAssign4",
        "checkDefinitionsInExterns",
        "HTMLOptGroupElement",
        "getCharno",
        "removeUnusedSymbols",
        "testCatch",
        "generateSourceMap",
        "setFunctionName",
        "replaceProvide",
        "testAnonymousFunctionCallInlining3",
        "testExitTry",
        "getPropertyName",
        "createOptionalType",
        "testConstructorThatModifiesGlobal2",
        "testMaybeAddTempsForCallArguments21",
        "testLiteralMappings",
        "setTypedPercent",
        "peekChar",
        "getWarningsGuard",
        "Counter",
        "testShortCircuitingAnd2",
        "testEmptyVar",
        "LabelInfo",
        "TemplateType",
        "load",
        "getExportedPath",
        "getReferencesInternal",
        "isString",
        "setSanityCheck",
        "testNestedAssign",
        "createUnary",
        "notifyCompiler",
        "getStringValue",
        "toStringTreeHelper",
        "testParameter3",
        "setConstructor",
        "InstrumentFunctions",
        "tryFoldLeftChildAdd",
        "testConstructorAnnotationInExterns1",
        "attributeAccess",
        "BranchedForwardDataFlowAnalysis",
        "AmbiguatePropertiesTest",
        "CSSProperties",
        "setType",
        "CheckMissingGetCssName",
        "testStripVarsInitializedFromStrippedNames",
        "processCatchClause",
        "testRhsReference3",
        "getChildAtIndex",
        "testGlobalObjectNameInBooleanExpressionDepth3",
        "findRootOrCreateNode",
        "hasOverridenNativeProperty",
        "testDoNotExitConditional",
        "caseEnumElementType",
        "testCanInlineReferenceToFunctionInExpression21",
        "fromMap",
        "testProvidedDeclaredFunctionError",
        "getOut",
        "computeVariableNamesInterferenceGraph",
        "testObjLitWithQuotedKeyThatDoesNotGetRead",
        "assertNodeOrder",
        "NoRewriteDeclarationUsedAsRValue",
        "inlineConstReturn",
        "isExport",
        "getHtmlReport",
        "testNoInlineAliases",
        "testFunctionArgRemoval",
        "isSealed",
        "printSourceNumber",
        "testNoInlineRegExpLits",
        "testFoldLogicalOp",
        "canMoveModerately",
        "addDeps",
        "disabled",
        "FunctionlessLocalScope",
        "xmlInitializer",
        "JS_dtoa",
        "testAssignmentInExpressions",
        "testAssumption",
        "testReadPropertySetByGeneratedCode",
        "assertTypeAnnotations",
        "testNotReachingDefinitions",
        "testLongStableAliasHashCollision",
        "AliasStrings",
        "testPropertyDeclarationOnInstanceType",
        "handleStmt",
        "caseAndOrMaybeShortCircuiting",
        "areValidRegexpFlags",
        "testInlineExpressions2",
        "replaceReturns",
        "testRecursiveExternal2",
        "testTwiceDefinedGlobalNameDepth2",
        "assertSideEffect",
        "testNoRemovalFunction1",
        "testGlobalFunctionsInGraph2",
        "flowThrough",
        "maybeProcessDeclaration",
        "testAddPropertyToObjectInLocalScopeDepth1",
        "caseBooleanType",
        "FunctionCall",
        "getChar",
        "testWarningForDeprecatedClass",
        "InstrumentFunctionsTest",
        "DelegateRelationship",
        "isEmptyType",
        "canRenameObjLitProperty",
        "expectActualObject",
        "has",
        "testDoNotCrossAssignment",
        "isVarArgsParameter",
        "isSpecialProperty",
        "testCanInlineReferenceToFunction27",
        "getDependentModule",
        "ContextualRenameInverter",
        "getAllImplementedInterfaces",
        "getBlockVar",
        "createOptionalParameters",
        "testMultipleDefinitionsWithDependence",
        "isStrictMode",
        "peekToken",
        "getParamType",
        "GearsFile",
        "setGeneratingSource",
        "expectSwitchMatchesCase",
        "maybeCutLine",
        "endCaseBody",
        "testExterns",
        "testInlineFunctions6",
        "ExceptionCode",
        "RhinoException",
        "setImplicitCast",
        "compileAndCheck",
        "appendBlockEnd",
        "testFoldConditionalVarDeclaration",
        "testGetFunctionName2",
        "testAnalyzeUnusedPrototypeProperties2",
        "testMakeLocalNamesUniqueWithContext2",
        "isSyntheticBlock",
        "testRenameWithExterns2",
        "traverseShortCircuitingBinOp",
        "containsFunctionDeclaration",
        "ModuleTestInput",
        "rewriteCallExpression",
        "addWarning",
        "testGlobalAliasPushedDeeper",
        "testExtractingPrototypeWithNestedMembers",
        "testInlineReferenceInExpression7",
        "assertUpEdge",
        "getMessage",
        "testArrayAssignments",
        "DocumentRange",
        "renameLabels",
        "testBreakCrossFunctionInFor",
        "testCanInlineReferenceToFunction31",
        "MimeType",
        "testPrototypePropertiesAsObjLitKeysStable",
        "testRemoveRecursiveFunction9",
        "isSwitchCase",
        "testNotMissing",
        "consumeToken",
        "testMultipleProvides",
        "testStubsInExterns2",
        "testComplexInlineInExpresssions5",
        "setParseJSDoc",
        "isWellDefined",
        "FunctionType",
        "RemoveTryCatch",
        "visitBreakOrContinue",
        "testCollapseForEachWithoutExterns",
        "testCanInlineReferenceToFunction29",
        "testInterweaved",
        "testCanInlineReferenceToFunctionInExpression2",
        "getSymbol",
        "testConstantRedefinedInLocalScope1",
        "caseInstanceOf",
        "testExportToNonStringDoesntExplode",
        "testArgumentRefOnNamedParameter",
        "setExport",
        "NamedFunctionDefinition",
        "ControlFlowAnalysis",
        "testRewriteSingleDefinition2",
        "getContextNode",
        "ensurePropertyDefined",
        "checkMarkedCalls",
        "firePropertyChange",
        "testNotCond",
        "scheduleRenaming",
        "NoRewritePrototypeObjectLiteralsTestInput",
        "testNoRemovePrototypeDefinitionsOutsideGlobalScope1",
        "getCrossModuleIdGenerator",
        "and",
        "testExtern",
        "setGenerateDebugInfo",
        "InlineFunctions",
        "SanityCheckTest",
        "testComplexInlineVars2",
        "shouldVisit",
        "getMaxArguments",
        "testStubsInExterns3",
        "testIncorrectSimple",
        "createContinue",
        "testClosureParameterTypesWithoutJSDoc",
        "testInheritanceDetection4",
        "testShadowVariables12",
        "appendTo",
        "testFunctionDeclaration",
        "CodeGenerator",
        "testTwoTypesTwoVar",
        "testComplexInlineVars11",
        "testFunctionDeclarations",
        "testRemoveVarDeclartion4",
        "isCallable",
        "setPrototype",
        "findFunction",
        "getThreadLocal",
        "getStringReport",
        "getNameForObjLitKey",
        "InlineGettersTest",
        "ObjectPropertyStringPostprocess",
        "details",
        "testShouldWarnWhenInstantiatingGlobalClassesFromGlobalScope",
        "testFunctionSafariCompatiblity",
        "Database",
        "current",
        "testComplexInlineNoResultNoParamCall2",
        "testRefChain23",
        "testTry3",
        "testFunctionArgumentsInExterns",
        "testCatch2",
        "testDoNotOptimizeConstructorWhenArgumentsAreNotEqual",
        "GlobalScopeBuilder",
        "isLhs",
        "createEmptyPass",
        "CoalesceVariableNames",
        "testInvalidFunctionDecl1",
        "DocumentType",
        "getDeprecationReason",
        "testMultiConditions",
        "StripCodeTest",
        "isOverride",
        "runInCompilerThread",
        "testNullablePrivateProperty",
        "assuming",
        "testObjectLiteralInLocalScope",
        "outputStringUsage",
        "parseUnionType",
        "getIntProp",
        "checkCall",
        "compileModules",
        "testInlineExpressions13",
        "CheckAccessControlsTest",
        "getParent",
        "testProtectedAccessForProperties5",
        "testExportSymbolAndConstantProperties",
        "traverseWithScope",
        "isSingleton",
        "getFunctionName",
        "escapeString",
        "testGlobalObjectNameInBooleanExpressionDepth1_1",
        "computeFunctionNames",
        "testNonWellformedAlias1",
        "testConditional",
        "getLastChild",
        "testBug2099540",
        "getInputs",
        "parseTypeExpressionAnnotation",
        "testReferenceInAnonymousObject2",
        "testConstructorAnnotationInExterns2",
        "testCanInlineReferenceToFunction5",
        "testExprExploitation",
        "MediaList",
        "toFunction",
        "scanNewNodes",
        "testZeroArguments",
        "ComplexKey",
        "getSynthesizedExternsRoot",
        "getNoSideEffectsAndNode",
        "testAliasCreatedForEnumDepth1_1",
        "GearsBlob",
        "isGet",
        "testLoops",
        "newVarNode",
        "isObject",
        "traverseObjectLiteral",
        "removeProp",
        "Location",
        "testLegalVarReferenceBetweenModules",
        "testPublicPropertyAssignment",
        "precedence",
        "containsCall",
        "maybeAliasNamesOnAssign",
        "getRemainingJSDocLine",
        "convertLastReturnToStatement",
        "testFindModifiedParameters5",
        "initCause",
        "StrictModeCheck",
        "testHooks",
        "testTwoRequiredSixthVarArgReferenced",
        "testFoldUselessDo",
        "hasNonLocalSideEffect",
        "RemovableAssignment",
        "setOverride",
        "addGuard",
        "generatePrototypeDeclaration",
        "setThisType",
        "NamedNodeMap",
        "testAmbiguousElseClauses",
        "testContainsUnicodeEscape",
        "aliasAndInlineArguments",
        "testKnownWhileLoop",
        "addAssignmentDeclaration",
        "skipEOLs",
        "testMoveExpression6",
        "SimpleDefinitionEnumerator",
        "getDefinition",
        "testDeclaration",
        "initScript",
        "SyntacticScopeCreator",
        "MinimizeExitPoints",
        "testNoInlineLValue",
        "handlePropertyExport",
        "isReference",
        "testMutateInitializeUninitializedVars2",
        "handleCatch",
        "addGlobalUseOfSymbol",
        "getUndirectedGraphNodes",
        "testGlobalObjectNameInBooleanExpressionDepth1_3",
        "NoRewriteNestedFunctionTestInput",
        "testRemoveInstanceOfOnly",
        "RangeError",
        "transform",
        "getInputName",
        "markName",
        "isNoSideEffects",
        "testPrototypePropertiesStable",
        "precheck",
        "replaceStringWithAliasName",
        "setNoAlias",
        "inlineValue",
        "testInline14",
        "generateExtractedDeclarations",
        "CheckUnreachableCode",
        "getDependencies",
        "testConstantProperties",
        "testSwitch3",
        "overrideDefines",
        "testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope",
        "isContinueTarget",
        "testMutateWithParameters1",
        "getOwnPropertyJSDocInfo",
        "caseVoidType",
        "getScope",
        "testFoldNot",
        "testShadowVariables18",
        "testStableSimple1",
        "testDefineAssignmentInLoop",
        "MouseEvent",
        "testSuperInterface",
        "testNestedFor",
        "setDefineToDoubleLiteral",
        "handleGet",
        "ComposeWarningsGuard",
        "testRemoveVarGet1",
        "testCatchStatement",
        "DeadAssignmentsEliminationTest",
        "testPropertyDefinedInGlobalScope",
        "AnalyzeNameReferences",
        "testNoInlineOutOfBranch",
        "testLocalAlias7",
        "recordHiddenness",
        "MethodCheckTest",
        "testOneFunction",
        "handleObjectLit",
        "isUnscopedQualifiedName",
        "getParametersNode",
        "testConstantRedefined1",
        "testRemoveDo",
        "clearContextForNoInOperator",
        "testContinueToSwitchWithTwoCases",
        "maybeProvidePrefixes",
        "differsFrom",
        "stringToKeyword",
        "testNoInlineOfExternMethods3",
        "testDependentStrictModuleDependencyCheck",
        "testNoRewriteMultipleDefinition1",
        "testValidFunctionExpr",
        "Candidate",
        "calculateReferences",
        "testAssignNoFunction",
        "hasCodeChanged",
        "or",
        "doRun",
        "getOrCreateName",
        "SQLTransaction",
        "testInline10",
        "isPropertyTestFunction",
        "testChainedAssignment",
        "testLocalFunctionOrder",
        "testReplaceSetter3",
        "isNone",
        "registerNativeType",
        "testMethodsFromExternsFileNotExported",
        "newFunctionNode",
        "testInlineExpression10",
        "testInlineIntoTryCatch",
        "MethodCheck",
        "HTMLInputElement",
        "testPassWithOneNew",
        "consumesDanglingElse",
        "setDestination",
        "isGeneratingDebug",
        "getCodeSizeRecord",
        "forNewRhino",
        "getImplementedInterfaceCount",
        "parseParametersType",
        "traverseAtScope",
        "testNoSideEffectAnnotation15",
        "testSamePropertyNameQuotedAndUnquoted",
        "doesFunctionMeetMinimumRequirements",
        "setSourceMap",
        "testFunctionMovement1",
        "testFunctionWithReferenceToArgumentsShouldNotBeOptimize",
        "removeChildren",
        "unregisterListener",
        "findParentOfFuncDescendant",
        "testNoWarnShadowGlobal",
        "testScopes",
        "processSwitchStatement",
        "nameObjectLiteralMethods",
        "testProvideErrorCases",
        "testSideEffectClassification1",
        "Notation",
        "testNestedAssign7",
        "PrototypeObjectType",
        "isControlStructureCodeBlock",
        "testRewriteImplementedMethod",
        "testHaltAtVarRef3",
        "processProvideFromPreviousPass",
        "testComplexInlineVars1",
        "getTypeRegistry",
        "testNamespaceResetInGlobalScope2",
        "formatNodePosition",
        "testGeneratePseudoNames",
        "applySubclassRelationship",
        "ClipboardData",
        "HTMLScriptElement",
        "testSkipNativeObjectMethod",
        "createLeaf",
        "testInlineFunctions8",
        "testHook5",
        "canTestForShallowEqualityWith",
        "getTypeValidator",
        "getNeighborNodesIterator",
        "fixUnitializedVarDeclarations",
        "removeByName",
        "isConstructor",
        "testRedefinitionUsingItself",
        "LinkedDirectedGraphEdge",
        "isSubGroup",
        "testSetQuotedPropertyOfThis",
        "createPass",
        "testIgnoreAssignmentsToIdConstant",
        "getPassConfig",
        "isDirected",
        "ExternFunctionCall",
        "ReductionGatherer",
        "hasOptionalOrVarArgs",
        "testSwitch2",
        "testMissingGoogProvide",
        "Attr",
        "ExpressionDecomposer",
        "testGoldenOutput2",
        "testPrototypeInit",
        "areSafeFlagsToFold",
        "setFn",
        "createNewFunctionLevelAstParallelizer",
        "appendFileMapTo",
        "testInlineSameVariableInStraightLine",
        "testStatementRestriction",
        "testNoRemoveVar1",
        "testGetElem",
        "defineDelegateProxyProperties",
        "testIndividualPasses",
        "EvaluatorException",
        "parseArrayType",
        "testMissingGetCssName",
        "init",
        "badWrite",
        "setPositionInformation",
        "testPartialTraversalOfScope",
        "getParamAndVarCount",
        "testInline2",
        "testReferencedPrototypeProperty",
        "exposeExpression",
        "isConditionalOp",
        "AnonymousFunctionDefinition",
        "testFoldOneChildBlocks",
        "testReturnSlot",
        "ParameterizedType",
        "testPropertyAddedToObjectStable",
        "hasChild",
        "newExternInput",
        "testClassDefiningCallWithStripType5",
        "maybeEliminateAssignmentByLvalueName",
        "testPrototypePropertySetInLocalScope7",
        "visitVar",
        "dump",
        "NodeList",
        "testDeprecatedObjLitKey",
        "setColorize",
        "testUnexpectedException",
        "MustDef",
        "recordStaticNameUse",
        "tryFoldGetElem",
        "collapseDeclarationOfNameAndDescendants",
        "getFunctions",
        "createRegExp",
        "testStringLiteralExpectedError",
        "updateScopeForTypeChange",
        "testAnonymousFunction",
        "testCallPrototypeFunction",
        "testMultiUseInTwoDifferentPath",
        "parseExpectedJs",
        "ambiguateProperties",
        "recordSuppressions",
        "testHook6",
        "checkPropertyVisibility",
        "testRecursiveObjectLiteral",
        "buildCharacterMappings",
        "visitInterfaceGetprop",
        "getAdditionalReplacements",
        "assertEntered",
        "FunctionRewriter",
        "createCfg",
        "InferJSDocInfo",
        "getRValue",
        "markTypeNode",
        "testAllPropertyReference",
        "getInt",
        "EventListener",
        "parseInputs",
        "testAnonymousFunctionCallInlining2",
        "testInlineReferenceInExpression5",
        "testMultipleDeclarationError1",
        "testComma3",
        "isNew",
        "defineDeclaredProperty",
        "RenamePrototypes",
        "testAddMethodsPrototypeTwoWays",
        "incrementGeneration",
        "checkObjectLiteral",
        "setIdGenerators",
        "getParameterType",
        "HTMLAppletElement",
        "testUnmatchedEndMarker1",
        "getTypeOfThis",
        "testFunctionMovement6",
        "testNoInlineMutableArgs4",
        "getChecks",
        "pow5mult",
        "createFor",
        "PropertyGraphNode",
        "testNoInlineIfParametersModified1",
        "testMayHaveSideEffects",
        "testAssignmentToPrototype5",
        "CheckAccessControls",
        "testPropertyDefinedInBranch",
        "hasCompileFunctionsWithDynamicScope",
        "enableTypeCheck",
        "testOrOperator1",
        "testRecursiveFunction",
        "testGlobalObjectDeclaredToPreserveItsPreviousValue1",
        "testAnonymous2",
        "testHook2",
        "isCollapsibleValue",
        "isSimpleFunctionObjectCall",
        "testContainsType",
        "identifyTypeDeclarationCall",
        "helperExposeExpression",
        "hasCatchHandler",
        "createBinary",
        "NodeNameExtractor",
        "HTMLBRElement",
        "testConstructorThatModifiesThis1",
        "function",
        "ConstCheckTest",
        "testIgnorePrivateConstructor",
        "testInference3",
        "testConsumption2",
        "testRemovalMultipleAssignmentInIf4",
        "testFunctionsWithJsDoc4",
        "testNoWarningInDeprecatedStaticMethod",
        "testTypedStubsInExterns",
        "RemoveUnusedVars",
        "declareThrows",
        "testArgumentsArray",
        "setNewName",
        "testInstrument",
        "testLocalAliasOfFunction",
        "getLoopCodeBlock",
        "makeAssignmentExprNode",
        "testNoRemoval",
        "getReferencesThis",
        "simplifyShortCircuitBranch",
        "onEmptyStackTopRead",
        "testClassDefiningCallWithStripType2",
        "getScriptNode",
        "externExports",
        "throwUnexpectedException",
        "addChildAfter",
        "JSModuleGraph",
        "testShadowVariables4",
        "testImplicitCallFromPropertyOfUnion",
        "testPropAccessorPushedDeeper2",
        "testObjectLiteralTraversal",
        "testIllegalArgumentIfNoSideEffectAndOr",
        "getIgnoreDynamicScope",
        "checkPrefix",
        "HTMLOListElement",
        "getOptimizationLevel",
        "testAddPropertyToUncollapsibleObjectInLocalScopeDepth1",
        "testAnalyzeUnusedPrototypeProperties",
        "FoldConstants",
        "seal",
        "ScriptOrFnNode",
        "recordThisType",
        "testTypeAnnotationsImplements",
        "ConcreteTypeSystem",
        "testCombined",
        "testComplexInlineInExpresssions3",
        "createLoggerInstance",
        "getPossibleToBooleanOutcomes",
        "getEncodedSourceStart",
        "testNewDateGoogNowSimplification",
        "testCanInlineReferenceToFunction3",
        "testLocalAlias4",
        "testReadPropertyOfGlobalThis",
        "testGetFunctionName4",
        "createStringTests",
        "testInstanceOf2",
        "testDoNotConvert",
        "testExpressions1",
        "testNamespacedClass4",
        "ExternalNameOnlyDefinition",
        "createEdge",
        "testIgnoreUnknownType",
        "HTMLIsIndexElement",
        "insideGetCssNameCall",
        "isLive",
        "tryMinimizeIf",
        "setUnknown",
        "testReplaceSetter2",
        "recordThrowType",
        "testShortCircuit8",
        "testTwoRequiredTwoOptionalSixthVarArgReferenced",
        "testGlobalVarSetToObjLitConditionally1b",
        "testFoldLiteralConstructors",
        "testAnonymousFunctionCallInlining10",
        "testFooBar",
        "GearsPositionError",
        "recordBlockDescription",
        "testRefChain22",
        "testMaybeAddTempsForCallArguments1",
        "checkForStateChangeHelper",
        "testShadowVariables3",
        "maybeColorize",
        "testInline5",
        "recordInterfaces",
        "testPropGetInsideAnObjLit",
        "testCanInlineReferenceToFunctionInExpression8",
        "testComplexNoVarSub",
        "testUnreferencedBleedingFunction",
        "getSlot",
        "testCorrectRedeclare",
        "testBadRead",
        "MemoizedScopeCreator",
        "setWarningLevel",
        "ScriptEngineBuildVersion",
        "getRegion",
        "getBooleanOutcomes",
        "assignExpr",
        "addError",
        "testRhsAssign6",
        "testSetPropertyReferencedByGeneratedCode",
        "testOneRequired",
        "getBooleanValue",
        "testMixin6",
        "testRewriteSameModule3",
        "UndoConstantRenaming",
        "checkResults",
        "getFileOverview",
        "testSortInputs",
        "hasUnknownSupertype",
        "isConstructorRecorded",
        "isEmptyFunction",
        "get",
        "testRefToUndefinedProperty1",
        "testComplicatedFinally2",
        "getReturnSlot",
        "markText",
        "GenerateExportsTest",
        "FunctionTypeBuilderTest",
        "setSummaryDetailLevel",
        "inlineAliases",
        "getPropertySlot",
        "testPropMutatorNotPushedDeeper",
        "testRewritePrototypeMethods1",
        "JSTypeSystem",
        "reportRuntimeError2",
        "testAliasCreatedForFunctionDepth1_2",
        "doPercentTypedAccounting",
        "checkForTypedef",
        "testRefChain12",
        "testPropAccessorNotPushedDeeper",
        "testMutateValueReturnWithResultAssignment",
        "testNoInlineMutableArgs3",
        "testMakeLocalNamesUnique",
        "isPropertyAssignmentInExpression",
        "testRemoveLabeledStatment4",
        "testLiteralProperty",
        "testTry1",
        "readReader",
        "canRemove",
        "testBug1897706",
        "testNoInlineIfParametersModified9",
        "testReachableTryCatchFinally",
        "nextUniqueNameId",
        "getNode2Id",
        "getAnnotateTypes",
        "testAbbreviatedBitAssignment2",
        "testNoInlineAliases7",
        "testGetNodeTypeReferenceCount",
        "testPropertyAddedToObject",
        "visitOrMaybeActivate",
        "enter",
        "mimimizeCost",
        "getMismatches",
        "testInference2",
        "getPriority",
        "testExitPaths",
        "processRegExpLiteral",
        "splitFunctions",
        "testUnhandled",
        "testRewriteNoVarArgs",
        "testNoAliasAnnotationForFunction",
        "clearAsts",
        "testTwoFunctions",
        "getEndingLineNumber",
        "testStubsInExterns",
        "declare",
        "GraphColoring",
        "testStaticFunction2",
        "testInheritanceDetection7",
        "visitCall",
        "PureFunctionMarker",
        "EcmaError",
        "testLoop1",
        "isBottom",
        "setLastGeneration",
        "testLocalScopeOnly2",
        "UintMap",
        "testOrOperators4",
        "testBadWrite",
        "createPassFactory",
        "getNodeForCodeInsertion",
        "setRequiresActivation",
        "testFunctionMovement2",
        "isInitializingDeclaration",
        "getSuperclassType",
        "parseSuppressTag",
        "getRenamingMap",
        "testFor1",
        "CollapseAnonymousFunctionsTest",
        "testOverrideAfterAlias",
        "GraphReachability",
        "getVariableMap",
        "testMissingModuleDependencySkipNonStrictPromoted",
        "testRewriteInGlobalScope",
        "testAssignmentOp",
        "isNormalized",
        "testDoContinueOptimization",
        "inGlobalScope",
        "createTypeWithSubTypes",
        "testNoInlineAliases1",
        "addInputAndDeps",
        "pushEdgeAnnotations",
        "getResult",
        "testLoggerClassDefinition",
        "FunctionListExtractor",
        "checkDefinitions",
        "SimpleDefinitionFinder",
        "testTemplateType",
        "testNoExport",
        "Traversal",
        "CompilerRunner",
        "testInlineDefinedConstant",
        "testUnaryOperators1",
        "getTypesToSkipForTypeNonUnion",
        "testRemoveVarDeclartion5",
        "build",
        "RestrictByFalseTypeOfResultVisitor",
        "PrettyCodePrinter",
        "TextRange",
        "doesLowerCost",
        "testMaybeAddTempsForCallArguments6",
        "testChainedAssignments6",
        "testMutateNoValueReturnWithoutResultAssignment",
        "testStableRenameNested",
        "match",
        "getTransitiveDepsDeepestFirst",
        "testNoInlineMutableArgs2",
        "testDeadVarDeclarations",
        "SiblingNodeIterable",
        "testAccessOfStaticMethodOnPrivateQualifiedConstructor",
        "addChildrenToBack",
        "testInlineExpressions3",
        "testEnumRAI2",
        "assertContainsAnonFunc",
        "replaceTopLevelExpressionWithRhs",
        "testFoldGetElem",
        "createFunctionType",
        "bitAndExpr",
        "memberExpr",
        "PruningCallback",
        "testFoldOneChildBlocksStringCompare",
        "getScopeRoot",
        "testIllegalArgumentIfNotAndOr",
        "handleSymbolExport",
        "testCostBasedInlining4",
        "GearsResultSet",
        "getType",
        "testAnonymous4",
        "testBug1509085",
        "visitNew",
        "generateCode",
        "RGBColor",
        "testInlineFunctions7",
        "getSourceStringEnd",
        "setCompilerData",
        "testConstantPreIncremented2",
        "ConcreteUniqueType",
        "trimCanidatesNotMeetingMinimumRequirements",
        "matchesUint32Context",
        "HTMLBodyElement",
        "testNoRemoveCall1",
        "buildAnnotationNames",
        "createConstructorType",
        "FindCandidatesReferences",
        "testMergeThreeVarNames",
        "Entity",
        "testInsideHookBranch",
        "testAliasCreatedForObjectDepth2_1",
        "testFunction",
        "CheckAccidentalSemicolonTest",
        "testGetBooleanValue",
        "getTypedPercent",
        "processShortCircuitExpression",
        "testTwoFourArgsTwoUsed",
        "visitGetElem",
        "testObjLitAssignedInTernaryExpression2",
        "forConcreteTypeSystem",
        "testVarMovement1",
        "testDenormalize",
        "testInlineConstructor2",
        "replacePrototypeMemberDeclaration",
        "assertNotLiveBeforeX",
        "HTMLPreElement",
        "testRemovalMultipleAssignment4",
        "CompiledSizeEstimator",
        "computeDefUse",
        "testArrayLit",
        "testAlias",
        "testInsideAndConditional",
        "testGetProp",
        "getParameterNames",
        "isLvalue",
        "isPropertyTypeDeclared",
        "testReferencesThis",
        "analyze",
        "FindReferences",
        "testReplaceEmptyFunction3",
        "flowSensitiveInlineVariables",
        "hasVarArgs",
        "addToString",
        "testConstructorAnnotation",
        "getSetPropertyName",
        "sortJsModules",
        "instrumentFunctions",
        "testConstantInlineWithSideEffects",
        "bothIntrinsics",
        "RemoveTryCatchTest",
        "setShouldRemove",
        "popAnnotations",
        "isEquivalentTo",
        "testSetCreatingReference",
        "testConstructorParameterSlots",
        "testBuiltInTypeDifferentReturnType",
        "recordConstructor",
        "clearAst",
        "isNullType",
        "testUnaryOperators5",
        "GearsHttpRequest",
        "VarCheck",
        "setModule",
        "ExtractPrototypeMemberDeclarations",
        "setNameAnonymousFunctionsOnly",
        "createAssignStatementNode",
        "getCodeChangeHandler",
        "testNecessaryDanglingElse",
        "getNameSupplier",
        "isObjectCallMethod",
        "testMaybeAddTempsForCallArguments8",
        "testClosureParameterTypesWithJSDoc",
        "testComplexInline4",
        "AliasExternalsTest",
        "setXmlAvailable",
        "recordNoTypeCheck",
        "beginCaseBody",
        "d2b",
        "buildPropNames",
        "getFunctionNodeList",
        "testReadPropertySetByExternObjectLiteral",
        "isInlineableDeclaredConstant",
        "visitBinaryOperator",
        "testNoRemoveInherits1",
        "testRemovalMultipleAssignmentInIf2",
        "getActions",
        "dereference",
        "getSuppressions",
        "testNoInlineGetProp",
        "hasEqualCallType",
        "checkSynthesizedExtern",
        "processLabeledStatement",
        "forName",
        "setCssNames",
        "getTypesUnderInequality",
        "handleBreak",
        "isNullable",
        "getRhsSubexpressions",
        "InlineCostEstimator",
        "detachFromParent",
        "recordFunctionInformation",
        "testShortCircuitingAnd",
        "GatherSideEffectSubexpressionsCallback",
        "JSTypeExpression",
        "testRemoveOneOptionalMultiplePossibleDefinition",
        "testSimpleProvides",
        "DOMImplementationList",
        "addIdentifier",
        "testMethodBeforeFunction",
        "computeMidPoint",
        "tryMergeBlock",
        "testPrototypeMethodReferencingThis",
        "testExportProperty",
        "testInlineInFunction3",
        "testNotEnoughPrototypeToExtract",
        "testDoNotInlineAssignmentOp",
        "markFunctionEnd",
        "testInlineFunctions26",
        "equals",
        "removeUnreferencedFunctionArgs",
        "undefReadError",
        "testStableOverlap",
        "createElementGet",
        "testLoggerVarDeclaration",
        "getShouldTraversed",
        "gatherLocalNames",
        "testHook1",
        "testCallUndefinedMethodOnObjLitDepth1",
        "isSimpleOperatorType",
        "testBasicDefine",
        "IncompleteDefinition",
        "testNoMoveSideEffectProperty",
        "testAssignmentToPrototype",
        "getInitialValue",
        "forType",
        "getVisited",
        "testExtractingTwoClassPrototypeInDifferentBlocks",
        "moveMethods",
        "children",
        "testLocalScope2",
        "GearsDatabase",
        "flattenNameRefAtDepth",
        "rewriteFunctionExpressions",
        "recordErrorOrigin",
        "checkDefinitionsInJs",
        "testNoInlineIfParametersModified2",
        "eliminateParamsAfter",
        "convertToDottedProperties",
        "getSafeFnNode",
        "isAssignTo",
        "testLotsOfClasses",
        "DefinitionGatheringCallback",
        "testTwiceDefinedGlobalNameDepth1_2",
        "testVarInControlStructure",
        "CSSRuleList",
        "InlineVariables",
        "testCall",
        "testSubtypesWithSameField",
        "testAliasCreatedForEnumDepth2_3",
        "CSSPrimitiveValue",
        "computeFollowNode",
        "enterScope",
        "testThrownExpression",
        "parseTopLevelTypeExpression",
        "testUnary",
        "isValidDeclaration",
        "testInlineFunctionWithArgsMismatch4",
        "tryFoldWhile",
        "testDoNotCrossReferencingFunction",
        "mergeLineCharNo",
        "isPropertyInExterns",
        "TypeError",
        "setQuotedString",
        "formatConclusion",
        "hasEncounteredAllWarnings",
        "ReferencedAfterSideEffect",
        "testTryCatchFinally",
        "addUsedModule",
        "testVarNotImmediatelyBelowScriptOrBlock1",
        "addCandidate",
        "testInlineReferenceInExpression15",
        "testOneVar",
        "testInstanceOf3",
        "VariableShadowDeclarationCheck",
        "inlineVariable",
        "testInline7",
        "testCanInlineReferenceToFunction23",
        "isAssociative",
        "ClassDefiningFunctionNode",
        "TypeFilter",
        "inliningLowersCost",
        "parseAndRecordTypeNameNode",
        "testHookOperators4",
        "isVarArgsFunction",
        "statementHelper",
        "testComplexInlineNoResultNoParamCall3",
        "catch",
        "testInlineFunctions11",
        "isOn",
        "testClosureInherits",
        "isPopulated",
        "addParameter",
        "testNoRemoveFunctionDeclaration1",
        "getGlobalObject",
        "createErrorName",
        "traverseArrayLiteral",
        "testSortJsModules",
        "HTMLTableSectionElement",
        "testResetObjectPropertyInLocalScope",
        "canReplaceWithGetProp",
        "testStaticFunction3",
        "testRemoveRecursiveFunction2",
        "canInlineDirectly",
        "testCallWithArgs",
        "isWordChar",
        "setSuppressions",
        "autoboxesTo",
        "testCanInlineReferenceToFunctionInExpression14",
        "exposedToCallOrApply",
        "testModules",
        "OptimizeParameters",
        "testClassMovement4",
        "getFunctionBody",
        "testManyArguments",
        "Arguments",
        "setTaintsThis",
        "HTMLIFrameElement",
        "testNoInlineExportedName",
        "addPossibleSignature",
        "testNamespacesEnumAlias",
        "getOwnSlot",
        "createJSTypeExpression",
        "testOr",
        "HTMLOptionElement",
        "testMaybeAddTempsForCallArguments13",
        "initTypes",
        "testInvalidNumArgumentsError",
        "getColumnNumber",
        "addDummyAssignment",
        "testAliasCreatedForClassDepth2_2",
        "getRootNode",
        "processAssignment",
        "SubclassRelationship",
        "IRFactory",
        "checkTreeEqualsImpl",
        "pushNodeAnnotations",
        "isImplicitPrototype",
        "testStableWithTrickyExternsChanges",
        "disconnect",
        "testChainedVarAssignments4",
        "SanityCheck",
        "canAccessDeprecatedTypes",
        "LinkStyle",
        "expectBitwiseable",
        "processVariableDeclaration",
        "getMappingFor",
        "createExprStatement",
        "HTMLDivElement",
        "hasScope",
        "testRemoveLocalScopedInstanceOfOnly",
        "setAliased",
        "setLocale",
        "maybeEndStatement",
        "recordBaseType",
        "recordTypedef",
        "testNoSideEffectAnnotation6",
        "recordVisibility",
        "parsePrint",
        "checkCost",
        "buildParameterList",
        "testNoAliasAnnotationForSingleVar",
        "processName",
        "parseFunctionBody",
        "setImplementedInterfaces",
        "getSourceLine",
        "testNoInlineInMergedPath",
        "getTypesToSkipForType",
        "tryFoldBitAndOr",
        "checkRanges",
        "testPrivateAccessForProperties3",
        "testSetterInForStruct5",
        "isNamedType",
        "testRegularExpressions",
        "testDoNotCrossIncrement",
        "testCanInlineReferenceToFunction2",
        "testShadowVariables1",
        "testInlineFunctions18",
        "testConstructorReferencingThis",
        "XSLTProcessor",
        "testRecursiveInternal2",
        "testAliasing",
        "testPrivateAccessForProperties1",
        "testObjectRedefined1",
        "rehashTable",
        "getEnumType",
        "testComplexSampleNoInline",
        "GenerateNodeContext",
        "testRefToDescendantOfUndefinedProperty1",
        "moveCode",
        "hasReferences",
        "getLineSource",
        "createCompiler",
        "caseTopType",
        "testTopLevelVariables",
        "testNonMarkingUse",
        "Selection",
        "createDotQuery",
        "parseTypeName",
        "testInlineFunctionWithArgsMismatch3",
        "setJSDocInfo",
        "testPrefixedPropertyName",
        "NameList",
        "isConstructorOrEnumDeclaration",
        "hasParamOrVar",
        "DefineInfo",
        "setNoShadow",
        "NameAnonymousFunctionsMappedTest",
        "RecordTypeBuilder",
        "testPreconditionCheck",
        "testCodeMotionDoesntBreakFunctionHoisting",
        "applyFullCompilationOptions",
        "createArrayLiteral",
        "isActive",
        "CallbackWrapper",
        "recordParameterDescription",
        "isXMLAttribute",
        "XPathNamespace",
        "testLiveRangeChangeWithinCfgNode",
        "testTypeAnnotationsNamespace",
        "testNamingBasedOnOrderOfOccurrence",
        "testOverriding3",
        "testCatchBlock",
        "makeCompilerInput",
        "testStubProperty",
        "testAliasCreatedForObjectDepth2_2",
        "testMaybeAddTempsForCallArguments23",
        "testForLoopOrder",
        "testLateRequire",
        "testStaticFunction1",
        "createAssignmentActions",
        "testDefines",
        "testNoExceptionsWithBadConstructors2",
        "checkTypes",
        "testInlineBlockMutableArgs4",
        "testFunctionLiteral",
        "testInlineExpression7",
        "appendInferredPaths",
        "newId",
        "testMixin2",
        "getParameterSlots",
        "createAssignment",
        "testGlobalAlias",
        "containsUnicodeEscape",
        "encodeStringAsIdentifier",
        "testHaltAtSideEffects",
        "visitNewNode",
        "UnknownDefinition",
        "forChildScope",
        "setIsNewCall",
        "assertInvalidLabelContinue",
        "testHaltAtSideEffects4",
        "FunctionNamesTest",
        "testNestedExprExploitation",
        "testLineLength",
        "storeUint32Result",
        "testMergeBlock3",
        "testStaticLoggerPropertyDefinition",
        "newTraversal",
        "testSame",
        "GearsFileSubmitter",
        "createInitialScope",
        "reattach",
        "getCssRenamingMap",
        "createAnonymousObjectType",
        "getPrototype",
        "testRemoveInControlStructure2",
        "isSafeReplacement",
        "isNumberValueType",
        "newName",
        "getImplicitPrototype",
        "isQuotedString",
        "condExpr",
        "testCanInlineReferenceToFunction18",
        "setInterface",
        "HTMLMetaElement",
        "testNoSplit",
        "getRestrictedWithoutUndefined",
        "testWithInversion",
        "testAnonymous1",
        "testRenameLocalsClashingWithGlobals",
        "ReplaceIdGenerators",
        "findAll",
        "testRemoveLabeledStatment",
        "processAstRoot",
        "sourceToString",
        "testTryCatch",
        "putThreadLocal",
        "addList",
        "getBaseType",
        "testHook",
        "testPassWithNestedNewNodes",
        "testInlineReferenceInExpression2",
        "testThisJSDoc2",
        "testAssignInCondition",
        "tryReduceReturn",
        "testPrint",
        "recordReturnDescription",
        "testExposeExpression1",
        "testExternMethodsFromExternsFile",
        "isReturnExpressBlock",
        "newExpr",
        "testInitJsParseFail",
        "testRemoveGlobal",
        "testMoveExpression8",
        "testGoldenOutput1",
        "ErrorPass",
        "recordUnknownUse",
        "testSplitNamedFuntion",
        "createInitialEstimateLattice",
        "testMutateWithParameters3",
        "hasFeature",
        "inlineAliasIfPossible",
        "setNormalized",
        "testInlineStringMultipleTimesWhenAliasingAllStrings",
        "getCodeNoCache",
        "stripTrailingZeroes",
        "initReverseMap",
        "JsDocInfoParser",
        "testRemoveNumber",
        "testCorrectIfReturns",
        "setIsPure",
        "testIsControlStructureCodeBlock",
        "isFunctionDeclaration",
        "testNoInlineIntoNestedNamedFunctions",
        "getDepth",
        "getConditionExpression",
        "pop",
        "incCount",
        "getParamOrVarName",
        "canChangeSignature",
        "warnAboutNamespaceAliasing",
        "testAddPropertyToFunctionInLocalScopeDepth2",
        "lineNumber",
        "replaceWithNull",
        "testFunctionWithinTry",
        "testUnknownType2",
        "testAnonymousFunctionInlining2",
        "DOMApplicationCache",
        "testFunctionArityWithVarArgs",
        "testCanInlineReferenceToFunction14",
        "Assignment",
        "containsType",
        "processGeneric",
        "testLocalAliasOfOtherName",
        "testRemoveVarDeclartion7",
        "isCallOrNew",
        "handleDo",
        "parseFieldName",
        "testRefChain15",
        "testCanInlineReferenceToFunction26",
        "processReturnStatement",
        "declareNativeValueType",
        "processReference",
        "setReferencesThis",
        "aliasExternals",
        "getFunctionalInformationMap",
        "isGlobal",
        "testWithNoDefines",
        "AnnotationState",
        "updateObjLitOrFunctionDeclaration",
        "setOptionsForCompilationLevel",
        "testRemoveVarArg",
        "testIfBranch",
        "DepsFinder",
        "addSubType",
        "testRewritePrototypeNoObjectLiterals",
        "checkTreeEqualsSilent",
        "testLongStableAlias",
        "getVarCount",
        "testVarNotImmediatelyBelowScriptOrBlock2",
        "testNamespaceInjection",
        "appendBlockStart",
        "testFooGetElemBar",
        "getSubTypes",
        "resolveTypesInScope",
        "initializeBuiltInTypes",
        "getSourceFileByName",
        "getMethodBlock",
        "getId",
        "getBlockDescription",
        "testInline13",
        "functionCallHasSideEffects",
        "testOneType",
        "testRemoveNamedFunction",
        "RenamePropertiesTest",
        "testArgumentsWithSideEffectsNeverInlined2",
        "testCanInlineReferenceToFunction38",
        "createExprStatementNoReturn",
        "findPropertyType",
        "testBoth",
        "testCrossFunctionsAsLeftLeaves",
        "isUnion",
        "testRhsReference4",
        "assertEquivalent",
        "testNoWarningForSimpleVarModuleDep1",
        "getEdges",
        "getMessage4",
        "testVarMotionWithCode",
        "testRecursiveExternal1",
        "testNonGlobalScopeExport",
        "testChainedAssignments4",
        "processIfStatement",
        "testChainedAssignments7",
        "testNoRemoveCall6",
        "CollectDefines",
        "testOneArgWithUnknownStringLiterals",
        "andExpr",
        "getEntry",
        "parseJSDocInfo",
        "testNullableDeprecatedProperty",
        "testNoRemoveAssign4",
        "assertNotMatch",
        "testInCorrectSwitchReturn",
        "annotate",
        "findNameType",
        "replaceReturnWithBreak",
        "SQLResultSet",
        "inferReturnType",
        "documentFileOverview",
        "testAnonymousFunctionCallInlining9",
        "testCallOnUndefinedProperty",
        "hasNoSideEffectsAnnotation",
        "initHash",
        "testFunctionAritySimple",
        "ReplaceCssNames",
        "testInherits1",
        "testDoNotCrossDelete",
        "testInlineFunctionWithArgsMismatch1",
        "testNoProtectedAccessForProperties2",
        "testNestedAssign4",
        "AstChangeProxy",
        "testAbbreviatedShiftAssignment1",
        "testFooDotBar",
        "isForwardDeclaredType",
        "createNullableType",
        "setPassConfig",
        "assertInvalidBreak",
        "mutatesGlobalState",
        "testNoWarningOnDeprecatedPrototype",
        "testAssignment",
        "hasBreakOrContinue",
        "HTMLTableCellElement",
        "testConstructorAnnotationInExterns5",
        "MatchNodeType",
        "tokenToName",
        "getGetPropertyName",
        "testInlineName",
        "testInlineConditionallyDefinedConstant2",
        "testNoPrivateAccessForProperties3",
        "tryFoldAndOr",
        "setErrorReporter",
        "testMoveExpression3",
        "testSwitch4",
        "extractConditional",
        "removeVarDeclarationsByNameOrRvalue",
        "toUnion",
        "testSecondCallReturnNotThis",
        "testUndefinedPrototypeMethodRefGivesNoWarning",
        "testContinueToLabelSwitch",
        "testAnonymousFunctionCallInlining12",
        "testInnerFunctionsWithNamedArgumentInInnerAndOutterFunction",
        "InstanceOfCheckNode",
        "exitSwitch",
        "getFirstNonEmptyChild",
        "getMinArguments",
        "ExternExportsPass",
        "declareNativeFunctionType",
        "objectPropertyStringPostprocess",
        "testAndOperator2",
        "testForIn",
        "assertNoReturnEdge",
        "PassFactory",
        "testMethods",
        "testInlineAliases2",
        "maybeRemove",
        "Rect",
        "expectCanAssignToPropertyOf",
        "getIndexType",
        "testMutateWithMultipleReturns",
        "testHookOperator3",
        "findUniqueRefinedSlot",
        "getDefinitionSites",
        "isGlobalFunctionDeclaration",
        "testRhsReference5",
        "testCorrectEarlyReference",
        "confirm",
        "testHaltAtVarRef2",
        "HTMLBaseFontElement",
        "HTMLHeadElement",
        "testFunctionPassedAsParam",
        "getCssNames",
        "continueProcessing",
        "popEdgeAnnotations",
        "testBuiltInTypeDifferentNumParams",
        "testGetNameReferenceCount",
        "testInlineInFunction",
        "hasTypedefType",
        "testFoldInstanceOf",
        "CanvasRenderingContext2D",
        "processTask",
        "testImplicitCallFromPropertyOfAllType",
        "isUnknown",
        "traverseRoots",
        "testOnlyInversion",
        "testExportNonStaticSymbol2",
        "getCallsInFunctionBody",
        "GearsGeolocation",
        "createJsModules",
        "RemoveUnusedNamesTest",
        "testTwoFiles",
        "handleIf",
        "testGetElemDereference",
        "testAssignmentOps",
        "isForIn",
        "testInlineExpressions6",
        "RhinoErrorReporter",
        "SimpleRegion",
        "testAssign",
        "GearsAddress",
        "testExportVars",
        "testWarningForDeprecatedSuperClass",
        "testReplaceSetter4",
        "testLoggerDefinedInConstructor",
        "FunctionNode",
        "allowSourcelessWarnings",
        "testNoCreateVarsForLabels",
        "isPrototypeNameReference",
        "initializeRegistry",
        "openDatabase",
        "Annotation",
        "testAnonymousFunctionInlining3",
        "enterSwitch",
        "testObjectLiteral",
        "validateName",
        "setInstanceType",
        "testGlobalWriteToNonAncestor",
        "getNamedContainingFunction",
        "testNoRewriteExternalMethods2",
        "testObjLitAssignmentDepth2",
        "undeclare",
        "Generated",
        "testCanInlineReferenceToFunction43",
        "setCheckForLabel",
        "InlineRenamer",
        "testPropertiesOnInterface",
        "GlobalNamespace",
        "testUnion",
        "addModuleAndDeps",
        "SuspiciousPropertiesCheckTest",
        "popScope",
        "unionWith",
        "testRewriteNoNestedFunction",
        "getSuperClassConstructor",
        "generateExtractedDeclaration",
        "testAccessOfStaticMethodOnPrivateConstructor",
        "handleFunction",
        "isVarDeclaration",
        "testReturn1",
        "expectCanAssignTo",
        "ParserRunner",
        "testMismatchInvalidation",
        "isLowerPrecedenceInExpression",
        "getAbstractMethodName",
        "testInlineEmptyFunction3",
        "isEligibleDefinition",
        "trimCanidatesUsingOnCost",
        "splitFiles",
        "testNoWarningForNumbers",
        "testEnumOfObjects1",
        "createFunctionInfo",
        "testAnonymousFunctionCallInlining7",
        "testCallFunction",
        "Object",
        "createString",
        "HTMLTableColElement",
        "testSimpleVarAssignment",
        "AbstractMessageFormatter",
        "determineLineMappings",
        "constructorCallHasSideEffects",
        "documentBlock",
        "testInsideIfConditional",
        "testSwitches",
        "testDeterministic",
        "checkEnumElementCycle",
        "markExported",
        "testAnnotationInExterns5",
        "makeOneTimePass",
        "processElementGet",
        "testComplex1",
        "referenceMore",
        "testCanInlineReferenceToFunctionInExpression21a",
        "stuffBits",
        "testInc",
        "testOverlappingOriginalAndGeneratedNamesStable",
        "isEnumType",
        "testUnintendedUseOfInheritsInLocalScope1",
        "isJSFormatChar",
        "DevirtualizePrototypeMethodsTest",
        "checkAllPathsWithoutBackEdges",
        "testNoProtectedAccessForProperties1",
        "isExternallyReferenceable",
        "getMessage2",
        "createPassConfigInternal",
        "testChainedAssignments3",
        "HTMLAnchorElement",
        "updateObjLitOrFunctionDeclarationAtVarNode",
        "hasBlockInliningReferences",
        "setDefine",
        "getBasePassConfig",
        "createRecordTypeFromNodes",
        "testDuplicateNames",
        "ungetCharIgnoreLineEnd",
        "generateReport",
        "reportDestructuringAssign",
        "getErrors",
        "testLocalCall",
        "testDeprecatedFunction",
        "addAliasDeclarationNodes",
        "AbstractPostOrderCallback",
        "defineElement",
        "processPropertyGet",
        "testFoldRegExpConstructorStringCompare",
        "getLocaleFromStandardLocaleString",
        "testLocalWriteToNonAncestor",
        "testRemoveTryFinally",
        "testAbbreviatedBitAssignment1",
        "recordType",
        "testComplexAssignmentAfterInitialAssignment",
        "handleFor",
        "DiagnosticGroupWarningsGuard",
        "StartMarker",
        "testGlobalObjectNameInBooleanExpressionDepth1_2",
        "replaceWithRhs",
        "hasNode",
        "test",
        "isTypeInferred",
        "testAdd3",
        "eliminateCallParamAt",
        "extractBlockComment",
        "testCorrectSwitchReturn",
        "testInline12",
        "testMaybeAddTempsForCallArguments22",
        "testNoInlineAliases2",
        "testObjectPropertySetToObjLitConditionally",
        "areEquivalent",
        "MessagePort",
        "testExcerptOneLine",
        "ChainableReverseAbstractInterpreter",
        "Comparator<Assignment>",
        "testConstantPostDecremented1",
        "testInherits4",
        "testIncrement",
        "size",
        "unboxesTo",
        "testConstructorAnnotationInExterns8",
        "testMaybeAddTempsForCallArguments3",
        "hasFileOverview",
        "testSeparateMethods",
        "testCanInlineReferenceToFunction39",
        "removeChild",
        "testShortCircuit3",
        "testRedeclaration2",
        "valueConsumedByParent",
        "createCatch",
        "eqExpr",
        "testLabelledForInLoopOrder",
        "testCostBasedInlining3",
        "GearsErrorObject",
        "recordSplitPoint",
        "addRelatedInterfaces",
        "testStaticFunction4",
        "visitNameNode",
        "getCallThisObject",
        "createForIn",
        "addDeclaration",
        "createMemberRefGet",
        "assertEscaped",
        "getClassesDefinedByCall",
        "testCostBasedInlining12",
        "testGetScopeRoot",
        "getImpl",
        "getMessage3",
        "onRedeclaration",
        "processUnaryExpression",
        "flattenReferencesTo",
        "NamedType",
        "getLocale",
        "reportBadModuleReference",
        "inferFromOverriddenFunction",
        "callMeetsBlockInliningRequirements",
        "testUsedNameInScope",
        "removeListener",
        "testNoRemoveThrow3",
        "testScopedType",
        "testPrototypePropertySetInLocalScope1",
        "testMixedModeInliningCosting1",
        "testDeleteOperator2",
        "testAssignmentToPrototype3",
        "printSourceString",
        "setLoggingLevel",
        "startSourceMapping",
        "getDeclaredGetPropType",
        "updateTypeOfThisOnClosure",
        "isEmptyMethod",
        "testCast",
        "testComplexFunctionWithFunctionDefinition",
        "testNoSideEffectAnnotation5",
        "isJSIdentifier",
        "ScriptEngineMinorVersion",
        "testCostBasedInlining7",
        "checkLanguageVersion",
        "InstanceObjectType",
        "assertPrettyPrint",
        "extractClassNameIfRequire",
        "testBadCast",
        "testNamespacedConstructorAlias",
        "ScriptRuntime",
        "testKnownConditions",
        "testInheritance2",
        "processWithStatement",
        "setReturnType",
        "getRootModule",
        "CheckGlobalNamesTest",
        "testAnonymousFunctionInlining4",
        "testCostBasedInlining6",
        "Touch",
        "hi0bits",
        "testCollapsePrototypeName",
        "parseAndRecordTypeNode",
        "fromNatives",
        "testRefChain4",
        "testFunctionCallDepth1",
        "getMessage0",
        "testAnonymous3",
        "getterSetterProperty",
        "testInheritance1",
        "processLabel",
        "testReadUndefinedPropertyDepth2",
        "getDouble",
        "testGetElem3",
        "canMoveValue",
        "NodeUtil",
        "testRefChain14",
        "initForUnitTest",
        "assertOk",
        "testPropertiesOfAnUndefinedVar",
        "Builder",
        "addVar",
        "testMixedModeInliningCosting2",
        "expectUndeclaredVariable",
        "testNoRewriteMultipleDefinition2",
        "createType",
        "testCanInlineReferenceToFunctionInExpression5",
        "createGlobalScopeHelper",
        "testAliasCreatedForEnumDepth1_3",
        "StringType",
        "GlobalFunction",
        "getVariableName",
        "testDeterministicNaming",
        "testTwoMethods2",
        "calcSize",
        "shouldTraverse",
        "testRestrictToCastWithNonInstantiatedTypes",
        "testComplexNestedAssigns2",
        "testCanInlineReferenceToFunctionInExpression6",
        "diffSlots",
        "TouchList",
        "findCalledFunctions",
        "getNewNameToOriginalNameMap",
        "JS_dtostr",
        "testTypeAnnotationsMemberSubclass",
        "reportRuntimeError0",
        "testMovePrototypeRecursiveMethod",
        "MatchNameNode",
        "DevirtualizePrototypeMethods",
        "testTwiceDefinedGlobalNameDepth1_1",
        "getNameForId",
        "testNoInlineArrayLits",
        "endStatement",
        "testUnchainedCalls",
        "CheckGlobalThis",
        "testLocalAlias3",
        "testFunctionType",
        "testLocalVar",
        "caseObjectType",
        "getVisibility",
        "testForwardVarReferenceInLocalScope2",
        "maybeSanityCheck",
        "testRenameInFunction",
        "createTypeCheck",
        "testPruningCallbackShouldTraverse2",
        "processForTesting",
        "mustMatchToken",
        "testContinueToSwitch",
        "testConstRemovingRename1",
        "getFunctionType",
        "inferTemplateTypeName",
        "recordDepScope",
        "testInlineFunctions23",
        "endsWith",
        "testInheritanceDetection9",
        "putBooleanProp",
        "getCallSlot",
        "tryEliminateConstantArgs",
        "testPrefixedClassName",
        "inlineReturnValue",
        "testClassMovement5",
        "generateNames",
        "getNameForest",
        "testShortCircuit7",
        "HTMLElement",
        "isImmutableValue",
        "testFourFiles",
        "testAutoboxedPrivateProperty",
        "getAllNameInfo",
        "isExprCall",
        "testHookOperator2",
        "getPosition",
        "testStringIndexOf",
        "testCorrectShadowing",
        "testInherits7",
        "FixedPointGraphTraversal",
        "testShouldWarnWhenInstantiatingObjectsDefinedInGlobalScope",
        "testPrototypePropertySetToAnObjectLiteral",
        "isLabelName",
        "NullErrorReporter",
        "testIsLabelName",
        "testAnd",
        "testInlineFunctions17",
        "testCanInlineReferenceToFunctionInExpression13",
        "getCurrentOffset",
        "RegExp",
        "createMessageFormatter",
        "resetForTypeCheck",
        "testBadCrossModuleRequire",
        "testOptionalArgumentsToConstructorCanBeOptimized",
        "testInferredPrototypeProperty",
        "maybeInsertAliasDeclarationIntoParseTree",
        "hashCode",
        "setTemplateTypeName",
        "testComplexInlineVars12",
        "testGetVarsDeclaredInBranch",
        "testShadowVariables8",
        "createWith",
        "testTypeMismatch",
        "replaceStringsWithAliases",
        "computeMayUse",
        "testObjectOfObjects1",
        "getTempConstantValueName",
        "getEscapedLocals",
        "caseNoObjectType",
        "computeLiveness",
        "HTMLLabelElement",
        "testRemoveNamespaceGet2",
        "UnreachableCodeElimination",
        "UniqueTag",
        "traverseBranch",
        "Scope",
        "testComplexInlineInExpresssions2",
        "getTokenId",
        "testRefChain16",
        "name",
        "TightenTypes",
        "testRemoveRecursiveFunction4",
        "recordSet",
        "DeadAssignmentsElimination",
        "recordEnumParameterType",
        "testExportMultiple3",
        "testRewriteCallReference",
        "setCollapsePropertiesOnExternTypes",
        "traverseWithinShortCircuitingBinOp",
        "isName",
        "getState",
        "actsOnStripType",
        "ensurePropertyDeclared",
        "testCombinedPasses",
        "NameAnonymousFunctionsTest",
        "MarkNoSideEffectCalls",
        "testRhsAssign8",
        "testInherits3",
        "propertyMustBeInitializedByFullName",
        "testMoveExpression5",
        "testBug1840071",
        "testFoldBlocksWithManyChildren",
        "newQualifiedNameNode",
        "isGenerateDebugInfo",
        "inferQualifiedSlot",
        "identifierEscape",
        "testConstantPostDecremented2",
        "Boolean",
        "testInfiniteLoop1",
        "testUnionTypeTwoFields",
        "testTypeAnnotationsAssign",
        "isFunction",
        "isLocalName",
        "testDefineWithInvalidDependentValue",
        "getErrorManager",
        "testLiteralMovement1",
        "ProxyObjectType",
        "testRValueReference1",
        "testInnerFunctions",
        "getExisting",
        "testCollapsePropertyOnExternType",
        "addChildBefore",
        "testInlineEmptyFunction5",
        "Color",
        "testRewriteDeclIsExpressionStatement",
        "testCanInlineReferenceToFunction12",
        "extractInstance",
        "tableLookupStep",
        "testFunctionsNamesAndIds",
        "assertAllOneTimePasses",
        "getTraversal",
        "testDeclaredVar",
        "moveAllFollowing",
        "GearsMessageObject",
        "testMayEffectMutableState",
        "expectString",
        "determineGetTypeForHookOrBooleanExpr",
        "recordPrototypePropDefinition",
        "testShadowVariables6",
        "Result",
        "testNoSideEffectAnnotation10",
        "reportRuntimeError3",
        "resolveInlineConflicts",
        "flattenNameRef",
        "appendListItem",
        "testFunctionPropertyResetInLocalScope",
        "testRemoveUnreachableCode",
        "testRemoveLiteral",
        "termSupportsColor",
        "ensurePropertyDeclaredHelper",
        "nodeTypeMayHaveSideEffects",
        "testExcerptLineFromInexistantSource",
        "testReassignAfterRefInConditional",
        "prioritizeFromEntryNode",
        "testChainedVarAssignments1",
        "testInvalidAnnotation3",
        "testRemoveRecursiveFunction6",
        "History",
        "SimpleSubGraph",
        "numberToString",
        "testMoveExpression2",
        "testEnum",
        "testConstructorAnnotationInExterns6",
        "getExitLatticeElement",
        "getAliasName",
        "testCanInlineReferenceToFunctionInExpression14a",
        "getSideEffectsHookNode",
        "getFirst",
        "provablyExecutesBefore",
        "testNestedAssigns",
        "getElementsType",
        "testGlobalObjectDeclaredToPreserveItsPreviousValue2",
        "testInheritanceDetection2",
        "expectArgumentMatchesParameter",
        "getExportSymbolFunction",
        "testDoNotChangeLocalScopeReferencedLocalScopedInstanceOf",
        "testConsumption1",
        "ensureCacheInitialized",
        "testSimpleFor",
        "getInstanceType",
        "isPropertyTest",
        "getOutcomeFlowScope",
        "setWrapperPrefix",
        "hasProperty",
        "testIf2",
        "setCodingConvention",
        "setJSType",
        "AnonymousFunctionNamer",
        "branchedFlowThrough",
        "testFinallyStatements",
        "getAssignments",
        "testNoRewritePrototypeObjectLiterals2",
        "traverseHook",
        "testPassWithTwoNewNodes",
        "setTempNamePrefix",
        "tryFoldArithmetic",
        "reportRuntimeError",
        "scanVars",
        "GetAliasableNames",
        "testContrivedExampleWhereConsistentRenamingIsWorse",
        "testFoldBitwiseOp",
        "testLiteralMovement3",
        "processForLoop",
        "aliasGlobals",
        "testSetProp",
        "testOneArgWithCompositeClassNames",
        "DOMConfiguration",
        "testExportedMethodsByNamingConventionAlwaysExported",
        "testNoInlineAliases8",
        "initInputsByNameMap",
        "testShadowVariables17",
        "testPropertiesReferencedByGeneratedCode",
        "getInstances",
        "testNoOptimizationWhenGetProp",
        "getReferences",
        "testIrrelevant",
        "DiagnosticGroups",
        "testInlineVariablesConstants",
        "decompile",
        "testGetFunctionName1",
        "testAnnotationInExterns4",
        "getAstDotGraph",
        "toDot",
        "getString",
        "testMultipleVar",
        "pushScope",
        "testSeveral",
        "GearsPosition",
        "siblings",
        "registerMismatch",
        "fromInputStream",
        "registerIfMismatch",
        "testBug1059649",
        "getFunctionJsDocInfo",
        "testStableSimple2",
        "getInstanceFromPrototype",
        "testAnonymous9",
        "getArgumentAtIndex",
        "testRemovalMultipleAssignment2",
        "run",
        "reportRefToUndefinedName",
        "allPathsReturn",
        "testSetStaticAndPrototypePropertiesOnFunction",
        "MutationEvent",
        "getNumRepetitions",
        "testExposeExpression8",
        "testNoInlineIfParametersModified7",
        "testCountMismatch",
        "testRemoveFunction",
        "testPrototypeFieldDefinitionWithoutAssignment",
        "DOMParser",
        "processInternal",
        "maybeDecomposeExpression",
        "testAnonymousFunctionCallInlining11",
        "isExternallyDefined",
        "processConstructorCall",
        "testCanInlineReferenceToFunction6",
        "buildAndRegister",
        "isGetProp",
        "testUnionType",
        "assertReturnEdge",
        "testExpressions2",
        "canCollapse",
        "testBug1438784",
        "testCanInlineReferenceToFunctionInExpression7a",
        "createPostOrderAlphabet",
        "testChainedVarAssignments5",
        "maybeRemoveReferenceToRemovedVariable",
        "inferSlotType",
        "testOrOperator3",
        "isValidReference",
        "assertNotClassDefining",
        "sanityCheckCodeGeneration",
        "HTMLTitleElement",
        "testFunctionsWithJsDoc2",
        "decodeURIComponent",
        "testGoodCrossModuleRequire2",
        "testLocalScopeOnly1",
        "collectPropertyNames",
        "minOccurrencesRequiredToAlias",
        "testCostBasedInliningComplex4",
        "identifyEnumName",
        "shouldGenerateMapPerModule",
        "testAssignmentToThisPrototype",
        "testWarningInStaticMethod",
        "nameLink",
        "runInParallel",
        "testMethod2",
        "testNamespaceDefinedInLocalScope",
        "countCallCandidates",
        "extractForInitializer",
        "testParameters",
        "testConstructorAnnotationInExterns3",
        "testFunctionMismatch2",
        "getImplicitActionsFromCall",
        "countOf",
        "testRemoveUselessNameStatements",
        "createCondExpr",
        "testFunctionGivenTwoNames",
        "testMisusedConstructorTag",
        "nodesAreEqual",
        "processBreakStatement",
        "testRValueReference3",
        "checkVar",
        "testRefToDefinedProperties2",
        "testRemoveUselessLiteralValueStatements",
        "computeRelatedTypes",
        "ConcreteInstanceType",
        "testConstructorAnnotationInExterns7",
        "getPrototypeClassName",
        "checkActivationName",
        "testIsSimpleFunction2",
        "getNodeB",
        "getRenamedTypesForTesting",
        "opToStrNoFail",
        "HTMLQuoteElement",
        "getDefaultErrorReporter",
        "NameAnonymousFunctionsMapped",
        "testAliasableAndUnaliasableGlobals",
        "testIllegalArgumentIfNoSideEffectHook",
        "assertTypeEquals",
        "extract",
        "traverseNodes",
        "testMixedModeInlining2",
        "maybeCreateDirsForPath",
        "testMixin3",
        "testRemovalMultipleAssignmentInIf3",
        "nameUsesArgumentsProperty",
        "unseal",
        "isFinite",
        "testNotMissingGetCssName",
        "testFoldArithmetic",
        "generateNextName",
        "registerListener",
        "testGlobalFunctionsInGraph7",
        "getParameterName",
        "addConst",
        "createOptions",
        "optimizeFunctionDefinition",
        "PureFunctionIdentifier",
        "testBug1704733",
        "recordExport",
        "testNoInlineGetpropIntoCall",
        "testMaybeAddTempsForCallArguments27",
        "MimeTypeArray",
        "testNestedAssign8",
        "hasErrors",
        "declareSlot",
        "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1",
        "join",
        "testNamespaceAnnotationInExterns6",
        "testResetFunctionPropertyInLocalScope",
        "testIsFunctionAnonymous",
        "testDoNotUseReplacementMap",
        "addGlobalAliasNode",
        "testNamespacedDefine1",
        "createModules",
        "testInherits2",
        "endSourceMapping",
        "testAliasMethodsDontGetOptimize4",
        "apply",
        "mutatesThis",
        "SourceInformationAnnotator",
        "parseExpected",
        "getJSDocToken",
        "testSimpleDefinitionFinder",
        "Element",
        "testNoOptimizationForExternsFunctions",
        "testSimpleReassign3",
        "getLength",
        "testInline",
        "testProtectedAccessForProperties6",
        "testFoldComparison",
        "testVarInConditionPath",
        "testGlobalFunctionsInGraph4",
        "testReplaceIdentityFunction1",
        "testNoSideEffectAnnotation4",
        "caseNameOrGetProp",
        "testUsingAnonymousObjectsToDefeatRemoval",
        "disableTypeCheck",
        "hasSideEffects",
        "connectUnknowns",
        "statements",
        "testLotsOfVars",
        "put",
        "verifyArgument",
        "testFold2",
        "RecordFunctionInformation",
        "VarDefinition",
        "testNoRemoveInherits3",
        "toSource",
        "getNext",
        "addAuthor",
        "toStringTree",
        "ObjectType",
        "testValidSetCssNameMapping",
        "testSimpleReassign2",
        "testDoCrossFunction",
        "isControlStructure",
        "Name",
        "testExposeExpression2",
        "getStartLine",
        "getGrandparent",
        "meet",
        "testRefChain19",
        "typeError3",
        "testInlineBlockMutableArgs2",
        "fromReader",
        "assertLiveAfterX",
        "getLikelyNonConflictingName",
        "getScopeDepth",
        "testCanInlineReferenceToFunction30",
        "testIf4",
        "setNamesToAlias",
        "shouldTraverseIfActive",
        "testRemovalMultipleAssignment3",
        "CSSStyleRule",
        "getFlag",
        "testFunctionCallDepth2",
        "testCanInlineReferenceToFunction36",
        "testMixedModeInliningCosting4",
        "testObjLitWithQuotedKeyThatGetsRead",
        "nextFlaggedToken",
        "removeUnreferenced",
        "getRegexpCount",
        "findRoot",
        "collectDefines",
        "isOneTimePass",
        "getRestrictedUnion",
        "ControlRange",
        "testWhileContinueOptimization",
        "addReference",
        "testPrivateName",
        "allEquivalenceClasses",
        "testIfTryCatch",
        "parseTypeString",
        "setRequiredUsage",
        "splitAssignments",
        "orExpr",
        "getNamedInfo",
        "tryFoldHookIf",
        "isAssignAllowed",
        "createThrow",
        "testNamespacedClass2",
        "testProtectedAccessForProperties4",
        "Plugin",
        "createSourceInputs",
        "testNoVarArgs",
        "testStubsInExterns4",
        "RenamePrototypesTest",
        "openExternExportsStream",
        "testRenameWithNameOverlap",
        "testUnknownType",
        "getRestrictedTypeGivenToBooleanOutcome",
        "testReadUndefinedPropertyDepth1",
        "testNoSimplifyFunctionArgs1",
        "testSameNamesSameDefinitions",
        "ungetChar",
        "renamePrototypes",
        "testFailWithNestedNewNodes",
        "testPassWithLocalVariables",
        "testCorrectSimple",
        "testAliasCreatedForClassDepth1_2",
        "matchesExpectation",
        "AssignmentProperty",
        "ConstCheck",
        "getNodeA",
        "IntermediateState",
        "testClassDefiningCallWithStripType7",
        "printSummary",
        "getRestrictedWithoutNull",
        "testOneRun",
        "hasReturnAtExit",
        "testNoRewriteUseBeforeDefinition",
        "isLatin",
        "RemoveConstantRValuesCallback",
        "maybeCollapseIntoForStatements",
        "assertNotLiveAfterX",
        "testSimpleCatchFinally",
        "testJsDocNormalization",
        "parseFieldTypeList",
        "testMoveMethodsUsedInTwoModules",
        "applyCommonRestriction",
        "testProtobuffParseFail",
        "testRenamePropertiesFunctionCall2",
        "testContinueOutsideSwitch",
        "testComplexInlineInExpresssions4",
        "LinkedUndirectedGraphEdge",
        "testCanInlineReferenceToFunction1",
        "formatFoundRequired",
        "isDeprecatedFunction",
        "setExportedNames",
        "setDeprecationReason",
        "testStableRenameSimple",
        "testInline17",
        "testGlobalNameReferencedInLocalScopeBeforeDefined1",
        "HTMLParagraphElement",
        "testTwoVarArgs",
        "fromGenerator",
        "initForScopeRoot",
        "HTMLLIElement",
        "formatLine",
        "testInlineFunctions4",
        "create",
        "getCompilerData",
        "canPropertyBeDefined",
        "LoggerErrorManager",
        "setReservedKeywordAsIdentifier",
        "testSimpleSwitch",
        "getTypeIfRefinable",
        "processScope",
        "estimateMinOccurrencesRequriedToAlias",
        "expectNumber",
        "StyleSheet",
        "testInference6",
        "inferTypes",
        "testRenameWithPrefix2",
        "getDefaultExterns",
        "UnknownType",
        "createRecordType",
        "maybeDeclareQualifiedName",
        "testBlackList",
        "fromFile",
        "testInline19",
        "testAnonymousFunctionCallInlining5",
        "isVoidType",
        "setBaseLineno",
        "testGetElem2",
        "createExternInputs",
        "testWarningForDeprecatedClassInGlobalScope",
        "testCantMovePrototypeProp",
        "testRValueReference4",
        "testNonWellformedAlias2",
        "testFunctionWithQuotedPropertyThatGetsRead",
        "setCharno",
        "testExportMultiple",
        "needsToBeStubbed",
        "testSkipComplexMethods",
        "getPrototypeType",
        "testInnerFunctions2",
        "getPartitionSuperNode",
        "normalizeClassType",
        "wasEmptyNode",
        "exitScopeIfActive",
        "testInit",
        "getNativeFunctionType",
        "isGlobalVarReference",
        "processDefineAssignment",
        "testPropertiesOnBothSidesOfAssignment",
        "testShortCircuitingOr2",
        "testSubclass",
        "testUnusedTypeInExterns",
        "FunctionDefinition",
        "testNoRewriteNestedFunction",
        "processSubtree",
        "getSourcePositionFromStack",
        "TypedScopeCreator",
        "testInlineFunctions20",
        "propertyIsImplicitCast",
        "addChangeHandler",
        "testNamespaceAnnotation",
        "testUnaliasable",
        "testVarInWithBlock",
        "testSameWithInversion",
        "updateAssignAllowedStack",
        "processStringNode",
        "testCrossModuleInlining1",
        "testMutateWithParameters2",
        "testGlobalThis4",
        "testThisJSDoc3",
        "FunctionCheck",
        "getThisSlot",
        "parseFunction",
        "isLastGeneration",
        "testChainedAssignments2",
        "safeAlias",
        "assertNodeNames",
        "runtimeError",
        "declareArguments",
        "testFunctionArgumentsBasic",
        "HTMLFontElement",
        "recordConstancy",
        "setDefineInfoNotAssignable",
        "getVarsDeclaredInBranch",
        "getTopScope",
        "testNamespaceAnnotationInExterns1",
        "testBothScopes",
        "testReferencedVarNotDefined",
        "testComplexInlineVars8",
        "VerifyConstants",
        "setCompileFunctionsWithDynamicScope",
        "testExitNoReturn",
        "isBreakStructure",
        "getFunctionInfo",
        "testPrototypeAndInstance",
        "setWasEmptyNode",
        "canInline",
        "testFindModifiedParameters3",
        "testAssignAndReadInCondition",
        "assertUndeclared",
        "testIllegalArgumentIfNotHook",
        "removeFirstChild",
        "getTask",
        "testPropertyOfChildFuncOfUncollapsibleObjectDepth2",
        "testNoSimplifyFunctionArgs3",
        "unaryExpr",
        "getOwnPropertyNames",
        "release",
        "testNestedAssign1",
        "testDontCrashIfTheresNoQualifiedName",
        "createObjectLiteral",
        "testStaticFunctionReferencingThis2",
        "checkNameUsage",
        "FunctionAnalyzer",
        "testDefinitionInExterns",
        "CSSCharsetRule",
        "testSetPropertyReadByGeneratedCode",
        "testSwitch1",
        "testComplexNoInline2",
        "testLoop2",
        "testSimpleForWithContinue",
        "badRead",
        "setFlag",
        "assertRegionWellFormed",
        "testNotAllIndexKnown",
        "traverseAndRemoveUnusedReferences",
        "recordClassConstructorOrInterface",
        "isQualifiedName",
        "addChildrenToFront",
        "initIterator",
        "testInlineFunctions2",
        "getLevelName",
        "hasMoreThanOneChild",
        "testExternSubTypes",
        "HTMLAreaElement",
        "findIndex",
        "testInlineFunctions9",
        "copyNameAnnotations",
        "getWarningCount",
        "declareVar",
        "isConnectedInDirection",
        "setString",
        "getCodingConvention",
        "RemoveCallback",
        "setItem",
        "Date",
        "traverseNew",
        "getPropertyVar",
        "testThatNumbersArentDeprecated",
        "testSplitFileLevel",
        "testNamespacedDefine2",
        "createModuleChain",
        "DOMErrorHandler",
        "testNoInlineGetEle",
        "acquireSymbolTable",
        "testExportedName",
        "testRenamingMap",
        "removeUnreferencedVars",
        "testWithStatement",
        "testParam",
        "addToUseIfLocal",
        "testNamedType",
        "testInfiniteLoop2",
        "DettachPoint",
        "isImplicitReturn",
        "testCanStillCallNumberWithoutNewOperator",
        "plainProperty",
        "inLoop",
        "Normalize",
        "testNoRemoveAssign1",
        "lazyInitInfo",
        "TestCallback",
        "testOneFile",
        "testReplaceIdentityFunction2",
        "CheckMissingReturn",
        "ReplaceCssNamesTest",
        "testMergeBlock2",
        "testLiteralMovement4",
        "visitPostOrder",
        "testConstantInitializedInAnonymousNamespace1",
        "testBadCollapseIntoCall",
        "recordSizeChange",
        "trySimplify",
        "testSwitchCase",
        "testDeclare",
        "NameAndInstrumentFunctions",
        "testDoNotExitForLoop",
        "testClassDefiningCallWithStripType8",
        "sanityCheckNormalization",
        "evaluate",
        "getNumber",
        "testTopLevelClass1",
        "inlineCostDelta",
        "caseUnionType",
        "testExposeExpression5",
        "cloneTree",
        "getFileOverviewJSDocInfo",
        "recordAccessor",
        "fixFunctionType",
        "getConcreteInstance",
        "ControlStructureCheck",
        "onInvalidIndex",
        "formatDetailedMessage",
        "isJSSpace",
        "testSharedFunctionName1",
        "testStringJoinAdd",
        "testNoMemberDeclarations",
        "testUnreachableCatch",
        "testInheritanceDetectionPostCollapseProperties",
        "setDebugInformation",
        "setLineno",
        "addNumber",
        "testSplitVar",
        "testAssignBeforeDeclaration2",
        "Event",
        "testNestedObjLit",
        "testSwitchDefaultFirst",
        "SideEffected",
        "testForContinueOptimization",
        "testAssignmentToPrototype4",
        "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2",
        "StringOccurrence",
        "isArrayType",
        "testAnonymous7",
        "testComplex5",
        "createUndirectedGraphNode",
        "testRemoveInControlStructure3",
        "recordNoShadow",
        "alert",
        "testMutateValueReturnWithoutResultAssignment",
        "testLoggerDefinedInPrototype",
        "setLicense",
        "testInsideOrBranchInsideIfConditionalWithConstant",
        "getVisitedScopes",
        "parseBasicTypeExpression",
        "LiveRangeChecker",
        "testNoInlineOfExternMethods2",
        "testFoldArrayLength",
        "testRemovalMultipleAssignmentInIf1",
        "testComplexInline8",
        "isBooleanObjectType",
        "testLoggerDefinedStaticallyAndUsedInConstructor",
        "testInlineFunctionWithArgsMismatch2",
        "HTMLMenuElement",
        "recordParameter",
        "testAnalyzeUnusedPrototypeProperties3",
        "hasAnySingletonTypeTags",
        "testInlineIntoExpressions",
        "maybeAddFunction",
        "incrementNameCount",
        "getDirectImplementors",
        "setIn",
        "ConcreteFunctionType",
        "testInlineFunctions14",
        "getSourceAst",
        "setCode",
        "not",
        "tryFoldDo",
        "isConst",
        "testStableRenameLocalsClashingWithGlobals",
        "testRenamingConstants",
        "dependsOn",
        "testNewOperator",
        "testSetterInForStruct7",
        "tryFoldFor",
        "testNoInlineIfParametersModified6",
        "parseAndRecordParamTypeNode",
        "testSuspiciousSemi",
        "isForward",
        "RenameLabels",
        "lo0bits",
        "count",
        "testRemoveAbstract",
        "flattenPrefixes",
        "isTheObjectType",
        "testComma1",
        "Comparator<Property>",
        "formatSetPropFn",
        "testPruningCallbackShouldTraverse1",
        "testLocalAlias1",
        "buildCallNode",
        "joinInputs",
        "testInvalidFunctionDecl2",
        "testInlineExpressions12",
        "testTwoRequiredOneOptionalFifthVarArgReferenced",
        "AmbiguateProperties",
        "getParentScope",
        "testFoldComplex",
        "testStableSimple3",
        "addActivationName",
        "testNew1",
        "testInherits6",
        "addFixedPointLoop",
        "getOutEdges",
        "checkNameDeprecation",
        "Comparator<Var>",
        "hasEnumParameterType",
        "clearTemplateTypeName",
        "getReasonWhyNotAssignable",
        "testInlineBlockMutableArgs1",
        "getEnclosingFunctionDependencyScope",
        "connectToPossibleExceptionHandler",
        "getValueType",
        "recordDefineType",
        "initAnnotationNames",
        "setOut",
        "testBuiltInTypeDifferentParamType",
        "isNumberObjectType",
        "lookupProperty",
        "testPreserveTryBlockContainingReturnStatement",
        "level",
        "reusePropertyNames",
        "justTransform",
        "ShowByPathWarningsGuard",
        "testCostBasedInliningComplex5",
        "removeParamOrVar",
        "testLateProvides",
        "testVarReferenceInExterns",
        "testBadFunctionTypeDefinition",
        "testMutateCallInLoopVars1",
        "testConditionallyDefinedFunction2",
        "SpecialReferenceNode",
        "testInnerFunctionLocalVar",
        "JSDocInfo",
        "testMutateNoReturnWithoutResultAssignment",
        "computeGenKill",
        "shouldRemove",
        "testNoInlineIfParametersModified8",
        "CSSRule",
        "RemoveUnusedVarsTest",
        "hasName",
        "resetUniqueNameId",
        "add",
        "testWarningForDeprecatedSuperClass2",
        "testGlobalThis5",
        "testUnintendedUseOfInheritsInLocalScope4",
        "getParamVar",
        "testConstantArgumentsToConstructorCanBeOptimized",
        "testHook4",
        "regexpEscape",
        "testReplaceReturnConst3",
        "getAnnotation",
        "getOffset",
        "notifyOfRemoval",
        "testRefToUndefinedProperty3",
        "testLiteralMovement2",
        "testInlineNeverPartialSubtitution1",
        "testCallInExterns",
        "lookupSourceName",
        "getJsDocToken",
        "eval",
        "testFunctionNameReuse",
        "assertPasses",
        "testMaybeAddTempsForCallArguments9",
        "testDoNotInlineDecrement",
        "testNamespacedFunctionStub",
        "testInlineStringWhenWorthwhile",
        "testAliasMethodsDontGetOptimize3",
        "getPrototypePropertyOwner",
        "isUnknownType",
        "testStubMethodMovement2",
        "inlineWellDefinedVariable",
        "testExposeExpression7",
        "getLabel",
        "tryFoldStringIndexOf",
        "assertLiveBeforeX",
        "testNoRemoveVar2",
        "CSSMediaRule",
        "getFunctionScope",
        "isTestFunction",
        "ConcreteSlot",
        "foldSame",
        "testConditionalCall",
        "DocumentCSS",
        "testUnknownType1",
        "testNoInlineGetProp2",
        "canExposeExpression",
        "testVarArgsLast",
        "peekTokenOrEOL",
        "isLhsOfForInExpression",
        "testSimpleCatch",
        "loadPrototype",
        "bitOrExpr",
        "testUndefinedComparison",
        "testNoRemoveAssign2",
        "processTryStatement",
        "getReturnType",
        "parseFloat",
        "getChildCount",
        "testCostBasedInlining9",
        "AnonymousFunctionNamingPolicy",
        "testFoldArithmeticStringComp",
        "checkNameUse",
        "UnrecognizedRequire",
        "MarkNoSideEffectCallsAndNameAnalyzerRunner",
        "processWhileLoop",
        "testRhsReference1",
        "RestrictByFalseInstanceOfResultVisitor",
        "bitXorExpr",
        "HTMLDocument",
        "setOptimizationLevel",
        "formatRegion",
        "matchingExitNode",
        "isValidPropertyName",
        "processAllTasks",
        "testRegexesCanBeInlined",
        "getReplacementName",
        "setOptionalArg",
        "testAbbreviatedArithmeticAssignment1",
        "testGlobalAssigment",
        "createDefaultOptions",
        "testInlineReferenceInExpression11",
        "StandardUnionFind",
        "setState",
        "testConstructorUsedAsFunctionCanBeOptimized",
        "testShadowVariables2",
        "cloneNode",
        "ThrowAliasSpecification",
        "getTemplateTypeName",
        "testObjLitDeclarationUsedInSameVarList",
        "testMaybeAddTempsForCallArguments4",
        "testContinueToSwitchWithNoCases",
        "testNoProblem",
        "getTypeAlternatives",
        "CanvasPixelArray",
        "testChainedAssignments1",
        "clearCachedSource",
        "assertMismatches",
        "newParameter",
        "testComplexInlineNoResultWithParamCall2",
        "NoRewriteNonCallReferenceTestInput",
        "testNoDefinition",
        "Position",
        "testSimpleDottedAdditionalProvide",
        "DisambiguatePropertiesTest",
        "findParametersReferencedAfterSideEffect",
        "testInlineConstructor4",
        "getSynthesizedExternsInput",
        "testInlineInFunction4",
        "visitFunction",
        "testExpressionVariableReassignment",
        "process",
        "testGlobalVarSetToObjLitConditionally2",
        "testMakeLocalNamesUniqueWithContext",
        "processVariableInitializer",
        "testCatch1",
        "key",
        "testTwoFields",
        "testRestrictToInterfaceCast",
        "hasEncounteredAllErrors",
        "DOMLocator",
        "checkForHosedThisReferences",
        "GlobalTypeResolver",
        "testNamePrefix",
        "testObjectLiterals",
        "testCanExposeExpression3",
        "testDoNotRemoveNormal",
        "testMaybeAddTempsForCallArguments26",
        "getQualifiedName",
        "replaceChildAfter",
        "mayBePure",
        "testIf",
        "createDefaultNamespace",
        "testInlineReferenceInExpression8",
        "testInlineFunctions5",
        "getAddingRoot",
        "testStaticMethod1",
        "processEmptyExpression",
        "testNoProtectedAccessForProperties5",
        "getSlots",
        "testPropertyReferenceGraph",
        "testMoveExpression7",
        "testAliasCreatedForEnumDepth1_2",
        "expectAllInterfacePropertiesImplemented",
        "getErrorReporter",
        "testAssignOps",
        "getExports",
        "testInlineExpression9",
        "HTMLTextAreaElement",
        "DOMStringList",
        "TypeCheck",
        "calcZippedSize",
        "isReservedKeywordAsIdentifier",
        "verifyProvide",
        "recordFileOverview",
        "testRValueReference5",
        "testTwoMethods",
        "addProperty",
        "ErrorFunctionType",
        "helperMutate",
        "testHaltAtSideEffects2",
        "reportLineCut",
        "createUnionWithSubTypes",
        "testAliasMethodsDontGetOptimize",
        "getUniqueAnonymousParameterName",
        "tryReplaceArguments",
        "testMixedQuotedAndUnquotedObjLitKeys",
        "hasThisType",
        "HTMLFrameElement",
        "testPrivateAccessForNames",
        "getImplicitActions",
        "matchLabel",
        "error",
        "LiveVariableLattice",
        "SemanticReverseAbstractInterpreter",
        "testHaltAtSideEffects5",
        "extractClassNameIfGoog",
        "handleDefault",
        "testObjLitAssignmentDepth3",
        "testConstantArrayInline",
        "createDoWhile",
        "doAlias",
        "hasParsedJSDocInfo",
        "CompilerInput",
        "testJoin1",
        "testRhsAssign2",
        "rewriteDefinition",
        "testShortCircuit5",
        "xDigitToInt",
        "detachChildren",
        "HTMLHRElement",
        "testComplexNestedAssigns3",
        "copyInformationFrom",
        "isCallSite",
        "CombinedCfgNodeLiveRangeChecker",
        "getLastValue",
        "AliasKeywords",
        "parseTestCode",
        "makeVariableMap",
        "testJoin2",
        "testCallIsIgnore",
        "testExtendNativeType",
        "testSynBlock",
        "testForwardVarReferenceInLocalScope1",
        "testVarDeclaration",
        "assertDownEdge",
        "CharacterData",
        "isGeneratingSource",
        "isNoAlias",
        "testUint32String",
        "getTypesWithProperty",
        "Collapse",
        "ModuleDependenceException",
        "wrapNode",
        "checkKeepSimplifiedShortCircuitExpr",
        "testMaybeAddTempsForCallArguments2",
        "testGetElemOnThis",
        "testOrOperator2",
        "getNativeObjectType",
        "allDefinitionsEquivalent",
        "generatePreProcessThrowCode",
        "runFindHighestTypeInChain",
        "restrictParameter",
        "testNoPrivateAccessForProperties6",
        "LinkedUndirectedGraphNode",
        "testTwoTypes",
        "markAnnotation",
        "popNodeAnnotations"
      ]
    },
    "file": {
      "file_name": "TypedScopeCreator.java",
      "file_nloc": 842,
      "file_complexity": 242,
      "file_token_count": 6130,
      "file_before": "",
      "file_after": "",
      "file_patch": "@@ -0,0 +1,1267 @@\n+/*\n+ * Copyright 2004 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.javascript.jscomp;\n+\n+import static com.google.javascript.jscomp.TypeCheck.ENUM_DUP;\n+import static com.google.javascript.jscomp.TypeCheck.ENUM_NOT_CONSTANT;\n+import static com.google.javascript.jscomp.TypeCheck.MULTIPLE_VAR_DEF;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.ARRAY_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.BOOLEAN_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.DATE_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.ERROR_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.EVAL_ERROR_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.FUNCTION_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.OBJECT_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.NO_OBJECT_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.NO_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.OBJECT_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.RANGE_ERROR_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.REFERENCE_ERROR_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.REGEXP_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.STRING_OBJECT_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.UNKNOWN_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.URI_ERROR_FUNCTION_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE;\n+import static com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import javax.annotation.Nullable;\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import com.google.javascript.jscomp.CodingConvention.DelegateRelationship;\n+import com.google.javascript.jscomp.CodingConvention.ObjectLiteralCast;\n+import com.google.javascript.jscomp.CodingConvention.SubclassRelationship;\n+import com.google.javascript.jscomp.CodingConvention.SubclassType;\n+import com.google.javascript.jscomp.NodeTraversal.AbstractShallowCallback;\n+import com.google.javascript.jscomp.Scope.Var;\n+import com.google.javascript.rhino.JSDocInfo;\n+import com.google.javascript.rhino.Node;\n+import com.google.javascript.rhino.Token;\n+import com.google.javascript.rhino.jstype.EnumType;\n+import com.google.javascript.rhino.jstype.FunctionParamBuilder;\n+import com.google.javascript.rhino.jstype.FunctionType;\n+import com.google.javascript.rhino.jstype.JSType;\n+import com.google.javascript.rhino.jstype.JSTypeNative;\n+import com.google.javascript.rhino.jstype.JSTypeRegistry;\n+import com.google.javascript.rhino.jstype.ObjectType;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Creates the symbol table of variables available in the current scope and\n+ * their types.\n+ *\n+ * Scopes created by this class are very different from scopes created\n+ * by the syntactic scope creator. These scopes have type information, and\n+ * include some qualified names in addition to variables\n+ * (like Class.staticMethod).\n+ *\n+ * When building scope information, also declares relevant information\n+ * about types in the type registry.\n+ */\n+final class TypedScopeCreator implements ScopeCreator {\n+\n+  static final DiagnosticType MALFORMED_TYPEDEF =\n+      DiagnosticType.warning(\n+          \"JSC_MALFORMED_TYPEDEF\",\n+          \"Typedef for {0} does not have any type information\");\n+\n+  static final DiagnosticType ENUM_INITIALIZER =\n+      DiagnosticType.warning(\n+          \"JSC_ENUM_INITIALIZER_NOT_ENUM\",\n+          \"enum initializer must be an object literal or an enum\");\n+\n+  static final DiagnosticType CONSTRUCTOR_EXPECTED =\n+      DiagnosticType.warning(\n+          \"JSC_REFLECT_CONSTRUCTOR_EXPECTED\",\n+          \"Constructor expected as first argument\");\n+\n+  private final AbstractCompiler compiler;\n+  private final TypeValidator validator;\n+  private final CodingConvention codingConvention;\n+  private final JSTypeRegistry typeRegistry;\n+  private Map<ObjectType, ObjectType> delegateProxyMap = Maps.newHashMap();\n+\n+  TypedScopeCreator(AbstractCompiler compiler) {\n+    this(compiler, compiler.getCodingConvention());\n+  }\n+\n+  TypedScopeCreator(AbstractCompiler compiler,\n+      CodingConvention codingConvention) {\n+    this.compiler = compiler;\n+    this.validator = compiler.getTypeValidator();\n+    this.codingConvention = codingConvention;\n+    this.typeRegistry = compiler.getTypeRegistry();\n+  }\n+\n+  /**\n+   * Creates a scope with all types declared. Declares newly discovered types\n+   * and type properties in the type registry.\n+   */\n+  public Scope createScope(Node root, Scope parent) {\n+    // Constructing the global scope is very different than constructing\n+    // inner scopes, because only global scopes can contain named classes that\n+    // show up in the type registry.\n+    Scope newScope = null;\n+    if (parent == null) {\n+      // Find all the classes in the global scope.\n+      newScope = createInitialScope(root);\n+\n+      GlobalScopeBuilder scopeBuilder = new GlobalScopeBuilder(newScope);\n+      NodeTraversal.traverse(compiler, root, scopeBuilder);\n+\n+      // Gather the properties in each function that we found in the\n+      // global scope, if that function has a @this type that we can\n+      // build properties on.\n+      for (Node functionNode : scopeBuilder.nonExternFunctions) {\n+        JSType type = functionNode.getJSType();\n+        if (type != null && type instanceof FunctionType) {\n+          FunctionType fnType = (FunctionType) type;\n+          ObjectType fnThisType = fnType.getTypeOfThis();\n+          if (!fnThisType.isUnknownType()) {\n+            NodeTraversal.traverse(compiler, functionNode.getLastChild(),\n+                scopeBuilder.new CollectProperties(fnThisType));\n+          }\n+        }\n+      }\n+\n+      codingConvention.defineDelegateProxyProperties(\n+          typeRegistry, newScope, delegateProxyMap);\n+    } else {\n+      newScope = new Scope(parent, root);\n+      (new LocalScopeBuilder(newScope)).build();\n+    }\n+    typeRegistry.resolveTypesInScope(newScope);\n+    return newScope;\n+  }\n+\n+  /**\n+   * Create the outermost scope. This scope contains native binding such as\n+   * {@code Object}, {@code Date}, etc.\n+   */\n+  @VisibleForTesting\n+  Scope createInitialScope(Node root) {\n+    Scope s = new Scope(root, compiler);\n+    declareNativeFunctionType(s, ARRAY_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, BOOLEAN_OBJECT_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, DATE_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, ERROR_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, EVAL_ERROR_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, FUNCTION_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, NUMBER_OBJECT_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, OBJECT_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, RANGE_ERROR_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, REFERENCE_ERROR_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, REGEXP_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, STRING_OBJECT_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, SYNTAX_ERROR_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, TYPE_ERROR_FUNCTION_TYPE);\n+    declareNativeFunctionType(s, URI_ERROR_FUNCTION_TYPE);\n+    declareNativeValueType(s, \"undefined\", VOID_TYPE);\n+\n+    // The typedef construct needs the any type, so that it can be assigned\n+    // to anything. This is kind of a hack, and an artifact of the typedef\n+    // syntax we've chosen.\n+    declareNativeValueType(s, \"goog.typedef\", NO_TYPE);\n+\n+    // ActiveXObject is unqiuely special, because it can be used to construct\n+    // any type (the type that it creates is related to the arguments you\n+    // pass to it).\n+    declareNativeValueType(s, \"ActiveXObject\", NO_OBJECT_TYPE);\n+\n+    return s;\n+  }\n+\n+  private void declareNativeFunctionType(Scope scope, JSTypeNative tId) {\n+    FunctionType t = typeRegistry.getNativeFunctionType(tId);\n+    declareNativeType(scope, t.getInstanceType().getName(), t);\n+    declareNativeType(scope, t.getPrototype().getName(), t.getPrototype());\n+  }\n+\n+  private void declareNativeValueType(Scope scope, String name,\n+      JSTypeNative tId) {\n+    declareNativeType(scope, name, typeRegistry.getNativeType(tId));\n+  }\n+\n+  private void declareNativeType(Scope scope, String name, JSType t) {\n+    scope.declare(name, null, t, null, false);\n+  }\n+\n+  /**\n+   * Given a node, determines whether that node names a prototype\n+   * property, and if so, returns the qualfied name node representing\n+   * the owner of that property. Otherwise, returns null.\n+   */\n+  private static Node getPrototypePropertyOwner(Node n) {\n+    if (n.getType() == Token.GETPROP) {\n+      Node firstChild = n.getFirstChild();\n+      if (firstChild.getType() == Token.GETPROP &&\n+          firstChild.getLastChild().getString().equals(\"prototype\")) {\n+        Node maybeOwner = firstChild.getFirstChild();\n+        if (maybeOwner.isQualifiedName()) {\n+          return maybeOwner;\n+        }\n+      }\n+    }\n+    return null;\n+  }\n+\n+  private abstract class AbstractScopeBuilder\n+      implements NodeTraversal.Callback {\n+\n+    /**\n+     * The scope that we're builidng.\n+     */\n+    final Scope scope;\n+\n+    /**\n+     * The current source file that we're in.\n+     */\n+    private String sourceName = null;\n+\n+    private AbstractScopeBuilder(Scope scope) {\n+      this.scope = scope;\n+    }\n+\n+    @Override\n+    public final boolean shouldTraverse(NodeTraversal nodeTraversal, Node n,\n+        Node parent) {\n+      if (n.getType() == Token.FUNCTION ||\n+          n.getType() == Token.SCRIPT) {\n+        sourceName = (String) n.getProp(Node.SOURCENAME_PROP);\n+      }\n+\n+      // We do want to traverse the name of a named function, but we don't\n+      // want to traverse the arguments or body.\n+      return parent == null || parent.getType() != Token.FUNCTION ||\n+          n == parent.getFirstChild() || parent == scope.getRootNode();\n+    }\n+\n+    @Override\n+    public abstract void visit(NodeTraversal t, Node n, Node parent);\n+\n+    /**\n+     * Returns the type specified in a JSDoc annotation near a GETPROP or NAME.\n+     *\n+     * Extracts type information from either the {@code @type} tag or from\n+     * the {@code @return} and {@code @param} tags.\n+     */\n+    JSType getDeclaredTypeInAnnotation(\n+        NodeTraversal t, Node node, JSDocInfo info) {\n+      return getDeclaredTypeInAnnotation(t.getSourceName(), node, info);\n+    }\n+\n+    JSType getDeclaredTypeInAnnotation(String sourceName,\n+        Node node, JSDocInfo info) {\n+      JSType jsType = null;\n+      Node objNode = node.getType() == Token.GETPROP ?\n+          node.getFirstChild() : null;\n+      if (info != null) {\n+        if (info.hasType()) {\n+          jsType = info.getType().evaluate(scope);\n+        } else if (FunctionTypeBuilder.isFunctionTypeDeclaration(info)) {\n+          String fnName = node.getQualifiedName();\n+\n+          // constructors are often handled separately.\n+          if (info.isConstructor() && typeRegistry.getType(fnName) != null) {\n+            return null;\n+          }\n+\n+          FunctionTypeBuilder builder =\n+              new FunctionTypeBuilder(\n+                  fnName, compiler, node, sourceName, scope)\n+              .inferTemplateTypeName(info)\n+              .inferReturnType(info)\n+              .inferParameterTypes(info)\n+              .inferInheritance(info);\n+\n+          // Infer the context type.\n+          boolean searchedForThisType = false;\n+          if (objNode != null) {\n+            if (objNode.getType() == Token.GETPROP &&\n+                objNode.getLastChild().getString().equals(\"prototype\")) {\n+              builder.inferThisType(info, objNode.getFirstChild());\n+              searchedForThisType = true;\n+            } else if (objNode.getType() == Token.THIS) {\n+              builder.inferThisType(info, objNode.getJSType());\n+              searchedForThisType = true;\n+            }\n+          }\n+\n+          if (!searchedForThisType) {\n+            builder.inferThisType(info, (Node) null);\n+          }\n+\n+          jsType = builder.buildAndRegister();\n+        }\n+      }\n+      return jsType;\n+    }\n+\n+    /**\n+     * Defines variable(s) or modifies types based on the content of the node\n+     * {@code n}. A variable definition creates variables in the current scope,\n+     * a function definition creates a binding, and an assignment updates the\n+     * type of the namespaces on which the definition is made (e.g.\n+     * {@code goog.FOO = 6}).\n+     * @param n a {@link Token#VAR}, {@link Token#FUNCTION} or\n+     *     {@link Token#ASSIGN} node\n+     * @param parent {@code n}'s parent\n+     */\n+    void define(Node n, Node parent) {\n+      Preconditions.checkState(sourceName != null);\n+\n+      JSDocInfo info = n.getJSDocInfo();\n+      switch (n.getType()) {\n+        case Token.CATCH:\n+          Node catchName = n.getFirstChild();\n+          defineSlot(catchName, n, null);\n+          break;\n+\n+        case Token.VAR:\n+          if (n.getChildCount() > 1) {\n+            if (info != null) {\n+              // multiple children\n+              compiler.report(JSError.make(sourceName, n, MULTIPLE_VAR_DEF));\n+            }\n+            for (Node name : n.children()) {\n+              defineName(name, n, parent, name.getJSDocInfo());\n+            }\n+          } else {\n+            Node name = n.getFirstChild();\n+            defineName(name, n, parent,\n+                (info != null) ? info : name.getJSDocInfo());\n+          }\n+          break;\n+\n+        case Token.FUNCTION:\n+          int parentType = parent.getType();\n+          Preconditions.checkState(\n+              (scope.isLocal() || parentType != Token.ASSIGN) &&\n+              parentType != Token.NAME,\n+              \"function defined as standalone function when it is being \" +\n+              \"assigned\");\n+          String functionName = n.getFirstChild().getString();\n+          FunctionType functionType = getFunctionType(functionName, n, info,\n+              null);\n+          if (NodeUtil.isFunctionDeclaration(n)) {\n+            defineSlot(n.getFirstChild(), n, functionType);\n+          }\n+          break;\n+\n+        case Token.ASSIGN:\n+          // TODO(nicksantos): We should support direct assignment to a\n+          // prototype, as in:\n+          // Foo.prototype = {\n+          //   a: function() { ... },\n+          //   b: function() { ... }\n+          // };\n+          // Right now (6/23/08), we understand most of this syntax, but we\n+          // don't tie the \"a\" and \"b\" methods to the context of Foo.\n+\n+          Node rvalue = n.getLastChild();\n+          Node lvalue = n.getFirstChild();\n+          info = (info != null) ? info : rvalue.getJSDocInfo();\n+          if (rvalue.getType() == Token.FUNCTION ||\n+              info != null && info.isConstructor()) {\n+            getFunctionType(lvalue.getQualifiedName(), rvalue, info,\n+                lvalue);\n+          } else if (info != null && info.hasEnumParameterType()) {\n+            lvalue.setJSType(\n+                getEnumType(lvalue.getQualifiedName(), n, rvalue,\n+                    info.getEnumParameterType().evaluate(scope)));\n+          }\n+          break;\n+\n+        default:\n+          throw new IllegalStateException(Integer.toString(n.getType()));\n+      }\n+    }\n+\n+    /**\n+     * Defines a variable based on the {@link Token#NAME} node passed.\n+     * @param name The {@link Token#NAME} node.\n+     * @param var The parent of the {@code name} node, which must be a\n+     *     {@link Token#VAR} node.\n+     * @param parent {@code var}'s parent.\n+     * @param info the {@link JSDocInfo} information relating to this\n+     *     {@code name} node.\n+     */\n+    private void defineName(Node name, Node var, Node parent, JSDocInfo info) {\n+      Node value = name.getFirstChild();\n+\n+      if (value != null && value.getType() == Token.FUNCTION) {\n+        // function\n+        String functionName = name.getString();\n+        FunctionType functionType =\n+            getFunctionType(functionName, value, info, null);\n+        defineSlot(name, var, functionType);\n+      } else {\n+        // variable's type\n+        JSType type = null;\n+        if (info == null) {\n+          // the variable's type will be inferred\n+          CompilerInput input = compiler.getInput(sourceName);\n+          Preconditions.checkNotNull(input, sourceName);\n+          type = input.isExtern() ?\n+              typeRegistry.getNativeType(UNKNOWN_TYPE) : null;\n+        } else if (info.hasEnumParameterType()) {\n+          type = getEnumType(name.getString(), var, value,\n+              info.getEnumParameterType().evaluate(scope));\n+        } else if (info.isConstructor()) {\n+          type = getFunctionType(name.getString(), value, info, name);\n+        } else {\n+          type = getDeclaredTypeInAnnotation(sourceName, name, info);\n+        }\n+\n+        defineSlot(name, var, type);\n+      }\n+    }\n+\n+    /**\n+     * Gets the function type from the function node and its attached\n+     * {@link JSDocInfo}.\n+     * @param name the function's name\n+     * @param rValue the function node. It must be a {@link Token#FUNCTION}.\n+     * @param info the {@link JSDocInfo} attached to the function definition\n+     * @param lvalueNode The node where this function is being\n+     *     assigned. For example, {@code A.prototype.foo = ...} would be used to\n+     *     determine that this function is a method of A.prototype. May be\n+     *     null to indicate that this is not being assigned to a qualified name.\n+     */\n+    private FunctionType getFunctionType(String name,\n+        Node rValue, JSDocInfo info, @Nullable Node lvalueNode) {\n+      FunctionType functionType = null;\n+\n+      // Handle function aliases.\n+      if (rValue != null && rValue.isQualifiedName()) {\n+        Var var = scope.getVar(rValue.getQualifiedName());\n+        if (var != null && var.getType() instanceof FunctionType) {\n+          functionType = (FunctionType) var.getType();\n+          if (functionType != null && functionType.isConstructor()) {\n+            typeRegistry.declareType(name, functionType.getInstanceType());\n+          }\n+        }\n+        return functionType;\n+      }\n+\n+      Node owner = null;\n+      if (lvalueNode != null) {\n+        owner = getPrototypePropertyOwner(lvalueNode);\n+      }\n+\n+      Node errorRoot = rValue == null ? lvalueNode : rValue;\n+      boolean isFnLiteral =\n+          rValue != null && rValue.getType() == Token.FUNCTION;\n+      Node fnRoot = isFnLiteral ? rValue : null;\n+      Node parametersNode = isFnLiteral ?\n+          rValue.getFirstChild().getNext() : null;\n+\n+      if (functionType == null && info != null && info.hasType()) {\n+        JSType type = info.getType().evaluate(scope);\n+\n+        // Known to be not null since we have the FUNCTION token there.\n+        type = type.restrictByNotNullOrUndefined();\n+        if (type.isFunctionType()) {\n+          functionType = (FunctionType) type;\n+          functionType.setJSDocInfo(info);\n+        }\n+      }\n+\n+      if (functionType == null) {\n+        if (info == null ||\n+            !FunctionTypeBuilder.isFunctionTypeDeclaration(info)) {\n+          // We don't really have any type information in the annotation.\n+          // Before we give up on this function, look at the object we're\n+          // assigning it to. For example, if the function looks like this:\n+          // SubFoo.prototype.bar = function() { ... };\n+          // We can use type information on Foo.prototype.bar and apply it\n+          // to this function.\n+          if (lvalueNode != null && lvalueNode.getType() == Token.GETPROP &&\n+              lvalueNode.isQualifiedName()) {\n+            Var var = scope.getVar(\n+                lvalueNode.getFirstChild().getQualifiedName());\n+            if (var != null) {\n+              JSType ownerType = var.getType();\n+              if (ownerType instanceof ObjectType) {\n+                String propName = lvalueNode.getLastChild().getString();\n+                JSType propType =\n+                    ((ObjectType) ownerType).getPropertyType(propName);\n+                if (propType instanceof FunctionType) {\n+                  functionType =\n+                      new FunctionTypeBuilder(\n+                          name, compiler, errorRoot, sourceName, scope)\n+                      .setSourceNode(fnRoot)\n+                      .inferFromOverriddenFunction(\n+                          (FunctionType) propType, parametersNode)\n+                      .inferThisType(info, owner)\n+                      .buildAndRegister();\n+                }\n+              }\n+            }\n+          }\n+        }\n+      } // end if (functionType == null)\n+\n+      if (functionType == null) {\n+        functionType =\n+            new FunctionTypeBuilder(name, compiler, errorRoot, sourceName,\n+                scope)\n+            .setSourceNode(fnRoot)\n+            .inferTemplateTypeName(info)\n+            .inferReturnType(info)\n+            .inferInheritance(info)\n+            .inferThisType(info, owner)\n+            .inferParameterTypes(parametersNode, info)\n+            .buildAndRegister();\n+      }\n+\n+      // assigning the function type to the function node\n+      if (rValue != null) {\n+        rValue.setJSType(functionType);\n+      }\n+\n+      // all done\n+      return functionType;\n+    }\n+\n+    /**\n+     * Gets an enum type. If the definition is correct, the object literal used\n+     * to define the enum is traversed to gather the elements name, and this\n+     * method checks for duplicates. This method also enforces that all\n+     * elements' name be syntactic constants according to the\n+     * {@link CodingConvention} used.\n+     *\n+     * @param name the enum's name such as {@code HELLO} or {@code goog.foo.BAR}\n+     * @param value the enum's original value. This value may be {@code null}.\n+     * @param parent the value's parent\n+     * @param elementsType the type of the elements of this enum\n+     * @return the enum type\n+     */\n+    private EnumType getEnumType(String name, Node parent,\n+        Node value, JSType elementsType) {\n+      EnumType enumType = null;\n+\n+      // no value with @enum\n+      if (value != null) {\n+        if (value.getType() == Token.OBJECTLIT) {\n+          // collect enum elements\n+          enumType = typeRegistry.createEnumType(name, elementsType);\n+\n+          // populate the enum type.\n+          Node key = value.getFirstChild();\n+          while (key != null) {\n+            String keyName = NodeUtil.getStringValue(key);\n+\n+            if (enumType.hasOwnProperty(keyName)) {\n+              compiler.report(JSError.make(sourceName, key, ENUM_DUP, keyName));\n+            } else if (!codingConvention.isValidEnumKey(keyName)) {\n+              compiler.report(\n+                  JSError.make(sourceName, key, ENUM_NOT_CONSTANT, keyName));\n+            } else {\n+              enumType.defineElement(keyName);\n+            }\n+            key = key.getNext();\n+            key = (key == null) ? null : key.getNext();\n+          }\n+        } else if (value.isQualifiedName()) {\n+          Var var = scope.getVar(value.getQualifiedName());\n+          if (var != null && var.getType() instanceof EnumType) {\n+            enumType = (EnumType) var.getType();\n+          }\n+        }\n+      }\n+\n+      if (enumType == null) {\n+        compiler.report(JSError.make(sourceName, parent, ENUM_INITIALIZER));\n+      } else if (scope.isGlobal()) {\n+        if (name != null && !name.isEmpty()) {\n+          typeRegistry.declareType(name, enumType.getElementsType());\n+        }\n+      }\n+\n+      return enumType;\n+    }\n+\n+    /**\n+     * Defines a typed variable. The defining node will be annotated with the\n+     * variable's type or {@code null} if its type is inferred.\n+     * @param name the defining node. It must be a {@link Token#NAME}.\n+     * @param parent the {@code name}'s parent.\n+     * @param type the variable's type. It may be {@code null}, in which case\n+     *     the variable's type will be inferred.\n+     */\n+    private void defineSlot(Node name, Node parent, JSType type) {\n+      defineSlot(name, parent, type, type == null);\n+    }\n+\n+    /**\n+     * Defines a typed variable. The defining node will be annotated with the\n+     * variable's type of {@link JSTypeNative#UNKNOWN_TYPE} if its type is\n+     * inferred.\n+     *\n+     * Slots may be any variable or any qualified name in the global scope.\n+     *\n+     * @param n the defining NAME or GETPROP node.\n+     * @param parent the {@code n}'s parent.\n+     * @param type the variable's type. It may be {@code null} if\n+     *     {@code inferred} is {@code true}.\n+     */\n+    void defineSlot(Node n, Node parent, JSType type, boolean inferred) {\n+      Preconditions.checkArgument(inferred || type != null);\n+\n+      // Only allow declarations of NAMEs and qualfied names.\n+      boolean shouldDeclareOnGlobalThis = false;\n+      if (n.getType() == Token.NAME) {\n+        Preconditions.checkArgument(\n+            parent.getType() == Token.FUNCTION ||\n+            parent.getType() == Token.VAR ||\n+            parent.getType() == Token.LP ||\n+            parent.getType() == Token.CATCH);\n+        shouldDeclareOnGlobalThis = scope.isGlobal() &&\n+            (parent.getType() == Token.VAR ||\n+             parent.getType() == Token.FUNCTION);\n+      } else {\n+        Preconditions.checkArgument(\n+            n.getType() == Token.GETPROP &&\n+            (parent.getType() == Token.ASSIGN ||\n+             parent.getType() == Token.EXPR_RESULT));\n+      }\n+      String variableName = n.getQualifiedName();\n+      Preconditions.checkArgument(!variableName.isEmpty());\n+\n+      // declared in closest scope?\n+      if (scope.isDeclared(variableName, false)) {\n+        Var oldVar = scope.getVar(variableName);\n+        validator.expectUndeclaredVariable(\n+            sourceName, n, parent, oldVar, variableName, type);\n+      } else {\n+        if (!inferred) {\n+          n.setJSType(type);\n+        }\n+        CompilerInput input = compiler.getInput(sourceName);\n+        scope.declare(variableName, n, type, input, inferred);\n+\n+        if (shouldDeclareOnGlobalThis) {\n+          ObjectType globalThis =\n+              typeRegistry.getNativeObjectType(JSTypeNative.GLOBAL_THIS);\n+          boolean isExtern = input.isExtern();\n+          if (inferred) {\n+            globalThis.defineInferredProperty(variableName,\n+                type == null ?\n+                    typeRegistry.getNativeType(JSTypeNative.NO_TYPE) :\n+                    type,\n+                isExtern);\n+          } else {\n+            globalThis.defineDeclaredProperty(variableName, type, isExtern);\n+          }\n+        }\n+\n+        // If we're in the global scope, also declare var.prototype\n+        // in the scope chain.\n+        if (scope.isGlobal() && type instanceof FunctionType) {\n+          FunctionType fnType = (FunctionType) type;\n+          if (fnType.isConstructor() || fnType.isInterface()) {\n+            FunctionType superClassCtor = fnType.getSuperClassConstructor();\n+            scope.declare(variableName + \".prototype\", n,\n+                fnType.getPrototype(), compiler.getInput(sourceName),\n+                /* declared iff there's an explicit supertype */\n+                superClassCtor == null ||\n+                superClassCtor.getInstanceType().equals(\n+                    typeRegistry.getNativeType(OBJECT_TYPE)));\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * A shallow traversal of the global scope to build up all classes,\n+   * functions, and methods.\n+   */\n+  private final class GlobalScopeBuilder extends AbstractScopeBuilder {\n+\n+    /**\n+     * Functions that we found in the global scope and not in externs.\n+     */\n+    private final List<Node> nonExternFunctions = Lists.newArrayList();\n+\n+    private GlobalScopeBuilder(Scope scope) {\n+      super(scope);\n+    }\n+\n+    /**\n+     * Visit a node in the global scope, and add anything it declares to the\n+     * global symbol table.\n+     *\n+     * @param t The current traversal.\n+     * @param n The node being visited.\n+     * @param parent The parent of n\n+     */\n+    @Override public void visit(NodeTraversal t, Node n, Node parent) {\n+      switch (n.getType()) {\n+        case Token.CALL:\n+          SubclassRelationship relationship =\n+              codingConvention.getClassesDefinedByCall(n);\n+          if (relationship != null) {\n+            JSType superClass =\n+                typeRegistry.getType(relationship.superclassName);\n+            JSType subClass = typeRegistry.getType(relationship.subclassName);\n+            if (superClass instanceof ObjectType &&\n+                subClass instanceof ObjectType) {\n+              ObjectType superObject = (ObjectType) superClass;\n+              ObjectType subObject = (ObjectType) subClass;\n+\n+              FunctionType superCtor = superObject.getConstructor();\n+              FunctionType subCtor = subObject.getConstructor();\n+\n+              if (relationship.type == SubclassType.INHERITS) {\n+                validator.expectSuperType(t, n, superObject, subObject);\n+              }\n+\n+              if (superCtor != null && subCtor != null) {\n+                codingConvention.applySubclassRelationship(\n+                    superCtor, subCtor, relationship.type);\n+              }\n+            }\n+          }\n+\n+          String singletonGetterClassName =\n+              codingConvention.getSingletonGetterClassName(n);\n+          if (singletonGetterClassName != null) {\n+            JSType classType = typeRegistry.getType(singletonGetterClassName);\n+            if (classType instanceof ObjectType) {\n+              ObjectType objectType = (ObjectType) classType;\n+              FunctionType functionType = objectType.getConstructor();\n+\n+              if (functionType != null) {\n+                FunctionType getterType = new FunctionType(\n+                    typeRegistry, null, null,\n+                    new FunctionParamBuilder(typeRegistry).build(),\n+                    objectType, null);\n+                codingConvention.applySingletonGetter(functionType, getterType,\n+                                                      objectType);\n+              }\n+            }\n+          }\n+\n+          DelegateRelationship delegateRelationship =\n+              codingConvention.getDelegateRelationship(n);\n+          if (delegateRelationship != null) {\n+            JSType delegatorClass =\n+                typeRegistry.getType(delegateRelationship.delegator);\n+            JSType delegateBaseClass =\n+                typeRegistry.getType(delegateRelationship.delegateBase);\n+            JSType delegateSuperClass = typeRegistry.getType(\n+                codingConvention.getDelegateSuperclassName());\n+            if (delegatorClass instanceof ObjectType &&\n+                delegateBaseClass instanceof ObjectType &&\n+                delegateSuperClass instanceof ObjectType) {\n+              ObjectType delegatorObject = (ObjectType) delegatorClass;\n+              ObjectType delegateBaseObject = (ObjectType) delegateBaseClass;\n+              ObjectType delegateSuperObject = (ObjectType) delegateSuperClass;\n+\n+              FunctionType delegatorCtor = delegatorObject.getConstructor();\n+              FunctionType delegateBaseCtor =\n+                  delegateBaseObject.getConstructor();\n+              FunctionType delegateSuperCtor =\n+                  delegateSuperObject.getConstructor();\n+\n+              if (delegatorCtor != null && delegateBaseCtor != null &&\n+                  delegateSuperCtor != null) {\n+                FunctionParamBuilder functionParamBuilder =\n+                    new FunctionParamBuilder(typeRegistry);\n+                functionParamBuilder.addRequiredParams(\n+                    typeRegistry.getNativeType(U2U_CONSTRUCTOR_TYPE));\n+                FunctionType findDelegate = new FunctionType(\n+                    typeRegistry, null, null, functionParamBuilder.build(),\n+                    typeRegistry.createNullableType(delegateBaseClass), null);\n+\n+                FunctionType delegateProxy =\n+                    typeRegistry.createConstructorType(\n+                        delegateBaseObject.getName(), null, null,\n+                        null);\n+                delegateProxy.setPrototypeBasedOn(delegateBaseCtor);\n+\n+                codingConvention.applyDelegateRelationship(\n+                    delegateSuperObject, delegateBaseObject, delegatorObject,\n+                    delegateProxy, findDelegate);\n+                delegateProxyMap.put(\n+                    delegateProxy.getPrototype(),\n+                    delegateBaseCtor.getPrototype());\n+              }\n+            }\n+          }\n+\n+          ObjectLiteralCast objectLiteralCast =\n+              codingConvention.getObjectLiteralCast(t, n);\n+          if (objectLiteralCast != null) {\n+            JSType type = typeRegistry.getType(objectLiteralCast.typeName);\n+            if (type instanceof ObjectType &&\n+                ((ObjectType) type).getConstructor() != null) {\n+              objectLiteralCast.objectNode.setJSType(type);\n+            } else {\n+              compiler.report(JSError.make(t.getSourceName(), n,\n+                                           CONSTRUCTOR_EXPECTED));\n+            }\n+          }\n+          break;\n+\n+        case Token.FUNCTION:\n+          if (!t.getInput().isExtern()) {\n+            nonExternFunctions.add(n);\n+          }\n+\n+          // VARs and ASSIGNs are handled separately.\n+          if (parent.getType() == Token.ASSIGN ||\n+              parent.getType() == Token.NAME) {\n+            return;\n+          }\n+          define(n, parent);\n+          break;\n+\n+        case Token.ASSIGN:\n+          // Handle constructor and enum definitions.\n+          define(n, parent);\n+\n+          // Handle typedefs.\n+          checkForOldStyleTypedef(t, n);\n+\n+          // Handle initialization of properties.\n+          Node firstChild = n.getFirstChild();\n+          if (firstChild.getType() == Token.GETPROP &&\n+              firstChild.isQualifiedName()) {\n+            maybeDeclareQualifiedName(t, n.getJSDocInfo(),\n+                firstChild, n, firstChild.getNext());\n+          }\n+          break;\n+\n+        case Token.CATCH:\n+          define(n, parent);\n+          break;\n+\n+        case Token.VAR:\n+          define(n, parent);\n+\n+          // Handle typedefs.\n+          if (n.hasOneChild()) {\n+            checkForOldStyleTypedef(t, n);\n+            checkForTypedef(t, n.getFirstChild(), n.getJSDocInfo());\n+          }\n+          break;\n+\n+        case Token.GETPROP:\n+          // Handle stubbed properties.\n+          if (parent.getType() == Token.EXPR_RESULT &&\n+              n.isQualifiedName()) {\n+            checkForTypedef(t, n, n.getJSDocInfo());\n+            maybeDeclareQualifiedName(t, n.getJSDocInfo(), n, parent, null);\n+          }\n+          break;\n+      }\n+    }\n+\n+    /**\n+     * Handle typedefs.\n+     * @param t The current traversal.\n+     * @param candidate A qualified name node.\n+     * @param info JSDoc comments.\n+     */\n+    private void checkForTypedef(\n+        NodeTraversal t, Node candidate, JSDocInfo info) {\n+      if (info == null || !info.hasTypedefType()) {\n+        return;\n+      }\n+\n+      String typedef = candidate.getQualifiedName();\n+      if (typedef == null) {\n+        return;\n+      }\n+\n+      // TODO(nicksantos|user): This is a terrible, terrible hack\n+      // to bail out on recusive typedefs. We'll eventually need\n+      // to handle these properly.\n+      typeRegistry.forwardDeclareType(typedef);\n+\n+      JSType realType = info.getTypedefType().evaluate(scope);\n+      if (realType == null) {\n+        compiler.report(\n+            JSError.make(\n+                t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n+      }\n+\n+      typeRegistry.declareType(typedef, realType);\n+      if (candidate.getType() == Token.GETPROP) {\n+        defineSlot(candidate, candidate.getParent(),\n+            typeRegistry.getNativeType(NO_TYPE), false);\n+      }\n+    }\n+\n+    /**\n+     * Handle typedefs.\n+     * @param t The current traversal.\n+     * @param candidate An ASSIGN or VAR node.\n+     */\n+    // TODO(nicksantos): Kill this.\n+    private void checkForOldStyleTypedef(NodeTraversal t, Node candidate) {\n+      // old-style typedefs\n+      String typedef = codingConvention.identifyTypeDefAssign(candidate);\n+      if (typedef != null) {\n+        // TODO(nicksantos|user): This is a terrible, terrible hack\n+        // to bail out on recusive typedefs. We'll eventually need\n+        // to handle these properly.\n+        typeRegistry.forwardDeclareType(typedef);\n+\n+        JSDocInfo info = candidate.getJSDocInfo();\n+        JSType realType = info == null ? null :\n+            info.getType().evaluate(scope);\n+        if (realType == null) {\n+          compiler.report(\n+              JSError.make(\n+                  t.getSourceName(), candidate, MALFORMED_TYPEDEF, typedef));\n+        }\n+\n+        typeRegistry.declareType(typedef, realType);\n+\n+        // Duplicate typedefs get handled when we try to register\n+        // this typedef in the scope.\n+      }\n+    }\n+\n+    /**\n+     * Declare the symbol for a qualified name in the global scope.\n+     *\n+     * @param info The doc info for this property.\n+     * @param n A top-level GETPROP node (it should not be contained inside\n+     *     another GETPROP).\n+     * @param parent The parent of {@code n}.\n+     * @param rhsValue The node that {@code n} is being initialized to,\n+     *     or {@code null} if this is a stub declaration.\n+     */\n+    private void maybeDeclareQualifiedName(NodeTraversal t, JSDocInfo info,\n+        Node n, Node parent, Node rhsValue) {\n+      Node ownerNode = n.getFirstChild();\n+      String ownerName = ownerNode.getQualifiedName();\n+      String qName = n.getQualifiedName();\n+      String propName = n.getLastChild().getString();\n+      Preconditions.checkArgument(qName != null && ownerName != null);\n+\n+      // Function prototypes are special.\n+      // It's a common JS idiom to do:\n+      // F.prototype = { ... };\n+      // So if F does not have an explicitly declared super type,\n+      // allow F.prototype to be redefined arbitrarily.\n+      if (\"prototype\".equals(propName)) {\n+        Var qVar = scope.getVar(qName);\n+        if (qVar != null) {\n+          if (!qVar.isTypeInferred()) {\n+            // Just ignore assigns to declared prototypes.\n+            return;\n+          }\n+          scope.undeclare(qVar);\n+        }\n+      }\n+\n+      // Precedence of type information on GETPROPs:\n+      // 1) @type annotation / @enum annotation\n+      // 2) ASSIGN to FUNCTION literal\n+      // 3) @param/@return annotation (with no function literal)\n+      // 4) ASSIGN to anything else\n+      //\n+      // 1 and 3 are declarations, 4 is inferred, and 2 is a declaration iff\n+      // the function has not been declared before.\n+      //\n+      // FUNCTION literals are special because TypedScopeCreator is very smart\n+      // about getting as much type information as possible for them.\n+\n+      // Determining type for #1 + #2 + #3\n+      JSType valueType = getDeclaredGetPropType(t, info, n, rhsValue);\n+      if (valueType == null && rhsValue != null) {\n+        // Determining type for #4\n+        valueType = rhsValue.getJSType();\n+      }\n+\n+      if (valueType == null) {\n+        if (parent.getType() == Token.EXPR_RESULT) {\n+          // If we see a stub property, make sure to register this property\n+          // in the type registry.\n+          ObjectType ownerType = getObjectSlot(ownerName);\n+          JSType unknownType = typeRegistry.getNativeType(UNKNOWN_TYPE);\n+          if (ownerType == null) {\n+            defineSlot(n, parent, unknownType, false);\n+          } else {\n+            boolean isExtern = t.getInput().isExtern();\n+            if (isExtern || ownerType.isFunctionPrototypeType()) {\n+              // If this is a stub for a prototype, just declare it\n+              // as an unknown type. These are seen often in externs.\n+              ownerType.defineDeclaredProperty(\n+                  propName, unknownType, isExtern);\n+            } else {\n+              typeRegistry.registerPropertyOnType(propName, ownerType);\n+            }\n+          }\n+        } else if (rhsValue != null &&\n+                   rhsValue.getType() == Token.TRUE) {\n+          // We declare these for delegate proxy method properties.\n+          ObjectType ownerType = getObjectSlot(ownerName);\n+          if (ownerType instanceof FunctionType) {\n+            JSType ownerTypeOfThis = ((FunctionType) ownerType).getTypeOfThis();\n+            JSType delegateType = typeRegistry.getType(\n+                codingConvention.getDelegateSuperclassName());\n+            if (delegateType != null &&\n+                ownerTypeOfThis.isSubtype(delegateType)) {\n+              defineSlot(n, parent, typeRegistry.getNativeType(BOOLEAN_TYPE),\n+                         true);\n+            }\n+          }\n+        }\n+\n+        return;\n+      }\n+\n+      boolean inferred = true;\n+      if (info != null) {\n+        // Determining declaration for #1 + #3\n+        inferred = !(info.hasType() || info.hasEnumParameterType() ||\n+            FunctionTypeBuilder.isFunctionTypeDeclaration(info));\n+      }\n+\n+      if (inferred) {\n+        // Determining declaration for #2\n+        inferred = !(rhsValue != null &&\n+            rhsValue.getType() == Token.FUNCTION &&\n+            !scope.isDeclared(qName, false));\n+      }\n+\n+      if (!inferred) {\n+        ObjectType ownerType = getObjectSlot(ownerName);\n+        if (ownerType != null) {\n+          // Only declare this as an official property if it has not been\n+          // declared yet.\n+          boolean isExtern = t.getInput().isExtern();\n+          if ((!ownerType.hasOwnProperty(propName) ||\n+               ownerType.isPropertyTypeInferred(propName)) &&\n+              (isExtern || !ownerType.isInstanceType())) {\n+            // If the property is undeclared or inferred, declare it now.\n+            ownerType.defineDeclaredProperty(propName, valueType, isExtern);\n+          }\n+        }\n+\n+        // If the property is already declared, the error will be\n+        // caught when we try to declare it in the current scope.\n+        defineSlot(n, parent, valueType, inferred);\n+      }\n+    }\n+\n+    /**\n+     * Find the ObjectType associated with the given slot.\n+     * @param slotName The name of the slot to find the type in.\n+     * @return An object type, or null if this slot does not contain an object.\n+     */\n+    private ObjectType getObjectSlot(String slotName) {\n+      Var ownerVar = scope.getVar(slotName);\n+      if (ownerVar != null) {\n+        JSType ownerVarType = ownerVar.getType();\n+        ownerVarType = ownerVarType == null ?\n+            null : ownerVarType.restrictByNotNullOrUndefined();\n+\n+        if (ownerVarType instanceof ObjectType) {\n+          return (ObjectType) ownerVarType;\n+        }\n+      }\n+      return null;\n+    }\n+\n+    /**\n+     * Look for a type declaration on a GETPROP node.\n+     *\n+     * @param info The doc info for this property.\n+     * @param n A top-level GETPROP node (it should not be contained inside\n+     *     another GETPROP).\n+     * @param rhsValue The node that {@code n} is being initialized to,\n+     *     or {@code null} if this is a stub declaration.\n+     */\n+    private JSType getDeclaredGetPropType(NodeTraversal t, JSDocInfo info,\n+        Node n, Node rhsValue) {\n+      if (info != null && info.hasType()) {\n+        return getDeclaredTypeInAnnotation(t, n, info);\n+      } else if (info != null && info.hasEnumParameterType()) {\n+        return n.getJSType();\n+      } else if (rhsValue != null &&\n+          rhsValue.getType() == Token.FUNCTION) {\n+        return rhsValue.getJSType();\n+      } else {\n+        return getDeclaredTypeInAnnotation(t, n, info);\n+      }\n+    }\n+\n+    /**\n+     * Collects all declared properties in a function, and\n+     * resolves them relative to the global scope.\n+     */\n+    private final class CollectProperties\n+        extends AbstractShallowCallback {\n+      private final ObjectType thisType;\n+\n+      CollectProperties(ObjectType thisType) {\n+        this.thisType = thisType;\n+      }\n+\n+      public void visit(NodeTraversal t, Node n, Node parent) {\n+        if (parent != null && parent.getType() == Token.EXPR_RESULT) {\n+          switch (n.getType()) {\n+            case Token.ASSIGN:\n+              maybeCollectMember(t, n.getFirstChild(), n);\n+              break;\n+            case Token.GETPROP:\n+              maybeCollectMember(t, n, n);\n+              break;\n+          }\n+        }\n+      }\n+\n+      private void maybeCollectMember(NodeTraversal t,\n+          Node member, Node nodeWithJsDocInfo) {\n+        JSDocInfo info = nodeWithJsDocInfo.getJSDocInfo();\n+\n+        // Do nothing if there is no JSDoc type info, or\n+        // if the node is not a member expression, or\n+        // if the member expression is not of the form: this.someProperty.\n+        if (info == null ||\n+            member.getType() != Token.GETPROP ||\n+            member.getFirstChild().getType() != Token.THIS) {\n+          return;\n+        }\n+\n+        member.getFirstChild().setJSType(thisType);\n+        JSType jsType = getDeclaredTypeInAnnotation(t, member, info);\n+        Node name = member.getLastChild();\n+        if (jsType != null &&\n+            (name.getType() == Token.NAME || name.getType() == Token.STRING)) {\n+          thisType.defineDeclaredProperty(\n+              name.getString(),\n+              jsType,\n+              false /* functions with implementations are not in externs */);\n+        }\n+      }\n+    } // end CollectProperties\n+  } // end GlobalScopeBuilder\n+\n+  /**\n+   * A shallow traversal of a local scope to find all arguments and\n+   * local variables.\n+   */\n+  private final class LocalScopeBuilder extends AbstractScopeBuilder {\n+    /**\n+     * @param scope The scope that we're builidng.\n+     */\n+    private LocalScopeBuilder(Scope scope) {\n+      super(scope);\n+    }\n+\n+    /**\n+     * Traverse the scope root and build it.\n+     */\n+    void build() {\n+      NodeTraversal.traverse(compiler, scope.getRootNode(), this);\n+    }\n+\n+    /**\n+     * Visit a node in a local scope, and add any local variables or catch\n+     * parameters into the local symbol table.\n+     *\n+     * @param t The node traversal.\n+     * @param n The node being visited.\n+     * @param parent The parent of n\n+     */\n+    @Override public void visit(NodeTraversal t, Node n, Node parent) {\n+      if (n == scope.getRootNode()) return;\n+\n+      if (n.getType() == Token.LP && parent == scope.getRootNode()) {\n+        handleFunctionInputs(parent);\n+        return;\n+      }\n+\n+      switch (n.getType()) {\n+        case Token.FUNCTION:\n+          // VARs and ASSIGNs are handled separately.\n+          if (parent.getType() == Token.NAME) {\n+            return;\n+          }\n+          define(n, parent);\n+          break;\n+\n+        case Token.CATCH:\n+        case Token.VAR:\n+          define(n, parent);\n+          break;\n+      }\n+    }\n+\n+    /** Handle bleeding functions and function parameters. */\n+    private void handleFunctionInputs(Node fnNode) {\n+      // Handle bleeding functions.\n+      Node fnNameNode = fnNode.getFirstChild();\n+      String fnName = fnNameNode.getString();\n+      if (!fnName.isEmpty()) {\n+        Scope.Var fnVar = scope.getVar(fnName);\n+        if (fnVar == null ||\n+            // Make sure we're not touching a native function. Native\n+            // functions aren't bleeding, but may not have a declaration\n+            // node.\n+            (fnVar.getNameNode() != null &&\n+                // Make sure that the function is actually bleeding by checking\n+                // if has already been declared.\n+                fnVar.getInitialValue() != fnNode)) {\n+          defineSlot(fnNameNode, fnNode, fnNode.getJSType(), false);\n+        }\n+      }\n+\n+      declareArguments(fnNode);\n+    }\n+\n+    /**\n+     * Declares all of a function's arguments.\n+     */\n+    private void declareArguments(Node functionNode) {\n+      Node astParameters = functionNode.getFirstChild().getNext();\n+      Node body = astParameters.getNext();\n+      FunctionType functionType = (FunctionType) functionNode.getJSType();\n+      if (functionType != null) {\n+        Node jsDocParameters = functionType.getParametersNode();\n+        if (jsDocParameters != null) {\n+          Node jsDocParameter = jsDocParameters.getFirstChild();\n+          for (Node astParameter : astParameters.children()) {\n+            if (jsDocParameter != null) {\n+              defineSlot(astParameter, functionNode,\n+                  jsDocParameter.getJSType(), true);\n+              jsDocParameter = jsDocParameter.getNext();\n+            } else {\n+              defineSlot(astParameter, functionNode, null, true);\n+            }\n+          }\n+        }\n+      }\n+    } // end declareArguments\n+  } // end LocalScopeBuilder\n+}\n",
      "files_name_in_blame_commit": [
        "JsDocInfoParser.java",
        "RhinoException.java",
        "CheckSideEffects.java",
        "ClosureReverseAbstractInterpreter.java",
        "CreateSyntheticBlocks.java",
        "VarCheck.java",
        "Position.java",
        "MethodCheck.java",
        "ExternExportsPassTest.java",
        "InlineVariablesConstantsTest.java",
        "DenormalizeTest.java",
        "ProcessDefines.java",
        "PureFunctionIdentifier.java",
        "SanityCheckTest.java",
        "NodeTraversal.java",
        "CompilerTypeTestCase.java",
        "OptimizeArgumentsArrayTest.java",
        "RemoveConstantExpressions.java",
        "ComposeWarningsGuard.java",
        "ReplaceIdGenerators.java",
        "DataFlowAnalysis.java",
        "Annotation.java",
        "ClosureCodingConvention.java",
        "CodePrinterTest.java",
        "ConvertToDottedPropertiesTest.java",
        "InlineGettersTest.java",
        "CollapseVariableDeclarationsTest.java",
        "JSSourceFile.java",
        "GoogleCodingConvention.java",
        "CheckGlobalThisTest.java",
        "CollapsePropertiesTest.java",
        "MakeDeclaredNamesUniqueTest.java",
        "CheckProvidesTest.java",
        "PropertyRenamingPolicy.java",
        "LoggerErrorManager.java",
        "CrossModuleCodeMotion.java",
        "NodeUtilTest.java",
        "RemoveTryCatch.java",
        "GatherSideEffectSubexpressionsCallback.java",
        "ReplaceCssNamesTest.java",
        "ScriptOrFnNode.java",
        "UnionType.java",
        "ParallelCompilerPass.java",
        "JSTypeRegistry.java",
        "SimpleSlot.java",
        "ExtractPrototypeMemberDeclarations.java",
        "MemoizedScopeCreator.java",
        "NodeTraversalTest.java",
        "MemoizedScopeCreatorTest.java",
        "FunctionParamBuilder.java",
        "RemoveUnusedNamesTest.java",
        "PassConfig.java",
        "FunctionInjector.java",
        "StandardUnionFind.java",
        "InstrumentFunctionsTest.java",
        "GenerateExportsTest.java",
        "CollapseProperties.java",
        "FunctionRewriterTest.java",
        "SourceMapTest.java",
        "JSCompilerSourceExcerptProviderTest.java",
        "VoidType.java",
        "NameReferenceGraph.java",
        "TypeValidatorTest.java",
        "AstChangeProxy.java",
        "PhaseOptimizer.java",
        "DotFormatter.java",
        "DiagnosticGroup.java",
        "LiveVariableAnalysisTest.java",
        "BooleanType.java",
        "CheckAccessControls.java",
        "ControlFlowAnalysisTest.java",
        "CreateSyntheticBlocksTest.java",
        "NameReferenceGraphConstruction.java",
        "DefinitionProvider.java",
        "ArrowType.java",
        "Compiler.java",
        "AmbiguateProperties.java",
        "IndexedType.java",
        "AllType.java",
        "RenameVarsTest.java",
        "CheckMissingReturn.java",
        "UnknownType.java",
        "ExpressionDecomposer.java",
        "FixedPointGraphTraversal.java",
        "CodeConsumer.java",
        "InlineCostEstimatorTest.java",
        "CheckAccessControlsTest.java",
        "StripCode.java",
        "MethodCompilerPass.java",
        "DefaultCodingConvention.java",
        "EcmaError.java",
        "Denormalize.java",
        "LinkedDirectedGraph.java",
        "TypeInference.java",
        "MinimizeExitPoints.java",
        "EvaluatorException.java",
        "TernaryValue.java",
        "SuspiciousPropertiesCheckTest.java",
        "JavaScriptException.java",
        "ObjectPropertyStringPostprocessTest.java",
        "VariableReferenceCheckTest.java",
        "UniqueTag.java",
        "TokenStream.java",
        "JSDocInfo.java",
        "DiagnosticGroups.java",
        "DefaultPassConfig.java",
        "CollapseVariableDeclarations.java",
        "InvocationsCallback.java",
        "TightenTypesTest.java",
        "CustomPassExecutionTime.java",
        "ErrorFunctionType.java",
        "MarkNoSideEffectCallsTest.java",
        "ConvertToDottedProperties.java",
        "FunctionToBlockMutatorTest.java",
        "InstanceObjectType.java",
        "NameAnonymousFunctionsMapped.java",
        "FindExportableNodes.java",
        "MakeDeclaredNamesUnique.java",
        "RenameLocalVarsTest.java",
        "DisambiguatePropertiesTest.java",
        "NamedType.java",
        "UnionFind.java",
        "ProxyObjectType.java",
        "TypeInferenceTest.java",
        "GenerateExports.java",
        "AliasKeywordsTest.java",
        "FunctionCheckTest.java",
        "SemanticReverseAbstractInterpreter.java",
        "ValueType.java",
        "ExtractPrototypeMemberDeclarationsTest.java",
        "Kit.java",
        "VarCheckTest.java",
        "SimpleDefinitionFinderTest.java",
        "PrintStreamErrorManager.java",
        "TypedCodeGenerator.java",
        "ErrorManager.java",
        "ShowByPathWarningsGuard.java",
        "CodingConvention.java",
        "CheckSideEffectsTest.java",
        "SourceFile.java",
        "FunctionToBlockMutator.java",
        "MarkNoSideEffectCalls.java",
        "AstParallelizerTest.java",
        "BooleanLiteralSet.java",
        "VariableMap.java",
        "VariableReferenceCheck.java",
        "NoType.java",
        "SimpleErrorReporter.java",
        "JSType.java",
        "OptimizeParameters.java",
        "SuspiciousPropertiesCheck.java",
        "Result.java",
        "ExternExportsPass.java",
        "FunctionInjectorTest.java",
        "RenamePropertiesTest.java",
        "JSModule.java",
        "TypeCheckFunctionCheckTest.java",
        "CompilerTestCase.java",
        "Normalize.java",
        "AbstractCompiler.java",
        "DeadAssignmentsElimination.java",
        "FoldConstants.java",
        "CheckAccidentalSemicolonTest.java",
        "ReplaceIdGeneratorsTest.java",
        "RemoveConstantExpressionsParallelTest.java",
        "DiGraph.java",
        "CrossModuleMethodMotion.java",
        "RenamePrototypesTest.java",
        "PotentialCheck.java",
        "FlowSensitiveInlineVariablesTest.java",
        "VariableNameGenerator.java",
        "VariableRenamingPolicy.java",
        "NormalizeTest.java",
        "GraphReachability.java",
        "StaticSlot.java",
        "JSModuleGraph.java",
        "MoveFunctionDeclarationsTest.java",
        "Config.java",
        "Region.java",
        "ScriptRuntime.java",
        "ObjectType.java",
        "RemoveUnusedPrototypeProperties.java",
        "MessageFormatter.java",
        "VariableShadowDeclarationCheck.java",
        "MustBeReachingVariableDef.java",
        "NodeTypeNormalizer.java",
        "BasicErrorManager.java",
        "ScopeCreator.java",
        "InlineVariablesTest.java",
        "DiagnosticType.java",
        "UnreachableCodeEliminationTest.java",
        "EnumType.java",
        "PotentialCheckManager.java",
        "InstrumentFunctions.java",
        "MaybeReachingVariableUse.java",
        "TemplateType.java",
        "SyntacticScopeCreatorTest.java",
        "GoogleCodeRemovalTest.java",
        "ErrorReporter.java",
        "CollapseAnonymousFunctions.java",
        "EnumElementType.java",
        "CheckLevelLegacy.java",
        "CombinedCompilerPassTest.java",
        "PerformanceTracker.java",
        "ChainCallsTest.java",
        "AliasKeywords.java",
        "LightweightMessageFormatter.java",
        "CompilerEnvirons.java",
        "NodeNameExtractor.java",
        "AliasExternalsTest.java",
        "CrossModuleMethodMotionTest.java",
        "RenameLabels.java",
        "NodeUtil.java",
        "MinimizeExitPointsTest.java",
        "UseSite.java",
        "ExpresssionDecomposerTest.java",
        "Graph.java",
        "CheckGlobalNames.java",
        "ObjectPropertyStringPreprocess.java",
        "ParserRunner.java",
        "DefinitionsRemover.java",
        "AnonymousFunctionNamingPolicy.java",
        "StripCodeTest.java",
        "SourcePosition.java",
        "FunctionPrototypeType.java",
        "NodeIteratorsTest.java",
        "JSTypeNative.java",
        "InlineGetters.java",
        "CompilerRunner.java",
        "CheckAccidentalSemicolon.java",
        "LinkedUndirectedGraph.java",
        "PrototypeObjectType.java",
        "Context.java",
        "StringType.java",
        "FunctionType.java",
        "Annotatable.java",
        "Node.java",
        "AmbiguatePropertiesTest.java",
        "AliasExternals.java",
        "PhaseOptimizerTest.java",
        "DiagnosticGroupWarningsGuard.java",
        "GoogleCodingConventionTest.java",
        "ConstCheckTest.java",
        "ControlFlowAnalysis.java",
        "RhinoErrorReporter.java",
        "SubGraph.java",
        "TypeSafeDispatcher.java",
        "NameAnonymousFunctions.java",
        "RemoveUnusedVars.java",
        "JSTypeExpression.java",
        "CollapseAnonymousFunctionsTest.java",
        "UnreachableCodeElimination.java",
        "CombinedCompilerPass.java",
        "JSModuleTest.java",
        "TypedScopeCreatorTest.java",
        "StrictWarningsGuard.java",
        "ControlStructureCheck.java",
        "ChainableReverseAbstractInterpreter.java",
        "CheckUnreachableCodeTest.java",
        "FunctionNode.java",
        "GatherSideEffectSubexpressionsCallbackTest.java",
        "CoalesceVariableNames.java",
        "CompilerOptionsTest.java",
        "TypeCheck.java",
        "ParallelCompilerPassTest.java",
        "CrossModuleCodeMotionTest.java",
        "ObjToIntMap.java",
        "AnalyzeNameReferences.java",
        "SourceMap.java",
        "LiveVariablesAnalysis.java",
        "NameAnalyzerTest.java",
        "LocaleUtil.java",
        "ConstCheck.java",
        "NameAnalyzer.java",
        "DefinitionsRemoverTest.java",
        "SimpleRegion.java",
        "SanityCheck.java",
        "StrictModeCheck.java",
        "CodingConventionAnnotator.java",
        "RemoveConstantExpressionsTest.java",
        "FoldConstantsTest.java",
        "UndiGraph.java",
        "CheckMissingGetCssName.java",
        "OptimizeParametersTest.java",
        "JsAst.java",
        "CheckLevel.java",
        "RecordTypeBuilder.java",
        "WarningsGuard.java",
        "ClosureCodingConventionTest.java",
        "FunctionTypeBuilder.java",
        "CompilerPass.java",
        "ObjArray.java",
        "ReferenceCollectingCallback.java",
        "ChainCalls.java",
        "NodeTypeNormalizerTest.java",
        "AliasStrings.java",
        "RecordFunctionInformationTest.java",
        "SymbolTable.java",
        "ExportTestFunctions.java",
        "InlineVariables.java",
        "PassFactory.java",
        "NoObjectType.java",
        "TypeValidator.java",
        "LinkedFlowScope.java",
        "CheckProvides.java",
        "FlowScope.java",
        "JSDocInfoBuilder.java",
        "SyntacticScopeCreator.java",
        "MaybeReachingVariableUseTest.java",
        "NameGenerator.java",
        "RenameProperties.java",
        "CheckGlobalThis.java",
        "CheckGlobalNamesTest.java",
        "IRFactory.java",
        "SourceInformationAnnotator.java",
        "AstParallelizer.java",
        "UnionTypeBuilder.java",
        "CheckPathsBetweenNodes.java",
        "DevirtualizePrototypeMethodsTest.java",
        "LineNumberCheck.java",
        "MoveFunctionDeclarations.java",
        "FunctionTypeBuilderTest.java",
        "InlineFunctionsTest.java",
        "BaseJSTypeTestCase.java",
        "RecordType.java",
        "SyntheticAst.java",
        "CompilerOptions.java",
        "CodeGenerator.java",
        "MethodCheckTest.java",
        "CodePrinter.java",
        "CoalesceVariableNamesTest.java",
        "ConcreteType.java",
        "VerboseMessageFormatter.java",
        "TypeInferencePass.java",
        "UintMap.java",
        "DToA.java",
        "FunctionArgumentInjectorTest.java",
        "AnonymousFunctionNamingCallback.java",
        "ControlFlowGraph.java",
        "ReverseAbstractInterpreter.java",
        "CodeChangeHandler.java",
        "DefinitionSite.java",
        "InlineFunctions.java",
        "InferJSDocInfo.java",
        "SourceExcerptProvider.java",
        "DevirtualizePrototypeMethods.java",
        "ControlStructureCheckTest.java",
        "SymbolTableTest.java",
        "Token.java",
        "CompilerInput.java",
        "NullErrorReporter.java",
        "CheckMissingGetCssNameTest.java",
        "RenamePrototypes.java",
        "FunctionCheck.java",
        "TightenTypes.java",
        "NameAnonymousFunctionsMappedTest.java",
        "Parser.java",
        "ErrorFormat.java",
        "JsDocTokenStream.java",
        "CompilationLevel.java",
        "StaticScope.java",
        "MustBeReachingVariableDefTest.java",
        "NullType.java",
        "OptimizeArgumentsArray.java",
        "ReplaceCssNames.java",
        "FlowSensitiveInlineVariables.java",
        "FunctionArgumentInjector.java",
        "ExportTestFunctionsTest.java",
        "PureFunctionIdentifierTest.java",
        "CssRenamingMap.java",
        "VariableShadowDeclarationCheckTest.java",
        "AdjacencyGraph.java",
        "JsDocToken.java",
        "TestErrorReporter.java",
        "GraphColoring.java",
        "DeadAssignmentsEliminationTest.java",
        "RenameVars.java",
        "ProcessClosurePrimitives.java",
        "ObjectPropertyStringPostprocess.java",
        "NumberType.java",
        "Scope.java",
        "AbstractCompilerRunner.java",
        "RemoveTryCatchTest.java",
        "AbstractMessageFormatter.java",
        "FunctionNamesTest.java",
        "CheckUnreachableCode.java",
        "RemoveUnusedVarsTest.java",
        "RecordFunctionInformation.java",
        "FunctionNames.java",
        "AliasStringsTest.java",
        "ObjectPropertyStringPreprocessTest.java",
        "SourceAst.java",
        "NodeIterators.java",
        "RenameLabelsTest.java",
        "GraphvizGraph.java",
        "NameAnonymousFunctionsTest.java",
        "ProcessDefinesTest.java",
        "ProcessClosurePrimitivesTest.java",
        "RemoveUnusedPrototypePropertiesTest.java",
        "GoogleCodeRemoval.java",
        "FunctionRewriter.java",
        "CheckRequiresForConstructors.java",
        "Decompiler.java",
        "RemoveConstantExpressionsParallel.java",
        "Visitor.java",
        "SimpleDefinitionFinder.java",
        "GraphNode.java",
        "DisambiguateProperties.java",
        "InlineCostEstimator.java",
        "RemoveUnusedNames.java",
        "ParameterizedType.java",
        "AnalyzePrototypeProperties.java",
        "CheckRequiresForConstructorsTest.java",
        "CheckMissingReturnTest.java",
        "TypedScopeCreator.java",
        "JSError.java",
        "GlobalNamespace.java"
      ]
    }
  },
  "commits_modify_file_before_fix": {
    "size": 55
  }
}