{
  "id": "113",
  "blame_commit": {
    "commit": {
      "commit_id": "bf4eec3e73c82a3eff75acce0921f766a33f535f",
      "commit_message": "Refactored matchers to use hamcrest internally\n\n--HG--\nrename : src/org/mockito/CustomMatcher.java => src/org/mockito/ArgumentMatcher.java\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40355",
      "commit_author": "Szczepan Faber",
      "commit_date": "2008-02-10 16:07:17",
      "commit_parent": "71450e563fb547a0c3a0fccced3f533dd994ffa8"
    },
    "function": {
      "function_name": "describeTo",
      "function_code_before": "",
      "function_code_after": "public void describeTo(Description description) {\n    description.appendText(\"same(\");\n    appendQuoting(description);\n    description.appendText(wanted.toString());\n    appendQuoting(description);\n    description.appendText(\")\");\n}",
      "function_before_start_line": "",
      "function_before_end_line": "",
      "function_after_start_line": 23,
      "function_after_end_line": 29,
      "function_before_token_count": 0,
      "function_after_token_count": 42,
      "functions_name_modified_file": [
        "Same",
        "describeTo",
        "appendQuoting",
        "matches"
      ],
      "functions_name_all_files": [
        "createObjectArray",
        "byteThat",
        "aryEq",
        "toString",
        "Find",
        "shortThat",
        "testGreateThan",
        "or",
        "equalsToStringWithObject",
        "argumentsMatch",
        "equalArguments",
        "notNullToString",
        "shouldScreamWhenMatchersNull",
        "getArguments",
        "Invocation",
        "Compare",
        "StartsWith",
        "find",
        "appendQuoting",
        "setUp",
        "argThat",
        "getInvocation",
        "testLessOrEqual",
        "anyShort",
        "And",
        "shouldToStringWithMatchers",
        "anyObject",
        "testGreateOrEqual",
        "startsWithToString",
        "matchesToString",
        "ReflectionEquals",
        "anyToString",
        "markVerified",
        "getWanted",
        "orToString",
        "andToString",
        "argumentsToMatchers",
        "gt",
        "equalsToStringWithChar",
        "lt",
        "anyBoolean",
        "ArrayEquals",
        "eq",
        "shouldUseCustomBooleanMatcher",
        "Contains",
        "endsWith",
        "InvocationMatcher",
        "instance",
        "shouldNotEqualIfNumberOfArgumentsDiffer",
        "isNull",
        "nullToString",
        "appendArray",
        "sameToStringWithObject",
        "NotNull",
        "InstanceOf",
        "sameToStringWithChar",
        "Not",
        "shouldBeACitizenOfHashes",
        "createEqualsMatchers",
        "anyFloat",
        "intThat",
        "anyLong",
        "expandVarArgs",
        "differsWithArgumentTypes",
        "Or",
        "equals",
        "anyByte",
        "isA",
        "notNull",
        "assertState",
        "Matches",
        "getArgumentsString",
        "Null",
        "doubleThat",
        "reportNot",
        "charThat",
        "anyDouble",
        "shouldUseCustomObjectMatcher",
        "testCompareEqual",
        "startsWith",
        "reportOr",
        "contains",
        "geq",
        "booleanThat",
        "anyString",
        "cmpEq",
        "anyInt",
        "toStringWithArgumentTypes",
        "setup",
        "popLastArgumentMatchers",
        "leq",
        "equalsToStringWithString",
        "test",
        "not",
        "CompareTo",
        "Same",
        "Any",
        "bindMatchers",
        "testLessThan",
        "findToString",
        "reportAnd",
        "containsToString",
        "Equals",
        "EqualsWithDelta",
        "sameToStringWithString",
        "hashCode",
        "isVerified",
        "anyChar",
        "longThat",
        "endsWithToString",
        "validateMatchers",
        "getMethod",
        "getMock",
        "and",
        "reportMatcher",
        "getStackTrace",
        "getMatchers",
        "matches",
        "pullMatchers",
        "isVerifiedInOrder",
        "floatThat",
        "markVerifiedInOrder",
        "EndsWith",
        "notToString",
        "refEq",
        "shouldUseCustomPrimitiveNumberMatchers",
        "getSequenceNumber",
        "shouldUseCustomCharMatcher",
        "describeTo",
        "same"
      ],
      "functions_name_co_evolved_modified_file": [
        "appendQuoting",
        "describeTo",
        "appendTo"
      ],
      "functions_name_co_evolved_all_files": [
        "byteThat",
        "toString",
        "findToString",
        "shortThat",
        "containsToString",
        "getArgumentsString",
        "sameToStringWithString",
        "doubleThat",
        "InvocationMatcher",
        "equalsToStringWithObject",
        "charThat",
        "longThat",
        "endsWithToString",
        "validateMatchers",
        "notNullToString",
        "reportMatcher",
        "getMatchers",
        "appendQuoting",
        "nullToString",
        "matches",
        "pullMatchers",
        "appendArray",
        "sameToStringWithObject",
        "And",
        "floatThat",
        "shouldToStringWithMatchers",
        "startsWithToString",
        "matchesToString",
        "anyToString",
        "notToString",
        "sameToStringWithChar",
        "Not",
        "andToString",
        "booleanThat",
        "orToString",
        "argumentsToMatchers",
        "setup",
        "createEqualsMatchers",
        "popLastArgumentMatchers",
        "intThat",
        "equalsToStringWithString",
        "Or",
        "equalsToStringWithChar",
        "test",
        "describeTo",
        "appendTo",
        "bindMatchers"
      ]
    },
    "file": {
      "file_name": "Same.java",
      "file_nloc": 26,
      "file_complexity": 6,
      "file_token_count": 150,
      "file_before": "",
      "file_after": "",
      "file_patch": "@@ -4,8 +4,11 @@\n  */\n package org.mockito.internal.matchers;\n \n+import org.hamcrest.Description;\n+import org.mockito.ArgumentMatcher;\n \n-public class Same implements ArgumentMatcher<Object> {\n+\n+public class Same extends ArgumentMatcher<Object> {\n \n     private final Object wanted;\n \n@@ -17,19 +20,19 @@ public class Same implements ArgumentMatcher<Object> {\n         return wanted == actual;\n     }\n \n-    public void appendTo(StringBuilder buffer) {\n-        buffer.append(\"same(\");\n-        appendQuoting(buffer);\n-        buffer.append(wanted);\n-        appendQuoting(buffer);\n-        buffer.append(\")\");\n+    public void describeTo(Description description) {\n+        description.appendText(\"same(\");\n+        appendQuoting(description);\n+        description.appendText(wanted.toString());\n+        appendQuoting(description);\n+        description.appendText(\")\");\n     }\n \n-    private void appendQuoting(StringBuilder buffer) {\n+    private void appendQuoting(Description description) {\n         if (wanted instanceof String) {\n-            buffer.append(\"\\\"\");\n+            description.appendText(\"\\\"\");\n         } else if (wanted instanceof Character) {\n-            buffer.append(\"'\");\n+            description.appendText(\"'\");\n         }\n     }\n }\n",
      "files_name_in_blame_commit": [
        "Invocation.java",
        "InstanceOf.java",
        "Matchers.java",
        "InvocationMatcher.java",
        "CompareTo.java",
        "StartsWith.java",
        "Find.java",
        "LastArguments.java",
        "ArrayEquals.java",
        "Equals.java",
        "CustomMatcher.java",
        "EndsWith.java",
        "Contains.java",
        "AdditionalMatchers.java",
        "MatchersBinder.java",
        "MatchersToStringTest.java",
        "Same.java",
        "Or.java",
        "Null.java",
        "Any.java",
        "CustomMatchersTest.java",
        "Not.java",
        "ReflectionEquals.java",
        "ComparableMatchersTest.java",
        "NotNull.java",
        "Matches.java",
        "And.java",
        "ArgumentMatcher.java",
        "Compare.java",
        "InvocationMatcherTest.java",
        "EqualsWithDelta.java"
      ]
    }
  },
  "commits_modify_file_before_fix": {
    "size": 12
  }
}