{
  "id": "105",
  "blame_commit": {
    "commit": {
      "commit_id": "71a29150bb9794bdcece023f961831d904055719",
      "commit_message": "The root solvers now take the function to solve as a parameter to\nthe solve methods, thus allowing to reuse the same solver for different\nfunctions.\n\nJIRA:MATH-218\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@724191 13f79535-47bb-0310-9956-ffa450edef68",
      "commit_author": "Luc Maisonobe",
      "commit_date": "2008-12-07 20:24:10",
      "commit_parent": "50fea383986e6f7815d87d9b5ed6dc4e0fdaa3e9"
    },
    "function": {
      "function_name": "solve",
      "function_code_before": "",
      "function_code_after": "public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n    throws MaxIterationsExceededException, FunctionEvaluationException {\n    return solve(min, max);\n}",
      "function_before_start_line": "",
      "function_before_end_line": "",
      "function_after_start_line": 72,
      "function_after_end_line": 75,
      "function_before_token_count": 0,
      "function_after_token_count": 29,
      "functions_name_modified_file": [
        "solve",
        "BisectionSolver"
      ],
      "functions_name_all_files": [
        "testRootEndpoints",
        "getPolynomialFunction",
        "testLinearFunction",
        "getRelativeAccuracy",
        "setUp",
        "NewtonSolver",
        "isRootOK",
        "testNewNewtonSolverValid",
        "midpoint",
        "testNewSecantSolverValid",
        "testResetRelativeAccuracy",
        "testInitialGuess",
        "testSinFunction2",
        "testSerialization",
        "solveAll",
        "getAbsoluteAccuracy",
        "tearDown",
        "verifyBracketing",
        "UnivariateRealSolverFactoryImpl",
        "resetFunctionValueAccuracy",
        "testParameters",
        "resetAbsoluteAccuracy",
        "testQuinticFunction2",
        "solve2",
        "getIterationCount",
        "testSinZero",
        "isBracketing",
        "setMaximalIterationCount",
        "getFunctionValueAccuracy",
        "getContents",
        "testExpm1Function",
        "clearResult",
        "resetMaximalIterationCount",
        "newBrentSolver",
        "testQuadraticFunction",
        "testBadEndpoints",
        "newSecantSolver",
        "newInstance",
        "UnivariateRealSolverUtils",
        "BisectionSolver",
        "newDefaultSolver",
        "testExpm1Function2",
        "getResult",
        "testResetAbsoluteAccuracy",
        "setAbsoluteAccuracy",
        "SecantSolver",
        "newBisectionSolver",
        "testSetMaximalIterationCount",
        "getMaximalIterationCount",
        "setFunctionValueAccuracy",
        "LaguerreSolver",
        "UnivariateRealSolverFactory",
        "verifyInterval",
        "MessagesResources_fr",
        "UnivariateRealSolverImpl",
        "isSequence",
        "testSetRelativeAccuracy",
        "testDeprecated2",
        "setup",
        "testSetAbsoluteAccuracy",
        "solve",
        "RiddersSolver",
        "BrentSolver",
        "testSetFunctionValueAccuracy",
        "newNewtonSolver",
        "MullerSolver",
        "testResetMaximalIterationCount",
        "BrentSolverTest",
        "bracket",
        "verifySequence",
        "testDeprecated",
        "testNewBisectionSolverValid",
        "testSinFunction",
        "setResult",
        "resetRelativeAccuracy",
        "testQuinticZero",
        "testNewBrentSolverValid",
        "testResetFunctionValueAccuracy",
        "suite",
        "testQuinticFunction",
        "setRelativeAccuracy"
      ],
      "functions_name_co_evolved_modified_file": [
        "solve",
        "BisectionSolver"
      ],
      "functions_name_co_evolved_all_files": [
        "RiddersSolver",
        "testResetAbsoluteAccuracy",
        "testNewBisectionSolverNull",
        "testRootEndpoints",
        "BrentSolver",
        "testSetFunctionValueAccuracy",
        "SecantSolver",
        "newBisectionSolver",
        "testParameters",
        "newNewtonSolver",
        "testQuinticFunction2",
        "MullerSolver",
        "solve2",
        "testSetMaximalIterationCount",
        "testResetMaximalIterationCount",
        "testNewBrentSolverNull",
        "testLinearFunction",
        "testSinZero",
        "testDeprecated",
        "setUp",
        "NewtonSolver",
        "LaguerreSolver",
        "testNewBisectionSolverValid",
        "testSinFunction",
        "testQuinticZero",
        "UnivariateRealSolverImpl",
        "testExpm1Function",
        "testNewNewtonSolverValid",
        "testNewBrentSolverValid",
        "testNewSecantSolverValid",
        "testNewSecantSolverNull",
        "testSetRelativeAccuracy",
        "testResetRelativeAccuracy",
        "newBrentSolver",
        "BisectionSolver",
        "testResetFunctionValueAccuracy",
        "testDeprecated2",
        "testQuadraticFunction",
        "testInitialGuess",
        "testSinFunction2",
        "testQuinticFunction",
        "testSerialization",
        "testSetAbsoluteAccuracy",
        "newSecantSolver",
        "readObject",
        "testBadEndpoints",
        "testNewNewtonSolverNull",
        "solve",
        "newDefaultSolver",
        "testExpm1Function2",
        "tearDown"
      ]
    },
    "file": {
      "file_name": "BisectionSolver.java",
      "file_nloc": 53,
      "file_complexity": 9,
      "file_token_count": 325,
      "file_before": "",
      "file_after": "",
      "file_patch": "@@ -30,49 +30,54 @@ import org.apache.commons.math.MaxIterationsExceededException;\n public class BisectionSolver extends UnivariateRealSolverImpl {\n     \n     /** Serializable version identifier */\n-    private static final long serialVersionUID = 4963578633786538912L;\n+    private static final long serialVersionUID = 5227509383222989438L;\n \n     /**\n      * Construct a solver for the given function.\n      * \n      * @param f function to solve.\n+     * @deprecated as of 2.0 the function to solve is passed as an argument\n+     * to the {@link #solve(UnivariateRealFunction, double, double)} or\n+     * {@link UnivariateRealSolverImpl#solve(UnivariateRealFunction, double, double, double)}\n+     * method.\n      */\n+    @Deprecated\n     public BisectionSolver(UnivariateRealFunction f) {\n         super(f, 100, 1E-6);\n     }\n \n     /**\n-     * Find a zero in the given interval.\n+     * Construct a solver.\n      * \n-     * @param min the lower bound for the interval.\n-     * @param max the upper bound for the interval.\n-     * @param initial the start value to use (ignored).\n-     * @return the value where the function is zero\n-     * @throws MaxIterationsExceededException the maximum iteration count is exceeded \n-     * @throws FunctionEvaluationException if an error occurs evaluating\n-     *  the function\n-     * @throws IllegalArgumentException if min is not less than max\n      */\n+    public BisectionSolver() {\n+        super(100, 1E-6);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Deprecated\n     public double solve(double min, double max, double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n-          \n-        return solve(min, max);\n+        return solve(f, min, max);\n     }\n     \n-    /**\n-     * Find a zero root in the given interval.\n-     * \n-     * @param min the lower bound for the interval\n-     * @param max the upper bound for the interval\n-     * @return the value where the function is zero\n-     * @throws MaxIterationsExceededException if the maximum iteration count is exceeded.\n-     * @throws FunctionEvaluationException if an error occurs evaluating the\n-     * function\n-     * @throws IllegalArgumentException if min is not less than max\n-     */\n-    public double solve(double min, double max) throws MaxIterationsExceededException,\n-        FunctionEvaluationException {\n-        \n+    /** {@inheritDoc} */\n+    @Deprecated\n+    public double solve(double min, double max)\n+        throws MaxIterationsExceededException, FunctionEvaluationException {\n+        return solve(f, min, max);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public double solve(final UnivariateRealFunction f, double min, double max, double initial)\n+        throws MaxIterationsExceededException, FunctionEvaluationException {\n+        return solve(min, max);\n+    }\n+\n+    /** {@inheritDoc} */\n+    public double solve(final UnivariateRealFunction f, double min, double max)\n+        throws MaxIterationsExceededException, FunctionEvaluationException {\n+            \n         clearResult();\n         verifyInterval(min,max);\n         double m;\n",
      "files_name_in_blame_commit": [
        "LaguerreSolver.java",
        "LaguerreSolverTest.java",
        "RiddersSolver.java",
        "UnivariateRealSolverUtils.java",
        "NewtonSolver.java",
        "BrentSolverTest.java",
        "BrentSolver.java",
        "MessagesResources_fr.java",
        "UnivariateRealSolverFactory.java",
        "SecantSolver.java",
        "NewtonSolverTest.java",
        "BisectionSolverTest.java",
        "UnivariateRealSolver.java",
        "RiddersSolverTest.java",
        "BisectionSolver.java",
        "UnivariateRealSolverFactoryImpl.java",
        "MullerSolverTest.java",
        "UnivariateRealSolverImpl.java",
        "UnivariateRealSolverFactoryImplTest.java",
        "MullerSolver.java"
      ]
    }
  },
  "commits_modify_file_before_fix": {
    "size": 38
  }
}