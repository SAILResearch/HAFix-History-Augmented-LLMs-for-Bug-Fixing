{
  "id": "92",
  "blame_commit": {
    "commit": {
      "commit_id": "f880c83e06411b15eb3577a145f035e11b6ca408",
      "commit_message": "- In distribution.AbstractRealDistribution, removed superfluous methods getDomainLowerBound(double), getDomainUpperBound(double) and getInitialDomain(double p) (MATH-699).\n- Resolved checkstyle issues in the distribution package.\n- Improved Javadoc of RealDistribution.getSupportLowerBound(), RealDistribution.getSupportUpperBound() and AbstractRealDistribution.inverseCumulativeDistribution(double).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1209963 13f79535-47bb-0310-9956-ffa450edef68",
      "commit_author": "Sebastien Brisard",
      "commit_date": "2011-12-03 18:23:02",
      "commit_parent": "b2e24119bcb10131f765ba062d933a574cc13c7a"
    },
    "function": {
      "function_name": "getNumericalMean",
      "function_code_before": "public double getNumericalMean() {\n    return (double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize();\n}",
      "function_code_after": "public double getNumericalMean() {\n    return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n}",
      "function_before_start_line": 282,
      "function_before_end_line": 284,
      "function_after_start_line": 282,
      "function_after_end_line": 284,
      "function_before_token_count": 26,
      "function_after_token_count": 26,
      "functions_name_modified_file": [
        "probability",
        "getPopulationSize",
        "calculateNumericalVariance",
        "getSampleSize",
        "getSupportUpperBound",
        "getDomain",
        "getDomainUpperBound",
        "getUpperDomain",
        "getNumberOfSuccesses",
        "isSupportConnected",
        "getLowerDomain",
        "getNumericalVariance",
        "getDomainLowerBound",
        "getSupportLowerBound",
        "HypergeometricDistribution",
        "cumulativeProbability",
        "upperCumulativeProbability",
        "innerCumulativeProbability",
        "getNumericalMean"
      ],
      "functions_name_all_files": [
        "BetaDistribution",
        "cdf",
        "getProbabilityOfSuccess",
        "getNumberOfTrials",
        "createH",
        "GammaDistribution",
        "probability",
        "FDistribution",
        "BinomialDistribution",
        "PascalDistribution",
        "getDegreesOfFreedom",
        "generalizedHarmonic",
        "CauchyDistribution",
        "WeibullDistribution",
        "density",
        "AbstractRealDistribution",
        "getPopulationSize",
        "getExponent",
        "calculateNumericalVariance",
        "getMedian",
        "ExponentialDistribution",
        "getSampleSize",
        "getDenominatorDegreesOfFreedom",
        "TDistribution",
        "isSupportUpperBoundInclusive",
        "sample",
        "getSupportUpperBound",
        "getDomain",
        "getDomainUpperBound",
        "cdfExact",
        "testDiscontinuous",
        "getUpperDomain",
        "getAlpha",
        "normalApproximateProbability",
        "checkedCumulativeProbability",
        "getNumberOfSuccesses",
        "getStandardDeviation",
        "ZipfDistribution",
        "getNumeratorDegreesOfFreedom",
        "NormalDistribution",
        "AbstractIntegerDistribution",
        "isSupportConnected",
        "getScale",
        "getMean",
        "getNumericalVariance",
        "getLowerDomain",
        "reseedRandomGenerator",
        "getDomainLowerBound",
        "getSupportLowerBound",
        "exactK",
        "HypergeometricDistribution",
        "ChiSquaredDistribution",
        "cumulativeProbability",
        "getBeta",
        "upperCumulativeProbability",
        "roundedK",
        "isSupportLowerBoundInclusive",
        "inverseCumulativeProbability",
        "innerCumulativeProbability",
        "recomputeZ",
        "KolmogorovSmirnovDistribution",
        "PoissonDistribution",
        "getShape",
        "getNumberOfElements",
        "testContinuous",
        "getNumericalMean",
        "getSolverAbsoluteAccuracy",
        "calculateNumericalMean"
      ],
      "functions_name_co_evolved_modified_file": [
        "calculateNumericalVariance",
        "getNumericalMean"
      ],
      "functions_name_co_evolved_all_files": [
        "calculateNumericalVariance",
        "ExponentialDistribution",
        "getInitialDomain",
        "AbstractIntegerDistribution",
        "getDomainUpperBound",
        "probability",
        "roundedK",
        "testDiscontinuous",
        "inverseCumulativeProbability",
        "getNumericalVariance",
        "getDomainLowerBound",
        "testContinuous",
        "getNumericalMean",
        "density",
        "AbstractRealDistribution"
      ]
    },
    "file": {
      "file_name": "HypergeometricDistribution.java",
      "file_nloc": 152,
      "file_complexity": 33,
      "file_token_count": 1065,
      "file_before": "",
      "file_after": "",
      "file_patch": "@@ -280,7 +280,7 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n      * size {@code n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean() {\n-        return (double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize();\n+        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n     }\n \n     /**\n@@ -300,14 +300,14 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n \n     /**\n      * Used by {@link #getNumericalVariance()}.\n-     * \n+     *\n      * @return the variance of this distribution\n      */\n     protected double calculateNumericalVariance() {\n         final double N = getPopulationSize();\n         final double m = getNumberOfSuccesses();\n         final double n = getSampleSize();\n-        return ( n * m * (N - n) * (N - m) ) / ( (N*N * (N - 1)) );\n+        return ( n * m * (N - n) * (N - m) ) / ( (N * N * (N - 1)) );\n     }\n \n     /**\n@@ -338,9 +338,9 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {\n \n     /**\n      * {@inheritDoc}\n-     * \n+     *\n      * The support of this distribution is connected.\n-     * \n+     *\n      * @return {@code true}\n      */\n     public boolean isSupportConnected() {\n",
      "files_name_in_blame_commit": [
        "BinomialDistribution.java",
        "ExponentialDistribution.java",
        "BetaDistribution.java",
        "TDistribution.java",
        "AbstractIntegerDistribution.java",
        "IntegerDistribution.java",
        "PoissonDistribution.java",
        "RealDistribution.java",
        "PascalDistribution.java",
        "GammaDistribution.java",
        "HypergeometricDistribution.java",
        "ChiSquaredDistribution.java",
        "WeibullDistribution.java",
        "ZipfDistribution.java",
        "FDistribution.java",
        "KolmogorovSmirnovDistribution.java",
        "CauchyDistribution.java",
        "AbstractRealDistribution.java",
        "AbstractRealDistributionTest.java",
        "NormalDistribution.java"
      ]
    }
  },
  "commits_modify_file_before_fix": {
    "size": 36
  }
}